[tox]
envlist =    clean, flake8, py35, py27, py34, build
minversion = 2.3.1
skipsdist =  True
skip_missing_interpreters = true
toxworkdir = /tmp/tox/sphinxserve

[testenv]
whitelist_externals =
             /bin/sh
             /bin/rm

[testenv:clean]
deps =
commands =   rm -rf dist sphinxserve.egg-info .eggs pex/scripts

[flake8]
exclude =    .git
ignore =     H102,E113,E121,E127,E128,E402,H202,H301,H304,H405,H803

[testenv:flake8]
deps =       -rtests/test_requirements.txt
commands =   flake8 {toxinidir}

[testenv:py35]
deps =       -rrequirements.txt
             -rtests/test_requirements.txt
commands =   py.test -c tests/pytest.ini {posargs}

[testenv:py27]
deps =       -rrequirements.txt
             -rtests/test_requirements.txt
commands =   py.test -c tests/pytest.ini {posargs}

[testenv:py34]
deps =       -rrequirements.txt
             -rtests/test_requirements.txt
commands =   py.test -c tests/pytest.ini {posargs}

[testenv:build-whl]
recreate=    True
deps =       wheel==0.29.0
commands =   {[testenv:clean]commands}
             pip wheel --wheel-dir=dist sphinx<1.3 {toxinidir}

[testenv:dev]
envdir =     /tmp/tox/dev
usedevelop = True
commands =

[testenv:build]
basepython = python3.5
recreate=    True
deps =       wheel==0.29.0
             pex==1.1.6
commands =   {[testenv:build-whl]commands}
             pip wheel --wheel-dir=dist -rpex/pex_requirements.txt
             sh -c '{envdir}/bin/pex -v --disable-cache --no-index -f dist \
                -c sphinxserve -o pex/scripts/sphinxserve dist/*'
             sh -x -c 'openssl sha1 pex/scripts/sphinxserve'
             pip wheel --wheel-dir=dist pex/
             sh -x -c 'openssl sha1 dist/sphinxserve_pex*'
