# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Any(object):
    """
    ``Any`` contains an arbitrary serialized message along with a URL
    that describes the type of the serialized message.


    # JSON

    The JSON representation of an ``Any`` value uses the regular
    representation of the deserialized, embedded message, with an
    additional field ``@type`` which contains the type URL. Example:

        package google.profile;
        message Person {
          string first_name = 1;
          string last_name = 2;
        }

        {
          "@type": "type.googleapis.com/google.profile.Person",
          "firstName": <string>,
          "lastName": <string>
        }

    If the embedded message type is well-known and has a custom JSON
    representation, that representation will be embedded adding a field
    ``value`` which holds the custom JSON in addition to the ``@type``
    field. Example (for message ``google.protobuf.Duration``):

        {
          "@type": "type.googleapis.com/google.protobuf.Duration",
          "value": "1.212s"
        }

    Attributes:
      type_url (string): A URL/resource name whose content describes the type of the
        serialized message.

        For URLs which use the schema ``http``, ``https``, or no schema, the
        following restrictions and interpretations apply:

        * If no schema is provided, ``https`` is assumed.
        * The last segment of the URL's path must represent the fully
          qualified name of the type (as in ``path/google.protobuf.Duration``).
        * An HTTP GET on the URL must yield a ``google.protobuf.Type``
          value in binary format, or produce an error.
        * Applications are allowed to cache lookup results based on the
          URL, or have them precompiled into a binary to avoid any
          lookup. Therefore, binary compatibility needs to be preserved
          on changes to types. (Use versioned type names to manage
          breaking changes.)

        Schemas other than ``http``, ``https`` (or the empty schema) might be
        used with implementation specific semantics.
      value (bytes): Must be valid serialized data of the above specified type.

    """
    pass
