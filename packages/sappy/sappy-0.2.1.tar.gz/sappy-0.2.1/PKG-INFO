Metadata-Version: 1.1
Name: sappy
Version: 0.2.1
Summary: Single-page application server for end-to-end testing.
Home-page: https://github.com/jacebrowning/sappy
Author: Jace Browning
Author-email: jacebrowning@gmail.com
License: MIT
Description: Unix: |Unix Build Status| Windows: |Windows Build Status|\ Metrics:
        |Coverage Status| |Scrutinizer Code Quality|\ Usage: |PyPI Version|
        |PyPI Downloads|
        
        Overview
        ========
        
        Sappy is a simple, single-page application (SPA) web server for
        end-to-end testing.
        
        The Python standard library includes a web server that works great for
        serving up files:
        
        ::
        
            $ python3 -m http.server 8000
            Serving HTTP on 0.0.0.0 port 8000 ...
        
            $ curl http://localhost:8000/index.html
            <!DOCTYPE html>
            <html>
              <head>
                <title>Example Index</title>
            ...
        
        But when used to serve up single-page applications, a ``404`` is
        returned whenever any page other than the index is accessed directly:
        
        ::
        
            $ curl http://localhost:8000/login
            <!DOCTYPE html>
            <html lang=en>
              <title>Error 404 (Not Found)</title
            ...
        
        This project builds on the existing web server code to forward all
        requests to the index. The single-page application’s client-side routing
        can then display the page that corresponds to that request’s URL.
        
        Setup
        =====
        
        Requirements
        ------------
        
        -  Python 3.5+
        
        Installation
        ------------
        
        Install ``sappy`` using pip:
        
        ::
        
            $ pip install sappy
        
        or directly from the source code:
        
        ::
        
            $ git clone https://github.com/jacebrowning/sappy.git
            $ cd sappy
            $ python setup.py install
        
        Usage
        =====
        
        Build your static website (e.g. an Ember application) for production:
        
        ::
        
            $ ember build --environment=production
            Building...
            Built project successfully. Stored in "dist/".
        
        Then serve up the application:
        
        ::
        
            $ sappy
            Serving /home/browning/project/dist/ on 8080
        
        Check out the
        `documentation <http://sappy.readthedocs.io/en/latest/cli>`__ or
        command-line help for additional options:
        
        ::
        
            $ sappy --help
        
        .. |Unix Build Status| image:: http://img.shields.io/travis/jacebrowning/sappy/develop.svg
           :target: https://travis-ci.org/jacebrowning/sappy
        .. |Windows Build Status| image:: https://img.shields.io/appveyor/ci/jacebrowning/sappy/develop.svg
           :target: https://ci.appveyor.com/project/jacebrowning/sappy
        .. |Coverage Status| image:: http://img.shields.io/coveralls/jacebrowning/sappy/develop.svg
           :target: https://coveralls.io/r/jacebrowning/sappy
        .. |Scrutinizer Code Quality| image:: http://img.shields.io/scrutinizer/g/jacebrowning/sappy.svg
           :target: https://scrutinizer-ci.com/g/jacebrowning/sappy/?branch=develop
        .. |PyPI Version| image:: http://img.shields.io/pypi/v/sappy.svg
           :target: https://pypi.python.org/pypi/sappy
        .. |PyPI Downloads| image:: http://img.shields.io/pypi/dm/sappy.svg
           :target: https://pypi.python.org/pypi/sappy
        
        Revision History
        ================
        
        0.2.1 (2016/06/14)
        ------------------
        
        -  Fixed handling of local files.
        
        0.2 (2016/06/09)
        ----------------
        
        -  Added a ``--launch`` option to open the page's index.
        
        0.1 (2016/06/09)
        ----------------
        
        -  Initial release.
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Testing
