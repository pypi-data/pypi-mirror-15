Metadata-Version: 2.0
Name: django-autoadmin
Version: 1.1.1
Summary: Automatic admin users for Django projects.
Home-page: https://github.com/rosarior/django-autoadmin
Author: Roberto Rosario
Author-email: roberto.rosario.gonzalez@gmail.com
License: The MIT License (MIT)
Requires-Dist: django-solo (>=1.1.0)

Copyright (c) 2014 Roberto Rosario

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Description: |PyPI badge| |Installs badge| |License badge| |Wheel badge|
        
        Description
        -----------
        Automatic admin users for Django projects.
        
        |Screenshot|
        
        License
        -------
        
        This project is open sourced under the `MIT License`_.
        
        Installation
        ------------
        
        .. code-block:: bash
        
            $ pip install django-autoadmin
        
        * Add ``'autoadmin',`` to your project's ``INSTALLED_APPS`` list.
        * Load the **autoadmin_tags** in your login template.
        * Call the **autoadmin_partial** to display the information of the autogenerated admin user.
        * Use the management command **createautoadmin** to create an admin user with an automatic password.
        
        by default, django-autoadmin creates a django superuser with the ``username="admin"``, ``email="autoadmin@example.com"`` and ``password`` randomly generated.
        
        you could modify this by creating the following variables in your settings file
        
        ``AUTOADMIN_USERNAME="your_custom_username"``
        
        ``AUTOADMIN_EMAIL="your_custom_email"``
        
        ``AUTOADMIN_PASSWORD="your_custom_password"``
        
        NOTE: if ``AUTOADMIN_PASSWORD`` is ``None``, the password will be randomly generated.
        
        
        Contribute
        ----------
        
        - Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug.
        - Fork `the repository`_ on GitHub to start making your changes to the **master** branch (or branch off of it).
        - Write a test which shows that the bug was fixed or that the feature works as expected.
        - Make sure to add yourself to the `AUTHORS file`_.
        - Send a pull request
        
        .. _`MIT License`: https://github.com/rosarior/django-autoadmin/blob/master/AUTHORS.rst
        .. _`the repository`: http://github.com/rosarior/django-autoadmin
        .. _`AUTHORS file`: https://github.com/rosarior/django-autoadmin/blob/master/AUTHORS.rst
        .. |Screenshot| image:: https://raw.githubusercontent.com/rosarior/django-autoadmin/master/Screenshot.png
        
        
        .. |Installs badge| image:: http://img.shields.io/pypi/dm/django-autoadmin.svg?style=flat
           :target: https://crate.io/packages/django-autoadmin/
        .. |PyPI badge| image:: http://img.shields.io/pypi/v/django-autoadmin.svg?style=flat
           :target: http://badge.fury.io/py/django-autoadmin
        .. |Wheel badge| image:: http://img.shields.io/badge/wheel-yes-green.svg?style=flat
        .. |License badge| image:: http://img.shields.io/badge/license-MIT-green.svg?style=flat
        
        
        1.1.1 (2016-05-05)
        ==================
        - Include missing migrations into package.
        
        1.1.0 (2015-10-16)
        ==================
        - Corrected a situation where project migrating database from old version not using django-autoadmin would have problem logging in.
        - Added a test project
        - Code coverage is now 100%
        - Added tox test support
        - Setting overrides now work all the time
        - django-autoadmin is now tested against Python 2.7, 3.2, 3.3, 3.4, Django 1.7 and 1.8
        - Removed all PEP8 warnings
        - All autoadmin code was moved from the management command to the AutoAdminSingleton manager
        
        1.0.1 (2015-06-14)
        ==================
        
        - No changes, just a version bump as required by PyPI
        
        1.0.0 (2015-06-14)
        ==================
        
        - Update included partial template
        - Django admin interface enabled
        - Drop support for Django < 1.6
        - Adds support Django >= 1.7
        - Autoadmin user is no longer created after database migration
        - Add new createautoadmin management command
        - Uses Django's own createsuperuser management command
        - Adds Django native database migrations
        - Uses AppConfig to about running code during import
        - Adds supports for custom User models
        - ENABLE setting removed
        - Default email changed to autoadmin@example.com
        
        0.5.0 (2014-08-25)
        ==================
        
        - Initial release
        
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
