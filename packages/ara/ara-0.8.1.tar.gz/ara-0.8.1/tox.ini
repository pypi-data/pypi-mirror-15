[tox]
minversion = 2.0
envlist = py27,pep8
skipdist = True

[testenv]
sitepackages=True
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/requirements.txt
	-r{toxinidir}/test-requirements.txt

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:pep8]
commands = flake8 ara

[testenv:py27]
commands =
    py.test tests/unit
passenv =
    HOME

[testenv:cover]
commands =
    py.test --cov=ara --cov-report=html tests/unit
passenv =
    HOME

[testenv:integration]
whitelist_externals = bash
                      rm
commands =
    rm -f "{toxinidir}/tests/integration/ansible.sqlite"
    rm -rf "{toxinidir}/tests/integration/build"
    ansible-playbook -vv {toxinidir}/tests/integration/playbook.yml
    bash -c "ara host show $(ara host list -c ID -f value |head -n1)"
    bash -c "ara host facts $(ara host list -c ID -f value |head -n1)"
    bash -c "ara play show $(ara play list -a -c ID -f value |head -n1)"
    bash -c "ara playbook show $(ara playbook list -c ID -f value |head -n1)"
    bash -c "ara result show $(ara result list -a -c ID -f value |tail -n1) --long"
    bash -c "ara stats show $(ara stats list -c ID -f value |head -n1)"
    bash -c "ara task show $(ara task list -a -c ID -f value |head -n1)"
    bash -c "ara generate {toxinidir}/tests/integration/build && tree {toxinidir}/tests/integration/build"
setenv =
    ANSIBLE_CALLBACK_PLUGINS = {toxinidir}/ara/callback
    ARA_DATABASE = sqlite:////{toxinidir}/tests/integration/ansible.sqlite
    PYTHONUNBUFFERED = 1
passenv =
    HOME

[flake8]
# E123, E125 skipped as they are invalid PEP-8.
ignore = E123,E125,E221
show-source = True
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build
