##
# Example stackd.io configuration for apache
##

{% if with_ssl %}
#
# This is the Apache server configuration file providing SSL support.
# It contains the configuration directives to instruct the server how to
# serve pages over an https connection. For detailing information about these
# directives see <URL:http://httpd.apache.org/docs/2.2/mod/mod_ssl.html>
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.
#

LoadModule ssl_module modules/mod_ssl.so

#
# When we also provide SSL we have to listen to the
# the HTTPS port in addition.
#
Listen 443

##
##  SSL Global Context
##
##  All SSL configuration in this context applies both to
##  the main server and all SSL-enabled virtual hosts.
##

#   Pass Phrase Dialog:
#   Configure the pass phrase gathering process.
#   The filtering dialog program (`builtin' is a internal
#   terminal dialog) has to provide the pass phrase on stdout.
SSLPassPhraseDialog  builtin

#   Inter-Process Session Cache:
#   Configure the SSL Session Cache: First the mechanism
#   to use and second the expiring timeout (in seconds).
SSLSessionCache         shmcb:/var/cache/mod_ssl/scache(512000)
SSLSessionCacheTimeout  300

#   Semaphore:
#   Configure the path to the mutual exclusion semaphore the
#   SSL engine uses internally for inter-process synchronization.
SSLMutex default

#   Pseudo Random Number Generator (PRNG):
#   Configure one or more sources to seed the PRNG of the
#   SSL library. The seed data should be of good random quality.
#   WARNING! On some platforms /dev/random blocks if not enough entropy
#   is available. This means you then cannot use the /dev/random device
#   because it would lead to very long connection times (as long as
#   it requires to make more entropy available). But usually those
#   platforms additionally provide a /dev/urandom device which doesn't
#   block. So, if available, use this one instead. Read the mod_ssl User
#   Manual for more details.
SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin
#SSLRandomSeed startup file:/dev/random  512
#SSLRandomSeed connect file:/dev/random  512
#SSLRandomSeed connect file:/dev/urandom 512

#
# Use "SSLCryptoDevice" to enable any supported hardware
# accelerators. Use "openssl engine -v" to list supported
# engine names.  NOTE: If you enable an accelerator and the
# server does not start, consult the error logs and ensure
# your accelerator is functioning properly.
#
SSLCryptoDevice builtin
#SSLCryptoDevice ubsec
{% endif %}

# Global mod_wsgi configuration
<IfVersion < 2.4 >
    WSGISocketPrefix {{ storage_root }}/var/run
</IfVersion>
WSGIPythonPath {{ stackdio_root }}

{% if with_ssl %}
# Enable listening on port 443 and set up basic SSL. Note that mod_ssl
# must be installed and available.
<VirtualHost *:443>
    SSLEngine On
    SSLCertificateFile /tmp/stackdio.crt
    SSLCertificateKeyFile /tmp/stackdio.key
{% else %}
# By default, serve on port 80. Modify these to suit your needs.
Listen 80
<VirtualHost *:80>
{% endif %}
    # Modify your server administrator email address and server name
    ServerAdmin admin@example.com
    ServerName stackdio.example.com

    DocumentRoot {{ storage_root }}

    # NOTE: The following directories must exist.
    LogLevel warn
    ErrorLog {{ storage_root }}/var/log/web/error_log
    CustomLog {{ storage_root }}/var/log/web/access_log common

    ## Non-Django directories
    Alias /static {{ storage_root }}/static
    <Directory "{{ storage_root }}/static">
        Options -Indexes
        Order deny,allow
        <IfVersion >= 2.4 >
            Require all granted
        </IfVersion>
        <IfVersion < 2.4 >
            Allow from all
        </IfVersion>
    </Directory>

    # Django and mod_wsgi settings
    <Directory {{ stackdio_root }}/stackdio>
        <Files wsgi.py>
            Order deny,allow
            <IfVersion >= 2.4 >
                Require all granted
            </IfVersion>
            <IfVersion < 2.4 >
                Allow from all
            </IfVersion>
        </Files>
    </Directory>

    WSGIDaemonProcess {{ user }} user={{ user }} group={{ user }} processes=2 python-path={{ stackdio_root }}
    WSGIProcessGroup {{ user }}
    WSGIScriptAlias / {{ stackdio_root }}/stackdio/wsgi.py
    WSGIPassAuthorization On
</VirtualHost>
