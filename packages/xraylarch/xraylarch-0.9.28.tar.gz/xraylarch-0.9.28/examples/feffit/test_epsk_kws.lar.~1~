cu = read_ascii('../xafsdata/cu_metal_rt.xdi')
autobk(cu.energy, cu.mutrans, group=cu, rbkg=1.0, kw=1)


fitparams = group(amp=guess(1), de0=guess(0.1),
                  ss2=guess(0.002), delr=guess(0.))

path1 = feffpath('feffcu01.dat', s02 = 'amp', e0 = 'de0',
                 sigma2 = 'ss2', deltar = 'delr')

trans_args = dict(kmin=3, kmax=17, dk=3, window='hanning', rmin=1.4,  rmax=3.0)

out = []
for eps_k in (None, 0.0006, arange(len(cu.k)) * 0.00001):
    cu.epsilon_k = eps_k
    eps_type = 'float'
    if isinstance(eps_k, ndarray):
        eps_type = 'array'
    elif eps_k is None:
        del cu.epsilon_k
        eps_type = 'None'
    #endif

    for kw in (2, (3, 2, 1)):
        s_kw = (repr(kw)+10*' ')[:10]
        for fitspace in ('k', 'r', 'q'):
            trans   = feffit_transform(kw=kw, fitspace=fitspace, **trans_args)
            dataset = feffit_dataset(data=cu, pathlist=[path1], transform=trans)
            fit_out = feffit(fitparams, dataset)

            result  = (fitspace, s_kw, eps_type,
                       fitparams.fit_details.nfev,
                       "%14.5g" % fitparams.chi_reduced,
                       "%.4f(%.4f)" % (fitparams.amp.value, fitparams.amp.stderr),
                       "%.4f(%.4f)" % (fitparams.delr.value, fitparams.delr.stderr),
                       "%.4f(%.4f)" % (fitparams.ss2.value, fitparams.ss2.stderr),
                       "%.4f(%.4f)" % (fitparams.de0.value, fitparams.de0.stderr))

            out.append(result)
            print result
        #endfor
    #endfor
#endfor
