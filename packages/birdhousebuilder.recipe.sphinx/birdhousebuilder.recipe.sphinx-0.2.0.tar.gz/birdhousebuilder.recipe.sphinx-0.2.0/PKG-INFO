Metadata-Version: 1.1
Name: birdhousebuilder.recipe.sphinx
Version: 0.2.0
Summary: Buildout recipe to generate and Sphinx-based documentation for Birdhouse.
Home-page: https://github.com/birdhouse/birdhousebuilder.recipe.sphinx
Author: Birdhouse
Author-email: wps-dev at dkrz.de
License: Apache License 2.0
Description: ******************************
        birdhousebuilder.recipe.sphinx
        ******************************
        
        .. image:: https://travis-ci.org/bird-house/birdhousebuilder.recipe.sphinx.svg?branch=master
           :target: https://travis-ci.org/bird-house/birdhousebuilder.recipe.sphinx
           :alt: Travis Build
        
        .. contents::
        
        Introduction
        ************
        
        Buildout Recipe to setup Sphinx Documentation for `Birdhouse <http://bird-house.github.io/>`_ Components.
        
        The recipe is based on https://pypi.python.org/pypi/collective.recipe.sphinxbuilder
        
        Usage
        *****
        
        The recipe requires that Anaconda is already installed. It assumes that the default Anaconda location is in your home directory ``~/anaconda``. Otherwise you need to set the ``ANACONDA_HOME`` environment variable or the Buildout option `anaconda-home`.
        
        The recipe builds an initial docs folder for Sphinx in `docs`. 
        The recipe configures `sphinx-autoapi` to generate the api reference documetation from the source code. 
        
        The recipe depends on ``birdhousebuilder.recipe.conda`` and ``zc.recipe.egg``
        
        Supported Options
        =================
        
        The recipe supports the following options:
        
        **project** (default: `MyBird`)
            Specify the project name.
        
        **author** (default: `Birdhouse`)
            Specify the author of the project.
        
        **version** (default: `0.1`)
            Specify the version of the project.
        
        **use_autoapi** (default: `true`)
            Set to `fals` if you don't want to use the `sphinx-autoapi`.  
          
        **src** (default: `.`)    
            Specify path to source folder which will be used by `sphinx-autoapi`.
        
        Example Usage
        =============
        
        Set up the docs for the project `Emu`:
        
        .. code-block:: ini
        
          [buildout]
          parts = sphinx
        
          anaconda-home = /home/myself/anaconda
        
          [sphinx]
          recipe = birdhousebuilder.recipe.sphinx
          project = Emu
          version = 0.2
          src = emu
            
        
        
        
        
        
        
        Carsten Ehbrecht <ehbrecht@dkrz.de>
        
        
        Changes
        *******
        
        0.2.0 (2016-07-01)
        ==================
        
        * replaced conda.makedirs by os.makedirs.
        
        0.1.7 (2016-06-02)
        ==================
        
        * fixed readthedocs urls.
        
        0.1.6 (2016-06-01)
        ==================
        
        * rst_epilog links added.
        * ignore localhost links.
        * linkcheck_timeout added.
        
        0.1.5 (2016-02-19)
        ==================
        
        * added use_autoapi option.
        
        0.1.4 (2016-02-19)
        ==================
        
        * added linkcheck options.
        
        0.1.3 (2015-10-24)
        ==================
        
        * setups requirements/rtd.txt for readthedocs.
        
        0.1.2 (2015-10-24)
        ==================
        
        * replaced autodoc by sphinx-autoapi extension
        * using src option for sphinx-autoapi
        
        0.1.1 (2015-10-23)
        ==================
        
        * added extra_paths
        * added sys.path in conf.py template
        
        0.1.0 (2015-10-23)
        ==================
        
        Initial Release
        
        
        
Keywords: buildout sphinx
Platform: UNKNOWN
Classifier: Framework :: Buildout
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 2
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering :: Atmospheric Science
