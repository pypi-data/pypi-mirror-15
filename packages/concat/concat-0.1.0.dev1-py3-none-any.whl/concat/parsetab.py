
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A1C48EE3A11F153E2594AA8F842C06E4'
    
_lr_action_items = {'NONE':([0,1,3,4,5,6,7,10,11,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[20,-40,20,-57,-35,20,-26,-58,20,-10,20,-39,-45,-11,-56,-43,20,-12,20,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,20,-29,-44,-31,-50,-47,-51,20,-46,-48,-54,-52,20,-49,-16,-15,-13,-30,-53,20,20,-18,]),'DEF':([0,3,6,12,17,24,28,43,70,72,73,76,77,81,],[9,9,9,-10,-11,9,-12,-17,-16,-15,-13,9,9,-18,]),'INDENT':([71,],[76,]),'DOT':([0,1,3,4,5,6,7,10,11,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[23,-40,23,-57,-35,23,-26,-58,23,-10,23,-39,-45,-11,-56,-43,23,-12,23,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,23,-29,-44,-31,-50,-47,-51,23,-46,-48,-54,-52,23,-49,-16,-15,-13,-30,-53,23,23,-18,]),'ENCODING':([0,3,6,12,17,24,28,43,70,72,73,81,],[3,3,3,-10,-11,3,-12,-17,-16,-15,-13,-18,]),'FROM':([0,1,3,4,5,6,7,10,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,55,56,57,58,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[26,-40,26,-57,-35,26,-26,-58,-10,26,-39,-45,-11,-56,-43,26,-12,-32,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,26,-29,-44,-31,-50,-47,-51,-46,-48,-54,-52,26,-49,-16,-15,-13,-30,-53,26,26,-18,]),'DEDENT':([12,17,28,43,70,72,73,77,78,79,80,81,],[-10,-11,-12,-17,-16,-15,-13,-20,-19,81,-21,-18,]),'ENDMARKER':([3,6,8,12,17,18,21,24,27,28,31,43,44,45,52,67,70,72,73,81,],[-59,-59,-2,-10,-11,-5,-3,-59,-4,-12,-1,-17,-9,-6,67,-7,-16,-15,-13,-18,]),'RSQB':([1,4,5,10,15,16,19,20,29,32,33,35,36,38,39,41,42,48,51,55,56,57,58,60,61,62,63,65,75,],[-40,-57,-35,-58,-39,-45,-56,-43,-32,-41,-38,-33,-34,-42,-55,-37,-36,65,-44,-31,-50,-47,-51,-46,-48,-54,-52,-49,-53,]),'LPAR':([40,],[59,]),'UNARY_BOOL_FUNC':([0,1,3,4,5,6,7,10,11,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[4,-40,4,-57,-35,4,-26,-58,4,-10,4,-39,-45,-11,-56,-43,4,-12,4,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,4,-29,-44,-31,-50,-47,-51,4,-46,-48,-54,-52,4,-49,-16,-15,-13,-30,-53,4,4,-18,]),'RPAR':([1,4,5,10,15,16,19,20,29,32,33,35,36,38,39,41,42,51,55,56,57,58,60,61,62,63,65,69,75,],[-40,-57,-35,-58,-39,-45,-56,-43,-32,-41,-38,-33,-34,-42,-55,-37,-36,-44,-31,-50,-47,-51,-46,-48,-54,-52,-49,75,-53,]),'NEWLINE':([0,1,2,3,4,5,6,7,10,12,15,16,17,19,20,24,25,28,29,30,32,33,34,35,36,37,38,39,41,42,43,50,51,53,55,56,57,58,60,61,62,63,64,65,66,70,72,73,74,75,81,],[6,-40,43,6,-57,-35,6,-26,-58,-10,-39,-45,-11,-56,-43,6,-22,-12,-32,-23,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,-29,-44,-24,-31,-50,-47,-51,-46,-48,-54,-52,71,-49,-25,-16,-15,-13,-30,-53,-18,]),'NAME':([0,1,3,4,5,6,7,9,10,11,12,13,14,15,16,17,19,20,23,24,26,28,29,32,33,34,35,36,37,38,39,40,41,42,43,49,50,51,55,56,57,58,59,60,61,62,63,64,65,68,70,72,73,74,75,76,77,81,],[10,-40,10,-57,-35,10,-26,47,-58,10,-10,10,50,-39,-45,-11,-56,-43,51,10,54,-12,10,-41,-38,-27,-33,-34,-28,-42,-55,56,-37,-36,-17,10,-29,-44,-31,-50,-47,-51,10,-46,-48,-54,-52,10,-49,74,-16,-15,-13,-30,-53,10,10,-18,]),'LSQB':([0,1,3,4,5,6,7,10,11,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,40,41,42,43,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[11,-40,11,-57,-35,11,-26,-58,11,-10,11,-39,-45,-11,-56,-43,11,-12,11,-41,-38,-27,-33,-34,-28,-42,-55,11,-37,-36,-17,11,-29,-44,-31,-50,-47,-51,11,-46,-48,-54,-52,11,-49,-16,-15,-13,-30,-53,11,11,-18,]),'$end':([0,3,6,8,12,17,18,21,22,24,27,28,31,43,44,45,52,67,70,72,73,81,],[-59,-59,-59,-2,-10,-11,-5,-3,0,-59,-4,-12,-1,-17,-9,-6,-8,-7,-16,-15,-13,-18,]),'COLON':([46,47,],[64,-14,]),'SEMI':([0,1,3,4,5,6,7,10,12,15,16,17,19,20,24,25,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,55,56,57,58,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[13,-40,13,-57,-35,13,-26,-58,-10,-39,-45,-11,-56,-43,13,53,-12,-32,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,13,-29,-44,-31,-50,-47,-51,-46,-48,-54,-52,13,-49,-16,-15,-13,-30,-53,13,13,-18,]),'STRING':([0,1,3,4,5,6,7,10,11,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[39,-40,39,-57,-35,39,-26,-58,39,-10,39,-39,-45,-11,-56,-43,39,-12,39,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,39,-29,-44,-31,-50,-47,-51,39,-46,-48,-54,-52,39,-49,-16,-15,-13,-30,-53,39,39,-18,]),'IMPORT':([0,1,3,4,5,6,7,10,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,54,55,56,57,58,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[14,-40,14,-57,-35,14,-26,-58,-10,14,-39,-45,-11,-56,-43,14,-12,-32,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,14,-29,-44,68,-31,-50,-47,-51,-46,-48,-54,-52,14,-49,-16,-15,-13,-30,-53,14,14,-18,]),'DOLLARSIGN':([0,1,3,4,5,6,7,10,11,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[40,-40,40,-57,-35,40,-26,-58,40,-10,40,-39,-45,-11,-56,-43,40,-12,40,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,40,-29,-44,-31,-50,-47,-51,40,-46,-48,-54,-52,40,-49,-16,-15,-13,-30,-53,40,40,-18,]),'NUMBER':([0,1,3,4,5,6,7,10,11,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[16,-40,16,-57,-35,16,-26,-58,16,-10,16,-39,-45,-11,-56,-43,16,-12,16,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,16,-29,-44,-31,-50,-47,-51,16,-46,-48,-54,-52,16,-49,-16,-15,-13,-30,-53,16,16,-18,]),'PLUS':([40,],[62,]),'BIN_BOOL_FUNC':([0,1,3,4,5,6,7,10,11,12,13,15,16,17,19,20,24,28,29,32,33,34,35,36,37,38,39,41,42,43,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,72,73,74,75,76,77,81,],[19,-40,19,-57,-35,19,-26,-58,19,-10,19,-39,-45,-11,-56,-43,19,-12,19,-41,-38,-27,-33,-34,-28,-42,-55,-37,-36,-17,19,-29,-44,-31,-50,-47,-51,19,-46,-48,-54,-52,19,-49,-16,-15,-13,-30,-53,19,19,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module_newline':([0,3,6,24,],[21,21,21,21,]),'module':([0,3,6,24,],[22,44,45,52,]),'statement':([0,3,6,24,76,77,],[24,24,24,24,77,77,]),'stmt_list':([0,3,6,24,49,64,76,77,],[2,2,2,2,66,2,2,2,]),'implicit_number_push':([0,3,6,11,13,24,29,49,59,64,76,77,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'simple_stmt':([0,3,6,13,24,49,64,76,77,],[25,25,25,49,25,25,25,25,25,]),'attributeref':([0,3,6,11,13,24,29,49,59,64,76,77,],[1,1,1,1,1,1,1,1,1,1,1,1,]),'funcdef':([0,3,6,24,76,77,],[28,28,28,28,28,28,]),'statement_statement_plus':([76,77,],[78,78,]),'word':([0,3,6,11,13,24,29,49,59,64,76,77,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'semi_stmt_list':([0,3,6,24,49,64,76,77,],[30,30,30,30,30,30,30,30,]),'func_compose':([0,3,6,11,13,24,29,49,59,64,76,77,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'module_encoding':([0,3,6,24,],[31,31,31,31,]),'unary_bool_func':([0,3,6,11,13,24,29,49,59,64,76,77,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'primary':([40,],[60,]),'subscription':([0,3,6,11,13,24,29,40,49,59,64,76,77,],[32,32,32,32,32,32,32,61,32,32,32,32,32,]),'expression':([0,3,6,11,13,24,29,49,59,64,76,77,],[7,7,7,48,7,7,55,7,69,7,7,7,]),'statement_plus':([76,77,],[79,80,]),'push_primary':([0,3,6,11,13,24,29,49,59,64,76,77,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'import_stmt':([0,3,6,13,24,49,64,76,77,],[34,34,34,34,34,34,34,34,34,]),'funcname':([9,],[46,]),'implicit_string_push':([0,3,6,11,13,24,29,49,59,64,76,77,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'bin_bool_func':([0,3,6,11,13,24,29,49,59,64,76,77,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'atom':([40,],[57,]),'from_import_stmt':([0,3,6,13,24,49,64,76,77,],[37,37,37,37,37,37,37,37,37,]),'terminated_stmt_list':([0,3,6,24,64,76,77,],[12,12,12,12,72,12,12,]),'parenth_form':([40,],[63,]),'suite':([64,],[73,]),'none':([0,3,6,11,13,24,29,49,59,64,76,77,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'module_statement':([0,3,6,24,],[8,8,8,8,]),'push_plus':([0,3,6,11,13,24,29,49,59,64,76,77,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'empty_module':([0,3,6,24,],[27,27,27,27,]),'compound_stmt':([0,3,6,24,76,77,],[17,17,17,17,17,17,]),'empty':([0,3,6,24,],[18,18,18,18,]),'enclosure':([40,],[58,]),'indented_block':([64,],[70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> module_encoding','module',1,'p_module','parse.py',23),
  ('module -> module_statement','module',1,'p_module','parse.py',24),
  ('module -> module_newline','module',1,'p_module','parse.py',25),
  ('module -> empty_module','module',1,'p_module','parse.py',26),
  ('empty_module -> empty','empty_module',1,'p_empty_module','parse.py',32),
  ('module_newline -> NEWLINE module','module_newline',2,'p_module_newline','parse.py',37),
  ('module_statement -> statement module ENDMARKER','module_statement',3,'p_module_statment','parse.py',42),
  ('module_statement -> statement module','module_statement',2,'p_module_statment','parse.py',43),
  ('module_encoding -> ENCODING module','module_encoding',2,'p_module_encoding','parse.py',53),
  ('statement -> terminated_stmt_list','statement',1,'p_statement','parse.py',63),
  ('statement -> compound_stmt','statement',1,'p_statement','parse.py',64),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','parse.py',70),
  ('funcdef -> DEF funcname COLON suite','funcdef',4,'p_funcdef','parse.py',75),
  ('funcname -> NAME','funcname',1,'p_funcname','parse.py',81),
  ('suite -> terminated_stmt_list','suite',1,'p_suite','parse.py',86),
  ('suite -> indented_block','suite',1,'p_suite','parse.py',87),
  ('terminated_stmt_list -> stmt_list NEWLINE','terminated_stmt_list',2,'p_terminated_stmt_list','parse.py',93),
  ('indented_block -> NEWLINE INDENT statement_plus DEDENT','indented_block',4,'p_indented_block','parse.py',98),
  ('statement_plus -> statement_statement_plus','statement_plus',1,'p_statement_plus','parse.py',103),
  ('statement_plus -> statement','statement_plus',1,'p_statement_plus','parse.py',104),
  ('statement_statement_plus -> statement statement_plus','statement_statement_plus',2,'p_statement_statement_plus','parse.py',112),
  ('stmt_list -> simple_stmt','stmt_list',1,'p_stmt_list','parse.py',119),
  ('stmt_list -> semi_stmt_list','stmt_list',1,'p_stmt_list','parse.py',120),
  ('stmt_list -> simple_stmt SEMI','stmt_list',2,'p_stmt_list','parse.py',121),
  ('semi_stmt_list -> SEMI simple_stmt stmt_list','semi_stmt_list',3,'p_semi_stmt_list','parse.py',127),
  ('simple_stmt -> expression','simple_stmt',1,'p_simple_stmt','parse.py',132),
  ('simple_stmt -> import_stmt','simple_stmt',1,'p_simple_stmt','parse.py',133),
  ('simple_stmt -> from_import_stmt','simple_stmt',1,'p_simple_stmt','parse.py',134),
  ('import_stmt -> IMPORT NAME','import_stmt',2,'p_import_stmt','parse.py',139),
  ('from_import_stmt -> FROM NAME IMPORT NAME','from_import_stmt',4,'p_from_import_stmt','parse.py',145),
  ('expression -> word expression','expression',2,'p_expression','parse.py',152),
  ('expression -> word','expression',1,'p_expression','parse.py',153),
  ('word -> implicit_string_push','word',1,'p_word','parse.py',158),
  ('word -> bin_bool_func','word',1,'p_word','parse.py',159),
  ('word -> unary_bool_func','word',1,'p_word','parse.py',160),
  ('word -> func_compose','word',1,'p_word','parse.py',161),
  ('word -> implicit_number_push','word',1,'p_word','parse.py',162),
  ('word -> push_primary','word',1,'p_word','parse.py',163),
  ('word -> push_plus','word',1,'p_word','parse.py',164),
  ('word -> attributeref','word',1,'p_word','parse.py',165),
  ('word -> subscription','word',1,'p_word','parse.py',166),
  ('word -> none','word',1,'p_word','parse.py',167),
  ('none -> NONE','none',1,'p_none','parse.py',173),
  ('attributeref -> DOT NAME','attributeref',2,'p_attributeref','parse.py',179),
  ('implicit_number_push -> NUMBER','implicit_number_push',1,'p_implicit_number_push','parse.py',186),
  ('push_primary -> DOLLARSIGN primary','push_primary',2,'p_push_primary','parse.py',192),
  ('primary -> atom','primary',1,'p_primary','parse.py',200),
  ('primary -> subscription','primary',1,'p_primary','parse.py',201),
  ('subscription -> LSQB expression RSQB','subscription',3,'p_subscription','parse.py',207),
  ('atom -> NAME','atom',1,'p_atom','parse.py',222),
  ('atom -> enclosure','atom',1,'p_atom','parse.py',223),
  ('enclosure -> parenth_form','enclosure',1,'p_enclosure','parse.py',233),
  ('parenth_form -> LPAR expression RPAR','parenth_form',3,'p_parenth_form','parse.py',238),
  ('push_plus -> DOLLARSIGN PLUS','push_plus',2,'p_push_plus','parse.py',243),
  ('implicit_string_push -> STRING','implicit_string_push',1,'p_implicit_string_push','parse.py',249),
  ('bin_bool_func -> BIN_BOOL_FUNC','bin_bool_func',1,'p_bin_bool_func','parse.py',255),
  ('unary_bool_func -> UNARY_BOOL_FUNC','unary_bool_func',1,'p_unary_bool_func','parse.py',262),
  ('func_compose -> NAME','func_compose',1,'p_func_compose','parse.py',268),
  ('empty -> <empty>','empty',0,'p_empty','parse.py',302),
]
