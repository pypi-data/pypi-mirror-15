{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/src/connection.js","js/src/main.js","js/src/ui.js","node_modules/websocket/lib/browser.js","node_modules/websocket/lib/version.js","node_modules/websocket/package.json"],"names":[],"mappings":"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":"databench.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","if (typeof WebSocket === 'undefined') {\n    var WebSocket = require('websocket').w3cwebsocket;\n}\n\nexport class Connection {\n    constructor(analysis_id=null, ws_url=null) {\n        this.analysis_id = analysis_id;\n        this.ws_url = ws_url ? ws_url : Connection.guess_ws_url();\n\n        this.error_cb = (msg) => {\n            if (msg != null)\n                return console.log(`connection error: ${msg}`);\n        }\n        this.on_callbacks = {};\n        this.onProcess_callbacks = {};\n\n        this.ws_reconnect_attempt = 0;\n        this.ws_reconnect_delay = 100.0;\n\n        this.socket = null;\n        this.socket_check_open = null;\n\n        // bind methods\n        this.connect = this.connect.bind(this);\n        this.ws_check_open = this.ws_check_open.bind(this);\n        this.ws_onopen = this.ws_onopen.bind(this);\n        this.ws_onclose = this.ws_onclose.bind(this);\n        this.ws_onmessage = this.ws_onmessage.bind(this);\n        this.on = this.on.bind(this);\n        this.emit = this.emit.bind(this);\n        this.onProcess = this.onProcess.bind(this);\n    }\n\n    static guess_ws_url() {\n        var ws_protocol = 'ws';\n        if (location.origin.startsWith('https://')) ws_protocol = 'wss';\n\n        let path = location.pathname.substring(0, location.pathname.lastIndexOf('/'));\n        return `${ws_protocol}://${document.domain}:${location.port}${path}/ws`;\n    }\n\n    connect() {\n        this.socket = new WebSocket(this.ws_url);\n\n        this.socket_check_open = setInterval(this.ws_check_open, 2000);\n        this.socket.onopen = this.ws_onopen;\n        this.socket.onclose = this.ws_onclose;\n        this.socket.onmessage = this.ws_onmessage;\n        return this;\n    }\n\n    ws_check_open() {\n        if (this.socket.readyState == this.socket.CONNECTING) {\n            return;\n        }\n        if (this.socket.readyState != this.socket.OPEN) {\n            this.error_cb(\n                'Connection could not be opened. '+\n                'Please <a href=\"javascript:location.reload(true);\" '+\n                'class=\"alert-link\">reload</a> this page to try again.'\n            );\n        }\n        clearInterval(this.socket_check_open);\n    }\n\n    ws_onopen() {\n        this.ws_reconnect_attempt = 0;\n        this.ws_reconnect_delay = 100.0;\n        this.error_cb();  // clear errors\n        this.socket.send(JSON.stringify({'__connect': this.analysis_id}));\n    }\n\n    ws_onclose() {\n        clearInterval(this.socket_check_open);\n\n        this.ws_reconnect_attempt += 1;\n        this.ws_reconnect_delay *= 2;\n\n        if (this.ws_reconnect_attempt > 3) {\n            this.error_cb(\n                'Connection closed. '+\n                'Please <a href=\"javascript:location.reload(true);\" '+\n                'class=\"alert-link\">reload</a> this page to reconnect.'\n            );\n            return;\n        }\n\n        let actual_delay = 0.7 * this.ws_reconnect_delay + 0.3 * Math.random() * this.ws_reconnect_delay;\n        console.log(`WebSocket reconnect attempt ${this.ws_reconnect_attempt} in ${actual_delay.toFixed(0)}ms.`);\n        setTimeout(this.connect, actual_delay);\n    }\n\n    ws_onmessage(event) {\n        let message = JSON.parse(event.data);\n\n        // connect response\n        if (message.signal == '__connect') {\n            this.analysis_id = message.load.analysis_id;\n        }\n\n        // processes\n        if (message.signal == '__process') {\n            let id = message.load.id;\n            let status = message.load.status;\n            this.onProcess_callbacks[id].map((cb) => cb(status));\n        }\n\n        // normal message\n        if (message.signal in this.on_callbacks) {\n            this.on_callbacks[message.signal].map((cb) => cb(message.load));\n        }\n    }\n\n\n    on(signal, callback) {\n        if (typeof(signal) === \"string\") {\n            if (!(signal in this.on_callbacks))\n                this.on_callbacks[signal] = [];\n            this.on_callbacks[signal].push(callback);\n        }else if(typeof(signal) === \"object\") {\n            for (let signalName in signal) {\n                let entryName = signal[signalName];\n                let filtered_callback = data => {\n                    if (data.hasOwnProperty(entryName)) {\n                        callback(data[entryName]);\n                    }\n                };\n\n                if (!(signalName in this.on_callbacks))\n                    this.on_callbacks[signalName] = [];\n                this.on_callbacks[signalName].push(filtered_callback);\n            }\n        }\n        return this;\n    }\n\n    emit(signalName, message) {\n        if (this.socket == null  ||  this.socket.readyState != this.socket.OPEN) {\n            setTimeout(() => this.emit(signalName, message), 5);\n            return;\n        }\n        this.socket.send(JSON.stringify({'signal':signalName, 'load':message}));\n        return this;\n    }\n\n    onProcess(processID, callback) {\n        if (!(processID in this.onProcess_callbacks))\n            this.onProcess_callbacks[processID] = [];\n        this.onProcess_callbacks[processID].push(callback);\n        return this;\n    }\n}\n","import * as ui from './ui';\nimport { Connection } from './connection';\n\n// create a public interface\nif (typeof window !== 'undefined') {\n\twindow.Databench = { ui, Connection };\n}\nexport { ui, Connection };\n","\nexport function wire(conn) {\n    StatusLog.wire(d);\n    Log.wire(d);\n    Button.wire(d);\n    Slider.wire(d);\n    return conn;\n}\n\n\nexport class Log {\n    constructor(node, consoleFnName='log', limit=20, length_limit=250) {\n        this.node = node;\n        this.consoleFnName = consoleFnName;\n        this.limit = limit;\n        this.length_limit = length_limit;\n        this._messages = [];\n\n        // bind methods\n        this.render = this.render.bind(this);\n        this.add = this.add.bind(this);\n\n        // capture events from frontend\n        let _consoleFnOriginal = console[consoleFnName];\n        console[consoleFnName] = (message) => {\n            this.add(message, 'frontend');\n            _consoleFnOriginal.apply(console, [message]);\n        }\n    }\n\n    render() {\n        while(this._messages.length > this.limit) this._messages.shift();\n\n        this.node.innerText = this._messages\n            .map((m) => m.join(''))\n            .map((m) => ((m.length > this.length_limit)\n                         ? m.substr(0, this.length_limit)+'...'\n                         : m))\n            .join('\\n');\n\n        return this;\n    }\n\n    add(message, source='unknown') {\n        if (typeof message != \"string\") {\n            message = JSON.stringify(message);\n        }\n\n        let padded_source = ' '.repeat(Math.max(0, 8 - source.length)) + source;\n        this._messages.push([`${padded_source}: ${message}`]);\n        this.render();\n        return this;\n    }\n\n    static wire(conn, id='log', source='backend', consoleFnName='log', limit=20, length_limit=250) {\n        let node = document.getElementById(id);\n        if (node == null) return;\n\n        console.log(`Wiring element id=${id} to ${source}.`);\n        let l = new Log(node, consoleFnName, limit, length_limit);\n        conn.on('log', (message) => l.add(message, source));\n        return this;\n    }\n};\n\n\nexport class StatusLog {\n    constructor(node, formatter=StatusLog.default_alert) {\n        this.node = node;\n        this.formatter = formatter;\n        this._messages = new Map();\n\n        // bind methods\n        this.render = this.render.bind(this);\n        this.add = this.add.bind(this);\n    }\n\n    static default_alert(msg, c) {\n        let c_format = c <= 1 ? '' : `<b>(${c})</b> `;\n        return `<div class=\"alert alert-danger\">${c_format}${msg}</div>`;\n    }\n\n    render() {\n        let formatted = [...this._messages].map(([m, c]) => this.formatter(m, c));\n        this.node.innerHTML = formatted.join('\\n');\n        return this;\n    }\n\n    add(msg) {\n        if (msg == null) {\n            this._messages.clear();\n            return;\n        }\n        if (typeof msg != \"string\") {\n            msg = JSON.stringify(msg);\n        }\n\n        if (this._messages.has(msg)) {\n            this._messages.set(msg, this._messages.get(msg) + 1);\n        } else {\n            this._messages.set(msg, 1);\n        }\n        this.render();\n        return this;\n    }\n\n    static wire(conn, id='ws-alerts', formatter=StatusLog.default_alert) {\n        let node = document.getElementById(id);\n        if (node == null) return;\n\n        console.log(`Wiring element id=${id}.`);\n        let l = new StatusLog(node, formatter);\n        conn.error_cb = l.add;\n    }\n};\n\n\nexport class Button {\n    constructor(node) {\n        this.IDLE = 0;\n        this.ACTIVE = 2;\n\n        this.node = node;\n        this.click_cb = (processID) => console.log(`click on ${this.node} with ${processID}`);\n        this._state = this.IDLE;\n\n        // bind methods\n        this.render = this.render.bind(this);\n        this.click = this.click.bind(this);\n        this.state = this.state.bind(this);\n\n        this.node.addEventListener('click', this.click, false);\n    }\n\n    render() {\n        switch (this._state) {\n            case this.ACTIVE:\n                this.node.classList.add('disabled');\n                break;\n            default:\n                this.node.classList.remove('disabled');\n        }\n        return this;\n    }\n\n    click() {\n        if (this._state != this.IDLE) return;\n\n        let processID = Math.floor(Math.random() * 0x100000);\n        this.click_cb(processID);\n        return this;\n    }\n\n    state(s) {\n        if (s != this.IDLE && s != this.ACTIVE) return;\n\n        this._state = s;\n        this.render();\n        return this;\n    }\n\n    static wire(conn) {\n        let nodes = Array.from(document.getElementsByTagName('BUTTON'));\n        for (let n of nodes) {\n            let signal = n.dataset.signal;\n            if (!signal) continue;\n\n            console.log(`Wiring button ${n} to signal ${signal}.`);\n            let b = new Button(n);\n\n            // set up click callback\n            b.click_cb = (processID) => {\n                // set up action callback\n                conn.onProcess(processID, (status) => {\n                    switch (status) {\n                        case 'start':\n                            b.state(b.ACTIVE);\n                            break;\n                        case 'end':\n                            b.state(b.IDLE);\n                            break;\n                        default:\n                            console.log('error');\n                    }\n                });\n\n                let message = {};\n                if (n.dataset.message) message = JSON.parse(n.dataset.message);\n                message['__process_id'] = processID;\n                conn.emit(signal, message);\n            };\n        }\n    }\n}\n\n\nexport class Slider {\n    constructor(node, label_node) {\n        this.node = node;\n        this.label_node = label_node;\n        this.label_html = label_node ? label_node.innerHTML : null;\n        this.change_cb = (value) => console.log(`slider value ${value}`);\n        this._v_to_slider = (value) => value;\n        this._slider_to_v = (s) => s;\n        this._v_repr = (v) => v;\n\n        // bind methods\n        this.v_to_slider = this.v_to_slider.bind(this);\n        this.slider_to_v = this.slider_to_v.bind(this);\n        this.v_repr = this.v_repr.bind(this);\n        this.render = this.render.bind(this);\n        this.value = this.value.bind(this);\n        this.change = this.change.bind(this);\n\n        this.node.addEventListener('input', this.render, false);\n        this.node.addEventListener('change', this.change, false);\n        this.render();\n    }\n\n    v_to_slider(fn) {\n        this._v_to_slider = fn;\n        return this;\n    }\n\n    slider_to_v(fn) {\n        this._slider_to_v = fn;\n        return this;\n    }\n\n    v_repr(fn) {\n        this._v_repr = fn;\n        this.render();\n        return this;\n    }\n\n    render() {\n        let v = this.value();\n        if (this.label_node) {\n            this.label_node.innerHTML = `${this.label_html} ${this._v_repr(v)}`;\n        }\n        return this;\n    }\n\n    value(v) {\n        if (!v) {\n            // reading value\n            v = this._slider_to_v(parseFloat(this.node.value));\n            return v;\n        }\n\n        // setting value\n        this.node.value = this._v_to_slider(v);\n        this.render();\n        return this;\n    }\n\n    change() {\n        this.change_cb(this.value());\n    }\n\n    static wire(conn) {\n        // preprocess all labels on the page\n        let labels = Array.from(document.getElementsByTagName('LABEL'));\n        for (let l of labels) {\n            if (l.htmlFor) {\n                let n = document.getElementsByName(l.htmlFor)[0];\n                if (n) n.label = l;\n            }\n        }\n\n        let nodes = Array.from(document.getElementsByTagName('INPUT'));\n        for (let n of nodes) {\n            if (n.getAttribute('type') != 'range') continue;\n\n            // construct signal\n            let signal = null;\n            if (n.dataset.signal) {\n                signal = n.dataset.signal;\n            } else if (n.dataset.instance) {\n                signal = 'data';\n            } else if (n.dataset.global) {\n                signal = 'global_data';\n            } else if (n.getAttribute('name')) {\n                signal = n.getAttribute('name');\n            }\n            if (!signal) {\n                console.log(`Could not determine signal name for ${n}.`);\n                return;\n            }\n\n            console.log(`Wiring slider ${n} to signal ${signal}.`);\n            let s = new Slider(n, n.label);\n            n.databench_ui = s;\n\n            // handle events from frontend\n            s.change_cb = (value) => {\n                // construct message\n                let message = s.value();\n                if (n.dataset.message) {\n                    message = JSON.parse(n.dataset.message);\n                    message.value = s.value();\n                }\n\n                // process message in case signal bound to data or global_data\n                if (signal == 'data') {\n                    message = { [n.dataset.instance]: message };\n                } else if (signal == 'global_data') {\n                    message = { [n.dataset.global]: message };\n                }\n\n                conn.emit(signal, message);\n            };\n\n            // handle events from backend\n            if (signal == 'data') {\n                conn.on('data', (message) => {\n                    if (n.dataset.instance in message) {\n                        s.value(message[n.dataset.instance]);\n                    }\n                });\n            } else if (signal == 'global_data') {\n                conn.on('global_data', (message) => {\n                    if (n.dataset.global in message) {\n                        s.value(message[n.dataset.global]);\n                    }\n                });\n            } else {\n                conn.on(signal, (message) => s.value(message));\n            }\n        }\n    }\n}\n","var _global = (function() { return this; })();\nvar nativeWebSocket = _global.WebSocket || _global.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new nativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new nativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\n\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : nativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","module.exports={\n  \"_args\": [\n    [\n      \"websocket@^1.0.22\",\n      \"/Users/svenkreiss/tech/databench\"\n    ]\n  ],\n  \"_from\": \"websocket@>=1.0.22 <2.0.0\",\n  \"_id\": \"websocket@1.0.22\",\n  \"_inCache\": true,\n  \"_installable\": true,\n  \"_location\": \"/websocket\",\n  \"_nodeVersion\": \"3.3.1\",\n  \"_npmUser\": {\n    \"email\": \"brian@worlize.com\",\n    \"name\": \"theturtle32\"\n  },\n  \"_npmVersion\": \"2.14.3\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"name\": \"websocket\",\n    \"raw\": \"websocket@^1.0.22\",\n    \"rawSpec\": \"^1.0.22\",\n    \"scope\": null,\n    \"spec\": \">=1.0.22 <2.0.0\",\n    \"type\": \"range\"\n  },\n  \"_requiredBy\": [\n    \"/\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/websocket/-/websocket-1.0.22.tgz\",\n  \"_shasum\": \"8c33e3449f879aaf518297c9744cebf812b9e3d8\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"websocket@^1.0.22\",\n  \"_where\": \"/Users/svenkreiss/tech/databench\",\n  \"author\": {\n    \"email\": \"brian@worlize.com\",\n    \"name\": \"Brian McKelvey\",\n    \"url\": \"https://www.worlize.com/\"\n  },\n  \"browser\": \"lib/browser.js\",\n  \"bugs\": {\n    \"url\": \"https://github.com/theturtle32/WebSocket-Node/issues\"\n  },\n  \"config\": {\n    \"verbose\": false\n  },\n  \"contributors\": [\n    {\n      \"email\": \"ibc@aliax.net\",\n      \"name\": \"Iñaki Baz Castillo\",\n      \"url\": \"http://dev.sipdoc.net\"\n    }\n  ],\n  \"dependencies\": {\n    \"debug\": \"~2.2.0\",\n    \"nan\": \"~2.0.5\",\n    \"typedarray-to-buffer\": \"~3.0.3\",\n    \"yaeti\": \"~0.0.4\"\n  },\n  \"description\": \"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.\",\n  \"devDependencies\": {\n    \"buffer-equal\": \"^0.0.1\",\n    \"faucet\": \"^0.0.1\",\n    \"gulp\": \"git+https://github.com/gulpjs/gulp.git#4.0\",\n    \"gulp-jshint\": \"^1.11.2\",\n    \"jshint-stylish\": \"^1.0.2\",\n    \"tape\": \"^4.0.1\"\n  },\n  \"directories\": {\n    \"lib\": \"./lib\"\n  },\n  \"dist\": {\n    \"shasum\": \"8c33e3449f879aaf518297c9744cebf812b9e3d8\",\n    \"tarball\": \"https://registry.npmjs.org/websocket/-/websocket-1.0.22.tgz\"\n  },\n  \"engines\": {\n    \"node\": \">=0.8.0\"\n  },\n  \"gitHead\": \"19108bbfd7d94a5cd02dbff3495eafee9e901ca4\",\n  \"homepage\": \"https://github.com/theturtle32/WebSocket-Node\",\n  \"keywords\": [\n    \"websocket\",\n    \"websockets\",\n    \"socket\",\n    \"networking\",\n    \"comet\",\n    \"push\",\n    \"RFC-6455\",\n    \"realtime\",\n    \"server\",\n    \"client\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"main\": \"index\",\n  \"maintainers\": [\n    {\n      \"email\": \"brian@worlize.com\",\n      \"name\": \"theturtle32\"\n    }\n  ],\n  \"name\": \"websocket\",\n  \"optionalDependencies\": {},\n  \"readme\": \"ERROR: No README data found!\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/theturtle32/WebSocket-Node.git\"\n  },\n  \"scripts\": {\n    \"gulp\": \"gulp\",\n    \"install\": \"(node-gyp rebuild 2> builderror.log) || (exit 0)\",\n    \"test\": \"faucet test/unit\"\n  },\n  \"version\": \"1.0.22\"\n}\n"]}