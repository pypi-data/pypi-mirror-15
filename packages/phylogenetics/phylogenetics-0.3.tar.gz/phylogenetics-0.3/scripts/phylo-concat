#!/usr/bin/env python

# ----------------------------------------------------
# Blast a set of seed sequences in fasta file.
# ----------------------------------------------------

import argparse
from phylogenetics.homologs import load_homologset, concat_homolog_sets

def main():
    """
        Concatenate a set of homologs.
    """

    # ---------------------------------------------------
    # command-line arg parsing
    # ---------------------------------------------------
    parser = argparse.ArgumentParser(description="""
    Concatenate (i.e. merge) multiple sets of Homologs.
    """)

    parser.add_argument("-i", "--input",
            help="Input pickle files with all homologsets to concatenate.",
            nargs='+',
            type=str,
            required=True)

    parser.add_argument("-o", "--output",
            help="Filename to save pickled homologset.",
            type=str,
            required=True)

    parser.add_argument("--renumber",
            help="Renumber the homologset IDs?",
            type=bool,
            default=True)

    # Parse the arguments
    args = parser.parse_args()

    # ---------------------------------------------------
    # Main code for MSA
    # ---------------------------------------------------

    if type(args.input) != list:
        raise Exception("Must give at least two HomologSet files.")

    # Open homologset and run msaprobs to align sequences.
    hs = load_homologset(args.input[0])
    for i in range(1,len(args.input)):
        hs2 = load_homologset(args.input[i])
        hs = concat_homolog_sets(hs, hs2, renumber=args.renumber)

    # Write to homologset pickle
    hs.write(args.output, format="pickle")

if __name__ == "__main__":
    main()
