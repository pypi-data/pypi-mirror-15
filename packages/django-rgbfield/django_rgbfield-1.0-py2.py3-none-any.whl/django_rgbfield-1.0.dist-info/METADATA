Metadata-Version: 2.0
Name: django-rgbfield
Version: 1.0
Summary: An extension to the Django web framework that provides database and form color fields to accept RGB encoded color in HEX and store it as 4 bytes int
Home-page: https://github.com/MisterFix/django-rgbfield
Author: Alexander Likhachev
Author-email: likhachev96@gmail.com
License: MIT License
Keywords: django rgb color field
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: Django (>=1.8)
Requires-Dist: six

django-rgbfield
=====================

An extension to the Django web framework that provides database and form color fields to accept RGB encoded color
in HEX and store it as 4 bytes int.

Why use it?
-------
It saves up to 3 bytes for you!!! :)
The only loss is when you want to save color in packed form (i.e. you trying to save 'abc' (not '#abc'), which is 3 bytes but its int
representation is 4 bytes)

Installation
-------
Python package:
```
pip install django-rgbfield
```
No need to include 'rgbfield' to INSTALLED_APPS because it provides only fields and nothing more.

Usage
-------
```python
from django.db import models
from rgbfield.fields import RGBColorField

class ExampleModel(models.Model):
    color = RGBColorField(default='#fff')
```

You can both generate form using ModelForm class or do it manually:
```python
from django import forms
from rgbfield.fields import RGBColorFormField

class ExampleForm(forms.Form):
    color = RGBColorFormField(default='#fff')
```

