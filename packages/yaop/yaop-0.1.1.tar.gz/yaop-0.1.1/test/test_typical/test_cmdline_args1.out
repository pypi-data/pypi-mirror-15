------------------------------------------------------------------------------
--- cmdline ---

- parsing meta desc. file : [test_cmdline.yml] ...
  - parsing yaml file : [/media/sh/linux.data/home2/sh.hd.data/app/python/lang/python-yaop/test/test_typical/test_cmdline.yml] ...
  - parsed data :
{
    "app": {
        "name": "yconfig", 
        "desc": "Python library for config file & command line options", 
        "details": "Use YAML files to describe what to do (and not how to do it)", 
        "version": "1.0", 
        "date": "Jan. 2016", 
        "notes": [
            "configuration is described in two files, which default names are :\n    - <main module name>.yml for meta description and\n    - config.yml for default values"
        ], 
        "main_call": "auto"
    }, 
    "opts": {
        "help": {
            "action": "help()", 
            "desc": "print this help screen"
        }, 
        "log": {
            "var": "log_fname", 
            "type": "str", 
            "default": "./log/fsbka-%(timestamp)s", 
            "desc": "name of the optional log file"
        }, 
        "incremental": {
            "type": "bool", 
            "desc": "switch to incremental mode"
        }, 
        "recurse": {
            "var": "is_recurse", 
            "default": false, 
            "desc": "recurse throught directories"
        }, 
        "user": {
            "var": "username", 
            "default": "me"
        }, 
        "integer": {
            "flag": "-I", 
            "default": 123
        }
    }, 
    "params": {
        "ifname": {
            "default": "iimage.jpg", 
            "desc": "input filename"
        }, 
        "ofname": {
            "default": "oimage.jpg", 
            "desc": "output filename", 
            "optional": true
        }, 
        "counter1": {
            "default": 456, 
            "optional": true
        }, 
        "counter2": {
            "var": "icnt2", 
            "type": "int", 
            "optional": true
        }
    }
}
------------------------------------------------------------------------------
--- cmdline ---

- checking meta desc. structure ...
  - structure ok.
- checking app meta desc. :
  - checking meta desc. field [name] : ok
  - checking meta desc. field [desc] : ok
  - checking meta desc. field [details] : ok
  - checking meta desc. field [version] : ok
  - checking meta desc. field [date] : ok
  - checking meta desc. field [notes] : ok
  - checking meta desc. field [main_call] : ok
- temporarely merging params desc. with opts desc. (will be splited later) :
- checking opts desc. :
  - checking opt [help] :
    - checking [action] : ok
    - checking [desc] : ok
  - checking opt [log] :
    - checking [var] : ok
    - checking [type] : ok
    - checking [default] : ok
    - checking [desc] : ok
  - checking opt [incremental] :
    - checking [type] : ok
    - checking [desc] : ok
  - checking opt [recurse] :
    - checking [var] : ok
    - checking [default] : ok
    - checking [desc] : ok
  - checking opt [user] :
    - checking [var] : ok
    - checking [default] : ok
  - checking opt [integer] :
    - checking [flag] : ok
    - checking [default] : ok
  - checking opt [ifname] :
    - checking [default] : ok
    - checking [desc] : ok
  - checking opt [ofname] :
    - checking [default] : ok
    - checking [desc] : ok
    - checking [optional] : ok
  - checking opt [counter1] :
    - checking [default] : ok
    - checking [optional] : ok
  - checking opt [counter2] :
    - checking [var] : ok
    - checking [type] : ok
    - checking [optional] : ok
------------------------------------------------------------------------------
--- cmdline ---

- completing desc. fields ...
  - completed meta data    :
{
    "name": "yconfig", 
    "desc": "Python library for config file & command line options", 
    "details": "Use YAML files to describe what to do (and not how to do it)", 
    "version": "1.0", 
    "date": "Jan. 2016", 
    "notes": [
        "configuration is described in two files, which default names are :\n    - <main module name>.yml for meta description and\n    - config.yml for default values"
    ], 
    "main_call": "auto", 
    "author": "Aygos (C.B.)", 
    "main": "main", 
    "main_nocheck": false
}
  - completed options      :
{
    "help": {
        "flag": "-h", 
        "long_flag": "--help", 
        "action": "help()", 
        "desc": "print this help screen", 
        "optional": true, 
        "default": false, 
        "type": "bool"
    }, 
    "log": {
        "flag": "-l", 
        "long_flag": "--log", 
        "var": "log_fname", 
        "type": "str", 
        "default": "./log/fsbka-%(timestamp)s", 
        "desc": "name of the optional log file", 
        "optional": true
    }, 
    "incremental": {
        "flag": "-i", 
        "long_flag": "--incremental", 
        "type": "bool", 
        "desc": "switch to incremental mode", 
        "optional": true, 
        "default": false
    }, 
    "recurse": {
        "flag": "-r", 
        "long_flag": "--recurse", 
        "var": "is_recurse", 
        "default": false, 
        "desc": "recurse throught directories", 
        "optional": true, 
        "type": "bool"
    }, 
    "user": {
        "flag": "-u", 
        "long_flag": "--user", 
        "var": "username", 
        "default": "me", 
        "optional": true, 
        "type": "str", 
        "desc": "user"
    }, 
    "integer": {
        "long_flag": "--integer", 
        "flag": "-I", 
        "default": 123, 
        "optional": true, 
        "type": "int", 
        "desc": "integer"
    }, 
    "ifname": {
        "flag": "-i", 
        "long_flag": "--ifname", 
        "default": "iimage.jpg", 
        "desc": "input filename", 
        "optional": false, 
        "type": "str"
    }, 
    "ofname": {
        "flag": "-o", 
        "long_flag": "--ofname", 
        "default": "oimage.jpg", 
        "desc": "output filename", 
        "optional": true, 
        "type": "str"
    }, 
    "counter1": {
        "flag": "-c", 
        "long_flag": "--counter1", 
        "default": 456, 
        "optional": true, 
        "type": "int", 
        "desc": "counter1"
    }, 
    "counter2": {
        "flag": "-c", 
        "long_flag": "--counter2", 
        "var": "icnt2", 
        "type": "int", 
        "optional": true, 
        "default": false, 
        "desc": "counter2"
    }
}
  - completed options type :
sadict([('help', <type 'bool'>), ('log', <type 'str'>), ('incremental', <type 'bool'>), ('recurse', <type 'bool'>), ('user', <type 'str'>), ('integer', <type 'int'>), ('ifname', <type 'str'>), ('ofname', <type 'str'>), ('counter1', <type 'int'>), ('counter2', <type 'int'>)])

- list of flags :

('-h', '--help')
{
    "name": "help", 
    "flag": "-h", 
    "long_flag": "--help", 
    "action": "help()", 
    "desc": "print this help screen", 
    "optional": true, 
    "default": false, 
    "type": "bool"
}
<type 'bool'>
('-l', '--log')
{
    "name": "log", 
    "flag": "-l", 
    "long_flag": "--log", 
    "var": "log_fname", 
    "type": "str", 
    "default": "./log/fsbka-%(timestamp)s", 
    "desc": "name of the optional log file", 
    "optional": true
}
<type 'str'>
('-i', '--incremental')
{
    "name": "incremental", 
    "flag": "-i", 
    "long_flag": "--incremental", 
    "type": "bool", 
    "desc": "switch to incremental mode", 
    "optional": true, 
    "default": false
}
<type 'bool'>
('-r', '--recurse')
{
    "name": "recurse", 
    "flag": "-r", 
    "long_flag": "--recurse", 
    "var": "is_recurse", 
    "default": false, 
    "desc": "recurse throught directories", 
    "optional": true, 
    "type": "bool"
}
<type 'bool'>
('-u', '--user')
{
    "name": "user", 
    "flag": "-u", 
    "long_flag": "--user", 
    "var": "username", 
    "default": "me", 
    "optional": true, 
    "type": "str", 
    "desc": "user"
}
<type 'str'>
('-I', '--integer')
{
    "name": "integer", 
    "long_flag": "--integer", 
    "flag": "-I", 
    "default": 123, 
    "optional": true, 
    "type": "int", 
    "desc": "integer"
}
<type 'int'>
- list of variables :

ifname
{
    "name": "ifname", 
    "flag": "-i", 
    "long_flag": "--ifname", 
    "default": "iimage.jpg", 
    "desc": "input filename", 
    "optional": false, 
    "type": "str"
}
ofname
{
    "name": "ofname", 
    "flag": "-o", 
    "long_flag": "--ofname", 
    "default": "oimage.jpg", 
    "desc": "output filename", 
    "optional": true, 
    "type": "str"
}
counter1
{
    "name": "counter1", 
    "flag": "-c", 
    "long_flag": "--counter1", 
    "default": 456, 
    "optional": true, 
    "type": "int", 
    "desc": "counter1"
}
counter2
{
    "name": "counter2", 
    "flag": "-c", 
    "long_flag": "--counter2", 
    "var": "icnt2", 
    "type": "int", 
    "optional": true, 
    "default": false, 
    "desc": "counter2"
}
------------------------------------------------------------------------------
--- cmdline ---

- generating functions code :

  - generated convert_types2() function :
def convert_types2(self, d):
	dret = sadict()
	for name, val in d.iteritems():
		if name == 'help':
			if val.__class__ is not bool:
				try:
					val = bool(val)
				except:
					self.error('failed to convert value [%s] of option [help] to [bool] type' % val)
			dret['help'] = val
		elif name == 'log':
			if val.__class__ is not str:
				try:
					val = str(val)
				except:
					self.error('failed to convert value [%s] of option [log] to [str] type' % val)
			dret['log'] = val
		elif name == 'incremental':
			if val.__class__ is not bool:
				try:
					val = bool(val)
				except:
					self.error('failed to convert value [%s] of option [incremental] to [bool] type' % val)
			dret['incremental'] = val
		elif name == 'recurse':
			if val.__class__ is not bool:
				try:
					val = bool(val)
				except:
					self.error('failed to convert value [%s] of option [recurse] to [bool] type' % val)
			dret['recurse'] = val
		elif name == 'user':
			if val.__class__ is not str:
				try:
					val = str(val)
				except:
					self.error('failed to convert value [%s] of option [user] to [str] type' % val)
			dret['user'] = val
		elif name == 'integer':
			if val.__class__ is not int:
				try:
					val = int(val)
				except:
					self.error('failed to convert value [%s] of option [integer] to [int] type' % val)
			dret['integer'] = val
		elif name == 'ifname':
			if val.__class__ is not str:
				try:
					val = str(val)
				except:
					self.error('failed to convert value [%s] of option [ifname] to [str] type' % val)
			dret['ifname'] = val
		elif name == 'ofname':
			if val.__class__ is not str:
				try:
					val = str(val)
				except:
					self.error('failed to convert value [%s] of option [ofname] to [str] type' % val)
			dret['ofname'] = val
		elif name == 'counter1':
			if val.__class__ is not int:
				try:
					val = int(val)
				except:
					self.error('failed to convert value [%s] of option [counter1] to [int] type' % val)
			dret['counter1'] = val
		elif name == 'counter2':
			if val.__class__ is not int:
				try:
					val = int(val)
				except:
					self.error('failed to convert value [%s] of option [counter2] to [int] type' % val)
			dret['counter2'] = val
	return dret
------------------------------------------------------------------------------
--- cmdline ---

- loading config file : [config.yml]
  - parsing yaml file : [/media/sh/linux.data/home2/sh.hd.data/app/python/lang/python-yaop/test/test_typical/config.yml] ...
  - parsed data :
"config.yml"
------------------------------------------------------------------------------
--- cmdline ---

- checking config structure ...
  - structure ok.
- checking config opts :
  - checking opt [recurse] : ok
  - checking opt [user] : ok
  - checking opt [ofname] : ok
------------------------------------------------------------------------------
--- cmdline ---

- parsing command line : ['input_file_1.dat']
- parsing command line : ['input_file_1.dat'] ...
- parsed options & variables :
{
    "ifname": "input_file_1.dat"
}
------------------------------------------------------------------------------
--- cmdline ---

- merging options :
  - options & variables from config file :
{
    "recurse": false, 
    "user": "logged user", 
    "ofname": "output.dat"
}
  - options & variables from command line :
{
    "ifname": "input_file_1.dat"
}
  - merged options & variables :
{
    "recurse": false, 
    "user": "logged user", 
    "ofname": "output.dat", 
    "ifname": "input_file_1.dat"
}
------------------------------------------------------------------------------
--- cmdline ---

- apply options default values :
  - completed / sorted options & variables :
{
    "help": false, 
    "log": "./log/fsbka-%(timestamp)s", 
    "incremental": false, 
    "recurse": false, 
    "user": "logged user", 
    "integer": 123, 
    "ifname": "input_file_1.dat", 
    "ofname": "output.dat", 
    "counter1": 456, 
    "counter2": false
}
------------------------------------------------------------------------------
--- cmdline ---

- fixing (converting) options values types :
- converted options & variables :
{
    "help": false, 
    "log": "./log/fsbka-%(timestamp)s", 
    "incremental": false, 
    "recurse": false, 
    "user": "logged user", 
    "integer": 123, 
    "ifname": "input_file_1.dat", 
    "ofname": "output.dat", 
    "counter1": 456, 
    "counter2": 0
}
------------------------------------------------------------------------------
--- cmdline ---

- check actions triggers :
------------------------------------------------------------------------------
yconfig - Python library for config file & command line options
v1.0 - Jan. 2016 - from & by Aygos (C.B.)

------------------------------------------------------------------------------
--- cmdline ---

- calling main entry point :
  - main : [None]
  - main : ['main']
  - main : [<function main_cmdline>]
- main call arguments handling : [auto]
- detecting main call argspecs :
  - main call : cmdline
- calling main ...
- entering main ...
  - cmdline : [
{
    "help": false, 
    "log": "./log/fsbka-%(timestamp)s", 
    "incremental": false, 
    "recurse": false, 
    "user": "logged user", 
    "integer": 123, 
    "ifname": "input_file_1.dat", 
    "ofname": "output.dat", 
    "counter1": 456, 
    "counter2": 0
}
]
- exiting main ...
- main called.
------------------------------------------------------------------------------
