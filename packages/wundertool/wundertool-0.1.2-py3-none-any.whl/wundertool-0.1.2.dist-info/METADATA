Metadata-Version: 2.0
Name: wundertool
Version: 0.1.2
Summary: Tool for working with Docker containers
Home-page: https://github.com/aleksijohansson/wundertool-py
Author: Aleksi Johansson
Author-email: aleksi@aleksijohansson.net
License: MIT
Keywords: wundertools wundertool docker containers container-management
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Developers
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Requires-Dist: PyYAML (>=3.11,<4)
Requires-Dist: docker-py (>=1.8.1,<2)
Requires-Dist: fake-factory (>=0.5.7,<1)
Provides-Extra: dev
Requires-Dist: twine; extra == 'dev'
Requires-Dist: wheel; extra == 'dev'

wundertool-py
==============
Tool for working with `Docker <https://www.docker.com/>`_ containers.

Mission statement:

1. Provide a simplified and unified tool for all the members of the team.
2. Provide additional functionality to existing tools.
3. Include everything from developing to packaging and deploying code in one tool.
3. Allow the project team to easily define the whole stack of software required for the project that is used everywhere from local development to production.

Requirements:

- python 3 or later

Installation
------------
You can always install the tool from PyPI with::

  pip install wundertool

*Note: OS X doesn't have python 3 or pip installed by default. You should install them with `brew` first and then install `wundertool`*::

  brew install python3
  pip3 install wundertool

Upgrade
-------
Upgrade to the latest version with::

  pip install wundertool --upgrade

or on OS X with python 3::

  pip3 install wundertool --upgrade

Usage
-----
Currently available commands are mostly equivalent of those of docker-compose. See this for list of available commands::

  wundertool commands

Development
-----------
Requirements:

- python 3.4 or later

You can clone this module locally and install it in development mode in an virtual environment like this::

  git clone https://github.com/aleksijohansson/wundertool-py.git
  cd wundertool-py
  pyvenv .
  source bin/activate
  pip install -e ".[dev]"

You always need to activate the wundertool-py virtual environment when opening a new terminal for development::

  source <DIR>/wundertool-py/bin/activate


