Metadata-Version: 1.1
Name: idlespork
Version: 0.1.2
Summary: idlespork is an improved version IDLE
Home-page: https://github.com/idlespork/idlespork
Author: Alon Titelman, Lior Goldberg
Author-email: alon.ti@gmail.com, goldberg.lior@gmail.com
License: Copyright (c) 2016 Lior Goldberg, Alon Titelman

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Other relevant licenses may be found in the idlesporklib/licenses directory.

Download-URL: https://github.com/idlespork/idlespork/tarball/0.1.2
Description: IdleSpork
        =========
        
        IdleSpork is an extension of python's IDLE.
        
        The main features include:
        
        * Background jobs
        * Running shell commands directly from IdleSpork
        * Getting help by typing "?"
        * Printing source code by typing "??"
        * Persistent history (across multiple sessions)
        * Spelling and import suggestions
        
        Commands
        --------
        
        IdleSpork supports the following commands:
        
        * ``jobs``
        * ``kill``
        * ``cd``
        * ``open``
        
        To print help for a command, type "``<command> -h``".
        
        
        Control-Z (background jobs)
        ---------------------------
        
        After running a jobs that takes a lot of time, you can press Control-Z. This
        will move your job to the background and return to the prompt immediately,
        with the same global scope (meaning all variables and functions are there).
        The following line will be printed::
        
            **** [0] ....... - Background ****
        
        The number ``[0]`` is the Job ID, you will need it to get the results of the job.
        
        When your job is done, you will get the message::
        
            **** [0]  Done ****
        
        The command ``jobs`` gives you access to all the jobs you sent.
        Without arguments ``jobs`` will print all the running jobs.
        ``jobs -a`` prints all jobs (including the dead ones).
        ``jobs -o<jobid>`` prints the output of a job.
        The output of a job can be accessed using ``Jobs[jobid].getoutput()``.
        The return value of your job (which is normally save into '``_``') can be accessed
        using ``Jobs[jobid].ret``.
        
        The Jobs variable: this variable manages all jobs. Everything you can do
        using the commands, you can also do using this variable.
        If you lose this variable use can run: ``jobs -gJobs`` to restore it.
        
        
        Shell Commands
        ==============
        
        IdleSpork gives you the ability to run shell programs directly from your python
        interpreter. For example, you can run ``ls``, ``cat``, ``sysinfo`` and so on.
        In order to run a command, type '!' and then type your command.
        IdleSpork also allows you to store the output of a command into a variable. For
        example::
        
            x = !ls -l
        
        will store the results of ``ls -l`` into the variable ``x``.
        
        Note:
        
        * DON'T use this feature to run tty commands (``vim``, ``top``, ...).
        * Currently there is no input support for shell commands.
        
        
Keywords: IDLE,background,jobs
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Other Environment
Classifier: Intended Audience :: Developers
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
