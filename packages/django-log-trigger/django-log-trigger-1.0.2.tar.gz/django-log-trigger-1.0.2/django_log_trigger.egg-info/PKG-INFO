Metadata-Version: 1.1
Name: django-log-trigger
Version: 1.0.2
Summary: Simulate exceptions and logging calls in django through http
Home-page: https://github.com/marteinn/django-log-trigger
Author: Martin Sandstr√∂m
Author-email: martin@marteinn.se
License: MIT
Description: |Build Status| |PyPI version|
        
        Django-Log-Trigger
        ==================
        
        A django app for simulating exceptions and logging calls of various
        levels through http. Its perfect when you want to try out your LOGGING
        settings.
        
        Requirements
        ------------
        
        -  Python 2.7+/3.5+
        -  Django 1.8+
        
        Installing
        ----------
        
        Stable
        ~~~~~~
        
        ``pip install django-log-trigger``
        
        Develop
        ~~~~~~~
        
        ``pip install git+git://github.com/marteinn/django-log-trigger.git@develop``
        
        Getting started
        ---------------
        
        1. Add ``log_trigger`` to installed apps
        
           ::
        
               INSTALLED_APPS = [
                   'pages',
                   'pizza',
                   ...
                   'log_trigger',
               ]
        
        2. Add ``log_trigger.urls`` to your ``urls.py``
        
           ::
        
               import log_trigger
        
               urlpatterns = [
                   url(r'^api/', include('api.urls')),
                   url(r'^log-trigger/', include(log_trigger.urls)),
                   ...
        
        3. Done!
        
        Usage
        -----
        
        Open your browser and visit any of these urls.
        
        Exceptions
        ~~~~~~~~~~
        
        -  ``/log-trigger/system-exception/``: Trigger system exception
        -  ``/log-trigger/unhandled-exception/``: Trigger unhandled exception
        
        Logging
        ~~~~~~~
        
        -  ``/log-trigger/debug-logging/``: Debug logging
        -  ``/log-trigger/info-logging/``: Info logging
        -  ``/log-trigger/warn-logging/``: Warn logging
        -  ``/log-trigger/error-logging/``: Error logging
        -  ``/log-trigger/critical-logging/``: Critical logging
        
        Configuration
        -------------
        
        ``LOG_TRIGGER_LOGGER_NAME``
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        Default: ``log_trigger.views``
        
        The logger you want to use when testing the logging endpoints.
        
        ``LOG_TRIGGER_SECRET``
        ~~~~~~~~~~~~~~~~~~~~~~
        
        Default: Empty
        
        Use the param if you want to secure your testing endpoints, the secret
        are passed along as a get variable. Example:
        ``/debug-logging/?secret=mysecret``
        
        Contributing
        ------------
        
        Want to contribute? Awesome. Just send a pull request.
        
        License
        -------
        
        Django-Log-Trigger is released under the `MIT
        License <http://www.opensource.org/licenses/MIT>`__.
        
        .. |Build Status| image:: https://travis-ci.org/marteinn/django-log-trigger.svg?branch=master
           :target: https://travis-ci.org/marteinn/django-log-trigger
        .. |PyPI version| image:: https://badge.fury.io/py/django-log-trigger.svg
           :target: http://badge.fury.io/py/django-log-trigger
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Framework :: Django
Classifier: Topic :: Utilities
