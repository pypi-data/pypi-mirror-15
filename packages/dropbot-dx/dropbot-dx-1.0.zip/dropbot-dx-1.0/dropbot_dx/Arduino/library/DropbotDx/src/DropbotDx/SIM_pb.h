
/* #########################################################################
 * [2016-05-04 23:05:23.035000] THIS FILE IS AUTOGENERATED - DO NOT EDIT!
 * ######################################################################### */

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Wed May 04 23:05:23 2016. */

#ifndef PB__DROPBOT_DX__SIM_PB_H_INCLUDED
#define PB__DROPBOT_DX__SIM_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _teensy__3_1_sim_R_SCGC6 {
    bool has_RTC;
    bool RTC;
    bool has_ADC0;
    bool ADC0;
    bool has_FTM1;
    bool FTM1;
    bool has_FTM0;
    bool FTM0;
    bool has_PIT;
    bool PIT;
    bool has_PDB;
    bool PDB;
    bool has_USBDCD;
    bool USBDCD;
    bool has_CRC;
    bool CRC;
    bool has_I2S;
    bool I2S;
    bool has_SPI1;
    bool SPI1;
    bool has_SPI0;
    bool SPI0;
    bool has_FLEXCAN0;
    bool FLEXCAN0;
    bool has_DMAMUX;
    bool DMAMUX;
    bool has_FTFL;
    bool FTFL;
} teensy__3_1_sim_R_SCGC6;

typedef struct _teensy__3_1_sim_R_SCGC7 {
    bool has_DMA;
    bool DMA;
} teensy__3_1_sim_R_SCGC7;

typedef struct _teensy__3_1_sim_Registers {
    bool has_SOPT1;
    uint32_t SOPT1;
    bool has_SOPT1CFG;
    uint32_t SOPT1CFG;
    bool has_SOPT2;
    uint32_t SOPT2;
    bool has_SOPT4;
    uint32_t SOPT4;
    bool has_SOPT5;
    uint32_t SOPT5;
    bool has_SOPT7;
    uint32_t SOPT7;
    bool has_SDID;
    uint32_t SDID;
    bool has_SCGC1;
    uint32_t SCGC1;
    bool has_SCGC2;
    uint32_t SCGC2;
    bool has_SCGC3;
    uint32_t SCGC3;
    bool has_SCGC4;
    uint32_t SCGC4;
    bool has_SCGC5;
    uint32_t SCGC5;
    bool has_SCGC6;
    teensy__3_1_sim_R_SCGC6 SCGC6;
    bool has_SCGC7;
    teensy__3_1_sim_R_SCGC7 SCGC7;
    bool has_CLKDIV1;
    uint32_t CLKDIV1;
    bool has_CLKDIV2;
    uint32_t CLKDIV2;
    bool has_FCFG1;
    uint32_t FCFG1;
    bool has_FCFG2;
    uint32_t FCFG2;
    bool has_UIDH;
    uint32_t UIDH;
    bool has_UIDMH;
    uint32_t UIDMH;
    bool has_UIDML;
    uint32_t UIDML;
    bool has_UIDL;
    uint32_t UIDL;
} teensy__3_1_sim_Registers;

/* Default values for struct fields */

/* Initializer values for message structs */
#define teensy__3_1_sim_R_SCGC6_init_default     {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define teensy__3_1_sim_R_SCGC7_init_default     {false, 0}
#define teensy__3_1_sim_Registers_init_default   {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, teensy__3_1_sim_R_SCGC6_init_default, false, teensy__3_1_sim_R_SCGC7_init_default, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define teensy__3_1_sim_R_SCGC6_init_zero        {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define teensy__3_1_sim_R_SCGC7_init_zero        {false, 0}
#define teensy__3_1_sim_Registers_init_zero      {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, teensy__3_1_sim_R_SCGC6_init_zero, false, teensy__3_1_sim_R_SCGC7_init_zero, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define teensy__3_1_sim_R_SCGC6_RTC_tag          1
#define teensy__3_1_sim_R_SCGC6_ADC0_tag         2
#define teensy__3_1_sim_R_SCGC6_FTM1_tag         3
#define teensy__3_1_sim_R_SCGC6_FTM0_tag         4
#define teensy__3_1_sim_R_SCGC6_PIT_tag          5
#define teensy__3_1_sim_R_SCGC6_PDB_tag          6
#define teensy__3_1_sim_R_SCGC6_USBDCD_tag       7
#define teensy__3_1_sim_R_SCGC6_CRC_tag          8
#define teensy__3_1_sim_R_SCGC6_I2S_tag          9
#define teensy__3_1_sim_R_SCGC6_SPI1_tag         10
#define teensy__3_1_sim_R_SCGC6_SPI0_tag         11
#define teensy__3_1_sim_R_SCGC6_FLEXCAN0_tag     12
#define teensy__3_1_sim_R_SCGC6_DMAMUX_tag       13
#define teensy__3_1_sim_R_SCGC6_FTFL_tag         14
#define teensy__3_1_sim_R_SCGC7_DMA_tag          1
#define teensy__3_1_sim_Registers_SOPT1_tag      1
#define teensy__3_1_sim_Registers_SOPT1CFG_tag   2
#define teensy__3_1_sim_Registers_SOPT2_tag      3
#define teensy__3_1_sim_Registers_SOPT4_tag      4
#define teensy__3_1_sim_Registers_SOPT5_tag      5
#define teensy__3_1_sim_Registers_SOPT7_tag      6
#define teensy__3_1_sim_Registers_SDID_tag       7
#define teensy__3_1_sim_Registers_SCGC1_tag      8
#define teensy__3_1_sim_Registers_SCGC2_tag      9
#define teensy__3_1_sim_Registers_SCGC3_tag      10
#define teensy__3_1_sim_Registers_SCGC4_tag      11
#define teensy__3_1_sim_Registers_SCGC5_tag      12
#define teensy__3_1_sim_Registers_SCGC6_tag      13
#define teensy__3_1_sim_Registers_SCGC7_tag      14
#define teensy__3_1_sim_Registers_CLKDIV1_tag    15
#define teensy__3_1_sim_Registers_CLKDIV2_tag    16
#define teensy__3_1_sim_Registers_FCFG1_tag      17
#define teensy__3_1_sim_Registers_FCFG2_tag      18
#define teensy__3_1_sim_Registers_UIDH_tag       19
#define teensy__3_1_sim_Registers_UIDMH_tag      20
#define teensy__3_1_sim_Registers_UIDML_tag      21
#define teensy__3_1_sim_Registers_UIDL_tag       22

/* Struct field encoding specification for nanopb */
extern const pb_field_t teensy__3_1_sim_R_SCGC6_fields[15];
extern const pb_field_t teensy__3_1_sim_R_SCGC7_fields[2];
extern const pb_field_t teensy__3_1_sim_Registers_fields[23];

/* Maximum encoded size of messages (where known) */
#define teensy__3_1_sim_R_SCGC6_size             28
#define teensy__3_1_sim_R_SCGC7_size             2
#define teensy__3_1_sim_Registers_size           161

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
