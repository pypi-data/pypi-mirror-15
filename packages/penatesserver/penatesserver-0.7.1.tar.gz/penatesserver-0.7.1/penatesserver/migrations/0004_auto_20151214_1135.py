# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-14 10:35
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('penatesserver', '0003_auto_20151012_1956'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShinkenService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_name', models.CharField(db_index=True, max_length=255, verbose_name=b'host_name')),
                ('hostgroup_name',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'hostgroup_name')),
                ('service_description', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                         verbose_name=b'service_description')),
                ('display_name',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'display_name')),
                ('servicegroups',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'servicegroups')),
                ('is_volatile', models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                                    verbose_name=b'is_volatile')),
                ('check_command',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'check_command')),
                ('initial_state',
                 models.CharField(blank=True, choices=[(b'o', b'o'), (b'w', b'w'), (b'u', b'u'), (b'c', b'c')],
                                  default=None, max_length=255, null=True, verbose_name=b'initial_state')),
                ('max_check_attempts',
                 models.IntegerField(blank=True, default=None, null=True, verbose_name=b'max_check_attempts')),
                ('check_interval',
                 models.IntegerField(blank=True, default=None, null=True, verbose_name=b'check_interval')),
                ('retry_interval',
                 models.IntegerField(blank=True, default=None, null=True, verbose_name=b'retry_interval')),
                ('active_checks_enabled',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'active_checks_enabled')),
                ('passive_checks_enabled',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'active_checks_enabled')),
                ('check_period',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'check_period')),
                ('obsess_over_service',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'obsess_over_service')),
                ('check_freshness',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'check_freshness')),
                ('freshness_threshold',
                 models.IntegerField(blank=True, default=None, null=True, verbose_name=b'freshness_threshold')),
                ('event_handler',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'event_handler')),
                ('event_handler_enabled',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'event_handler_enabled')),
                ('low_flap_threshold',
                 models.FloatField(blank=True, default=None, null=True, verbose_name=b'low_flap_threshold')),
                ('high_flap_threshold',
                 models.FloatField(blank=True, default=None, null=True, verbose_name=b'high_flap_threshold')),
                ('flap_detection_enabled',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'flap_detection_enabled')),
                ('flap_detection_options',
                 models.CharField(blank=True, choices=[(b'o', b'o'), (b'w', b'w'), (b'u', b'u'), (b'c', b'c')],
                                  default=None, max_length=255, null=True, verbose_name=b'flap_detection_options')),
                ('process_perf_data',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'process_perf_data')),
                ('retain_status_information',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'retain_status_information')),
                ('retain_nonstatus_information',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'retain_nonstatus_information')),
                ('notification_interval',
                 models.IntegerField(blank=True, default=None, null=True, verbose_name=b'notification_interval')),
                ('first_notification_delay',
                 models.IntegerField(blank=True, default=None, null=True, verbose_name=b'first_notification_delay')),
                ('notification_period', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                         verbose_name=b'notification_period')),
                ('notification_options', models.CharField(blank=True, choices=[(b'r', b'r'), (b'w', b'w'), (b'u', b'u'),
                                                                               (b'c', b'c'), (b'f', b'f'),
                                                                               (b's', b's')], default=None,
                                                          max_length=255, null=True,
                                                          verbose_name=b'notification_options')),
                ('notifications_enabled',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'notifications_enabled')),
                ('contacts',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'contacts')),
                ('contact_groups',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'contact_groups')),
                ('stalking_options',
                 models.CharField(blank=True, choices=[(b'o', b'o'), (b'w', b'w'), (b'u', b'u'), (b'c', b'c')],
                                  default=None, max_length=255, null=True, verbose_name=b'stalking_options')),
                ('notes', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'notes')),
                ('notes_url',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'notes_url')),
                ('action_url',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'action_url')),
                ('poller_tag',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'poller_tag')),
                ('icon_set',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'icon_set')),
                ('icon_image',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'icon_image')),
                ('icon_image_alt',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'icon_image_alt')),
                ('reactionner_tag', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                     verbose_name=b'reactionner_tag')),
                ('duplicate_foreach', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                       verbose_name=b'duplicate_foreach')),
                ('service_dependencies', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                          verbose_name=b'service_dependencies')),
                ('business_impact', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                     verbose_name=b'business_impact')),
                ('maintenance_period', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                        verbose_name=b'maintenance_period')),
                ('host_dependency_enabled',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'host_dependency_enabled')),
                ('labels',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'labels')),
                ('business_rule_output_template', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                                   verbose_name=b'business_rule_output_template')),
                ('business_rule_smart_notifications',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'business_rule_smart_notifications')),
                ('business_rule_downtime_as_ack',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'business_rule_downtime_as_ack')),
                ('business_rule_host_notification_options',
                 models.CharField(blank=True,
                                  choices=[(b'r', b'r'), (b'd', b'd'),
                                           (b'u', b'u'), (b'f', b'f'),
                                           (b's', b's')], default=None,
                                  max_length=255, null=True,
                                  verbose_name=b'business_rule_host_notification_options')),
                ('business_rule_service_notification_options',
                 models.CharField(blank=True,
                                  choices=[(b'r', b'r'), (b'w', b'w'),
                                           (b'u', b'u'), (b'c', b'c'),
                                           (b'f', b'f'), (b's', b's')],
                                  default=None, max_length=255, null=True,
                                  verbose_name=b'business_rule_service_notification_options')),
                ('snapshot_enabled',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'snapshot_enabled')),
                ('snapshot_command', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                      verbose_name=b'snapshot_command')),
                ('snapshot_period', models.CharField(blank=True, default=None, max_length=255, null=True,
                                                     verbose_name=b'snapshot_period')),
                ('snapshot_criteria',
                 models.CharField(blank=True, choices=[(b'o', b'o'), (b'w', b'w'), (b'u', b'u'), (b'c', b'c')],
                                  default=None, max_length=255, null=True, verbose_name=b'snapshot_criteria')),
                ('snapshot_interval',
                 models.IntegerField(blank=True, default=None, null=True, verbose_name=b'snapshot_interval')),
                ('trigger_name',
                 models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name=b'trigger_name')),
                ('trigger_broker_raise_enabled',
                 models.IntegerField(blank=True, choices=[(0, b'0'), (1, b'1')], default=None, null=True,
                                     verbose_name=b'trigger_broker_raise_enabled')),
            ],
        ),
    ]
