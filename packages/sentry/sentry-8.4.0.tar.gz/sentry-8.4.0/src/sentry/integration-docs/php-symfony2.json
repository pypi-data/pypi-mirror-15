{
  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>There are various ways to install the PHP integration for Sentry.  The\nrecommended way is to use <a class=\"reference external\" href=\"http://getcomposer.org/\">Composer</a>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require &quot;sentry/sentry&quot;\n</pre></div>\n</div>\n<p>Alternatively you can manually install it:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Download and extract the latest <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-php/archive/master.zip\">sentry-php</a> archive\nto your PHP project.</p>\n</li>\n<li><p class=\"first\">Require the autoloader in your application:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">require_once</span> <span style=\"color: #e8535a\">&#39;/path/to/Raven/library/Raven/Autoloader.php&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">Raven_Autoloader</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">register</span><span style=\"color: #111111\">();</span>\n</pre></div>\n</div>\n</li>\n</ol>\n<p>For more methods have a look at <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/php/advanced/#sentry-php-advanced-installation\"><span>Advanced Installation</span></a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"symfony2\">\n<h2>Symfony2</h2>\n<p>Symfony2 supports Monolog out of the box, which also provides a native Sentry handler.</p>\n<p>Simply add a new handler for Sentry to your config (i.e. in <code class=\"docutils literal\"><span class=\"pre\">config_prod.yml</span></code>), and you&#8217;re good to go:</p>\n<div class=\"highlight-yaml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>monolog:\n  handlers:\n    main:\n        type:         fingers_crossed\n        action_level: error\n        handler:      grouped_main\n\n    sentry:\n        type:  raven\n        dsn:   &#39;___DSN___&#39;\n        level: error\n\n    # Groups\n    grouped_main:\n        type:    group\n        members: [sentry, streamed_main]\n\n    # Streams\n    streamed_main:\n        type:  stream\n        path:  %kernel.logs_dir%/%kernel.environment%.log\n        level: error\n</pre></div>\n</div>\n<div class=\"section\" id=\"adding-context\">\n<h3>Adding Context</h3>\n<p>Capturing context can be done via a monolog processor:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">namespace</span> <span style=\"color: #111111\">AppBundle\\Monolog;</span>\n\n<span style=\"color: #2eb0f7\">use</span> <span style=\"color: #111111\">AppBundle\\Entity\\User;</span>\n<span style=\"color: #2eb0f7\">use</span> <span style=\"color: #111111\">Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface;</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">SentryContextProcessor</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">protected</span> <span style=\"color: #111111\">$tokenStorage;</span>\n\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">__construct(TokenStorageInterface</span> <span style=\"color: #111111\">$tokenStorage)</span>\n    <span style=\"color: #111111\">{</span>\n        <span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">tokenStorage</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">$tokenStorage;</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">processRecord($record)</span>\n    <span style=\"color: #111111\">{</span>\n        <span style=\"color: #111111\">$token</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">tokenStorage</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">getToken</span><span style=\"color: #111111\">();</span>\n\n        <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">($token</span> <span style=\"color: #4b4f5c\">!==</span> <span style=\"color: #2eb0f7\">null</span><span style=\"color: #111111\">){</span>\n            <span style=\"color: #111111\">$user</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">$token</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">getUser</span><span style=\"color: #111111\">();</span>\n            <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">($user</span> <span style=\"color: #111111\">instanceof</span> <span style=\"color: #111111\">UserInterface)</span> <span style=\"color: #111111\">{</span>\n                <span style=\"color: #111111\">$record[</span><span style=\"color: #e8535a\">&#39;context&#39;</span><span style=\"color: #111111\">][</span><span style=\"color: #e8535a\">&#39;user&#39;</span><span style=\"color: #111111\">]</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span>\n                    <span style=\"color: #e8535a\">&#39;name&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">$user</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">getName</span><span style=\"color: #111111\">(),</span>\n                    <span style=\"color: #e8535a\">&#39;username&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">$user</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">getUsername</span><span style=\"color: #111111\">(),</span>\n                    <span style=\"color: #e8535a\">&#39;email&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">$user</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">getEmail</span><span style=\"color: #111111\">(),</span>\n                <span style=\"color: #111111\">);</span>\n            <span style=\"color: #111111\">}</span>\n        <span style=\"color: #111111\">}</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Add various tags</span>\n        <span style=\"color: #111111\">$record[</span><span style=\"color: #e8535a\">&#39;context&#39;</span><span style=\"color: #111111\">][</span><span style=\"color: #e8535a\">&#39;tags&#39;</span><span style=\"color: #111111\">]</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;key&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #e8535a\">&#39;value&#39;</span><span style=\"color: #111111\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Add various generic context</span>\n        <span style=\"color: #111111\">$record[</span><span style=\"color: #e8535a\">&#39;extra&#39;</span><span style=\"color: #111111\">][</span><span style=\"color: #e8535a\">&#39;key&#39;</span><span style=\"color: #111111\">]</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">&#39;value&#39;</span><span style=\"color: #111111\">;</span>\n\n        <span style=\"color: #2eb0f7\">return</span> <span style=\"color: #111111\">$record;</span>\n    <span style=\"color: #111111\">}</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>You&#8217;ll then register the processor in your config:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">services</span><span style=\"color: #4b4f5c\">:</span>\n    <span style=\"color: #111111\">monolog</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">processor</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">sentry_context</span><span style=\"color: #4b4f5c\">:</span>\n        <span style=\"color: #111111\">class</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">AppBundle\\Monolog\\SentryContextProcessor</span>\n        <span style=\"color: #111111\">arguments</span><span style=\"color: #4b4f5c\">:</span>  <span style=\"color: #111111\">[</span><span style=\"color: #e8535a\">&quot;@security.token_storage&quot;</span><span style=\"color: #111111\">]</span>\n        <span style=\"color: #111111\">tags</span><span style=\"color: #4b4f5c\">:</span>\n            <span style=\"color: #4b4f5c\">-</span> <span style=\"color: #111111\">{</span> <span style=\"color: #111111\">name</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">monolog</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">processor,</span> <span style=\"color: #111111\">method</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">processRecord,</span> <span style=\"color: #111111\">handler</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">sentry</span> <span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>If you&#8217;re using Symfony &lt; 2.6 then you need to use <code class=\"docutils literal\"><span class=\"pre\">security.context</span></code> instead of <code class=\"docutils literal\"><span class=\"pre\">security.token_storage</span></code>.</p>\n</div>\n</div>\n", 
  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/", 
  "id": "php-symfony2", 
  "name": "Symfony2"
}
