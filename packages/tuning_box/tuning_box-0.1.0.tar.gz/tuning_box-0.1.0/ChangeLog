CHANGES
=======

0.1.0
-----

* Bump version in RPM spec
* Handle SQLAlchemy's IntegrityError as "409 Conflict"
* Switch away from using Nailgun DB session
* Switch to explicit transaction management
* Add a check for effect on DB to every test in TestApp
* Extract _assert_not_in_db method in TestApp
* Move migration dir determination to common module
* Full path to migration files is used in tests
* Add CLI update screencast
* Remove fake root hierarchy level values
* Add fuelclient integration
* Add "override" CLI command
* Add "set" CLI command
* Add "get" CLI command
* Add base commands for CLI
* Add basic CLI app and client
* Extract bases for tests on real DBs into separate classes
* Always use our implementation of one_or_none
* Add testdb and .cache to .gitignore
* Add binary requirements file
* Add python2- prefix to RPM dependencies
* Fix MANIFEST.in to inlcude migrations
* Fix overrides redirect (was redirecting to /values)
* Add API update screencast
* RPM build specification
* Preserve ID of environment passed on POST operation
* Make resource definition content optional on POST
* Set SCRIPT_NAME in Nailgun adapter to fix redirects
* Enforce types in get_by_id_or_name query
* Add component names support to environment creation
* Add overrides support
* Add server default to ResourceValues.values
* Separate effective values from level values
* Fix typos in some test names
* Rename etv and esv to resource_values in tests
* Accept resource names in URLs
* Add id_or_name URL converter
* Drop "Converter" from converter class name
* Add get_by_id_or_name method to BaseQuery
* Move one_or_none addition to custome BaseQuery class
* Move converter to a separate module
* Ignore warning from a known issue in flask-sqlalchemy in tests
* Separate collections handlers from resources handlers
* Add scenario for migrations tests for postgres
* Add first show recording to docs
* Switch to new resource-based API
* Add version_table to alembic.ini for autogenerate to work locally
* Add foreign key names to all FKs in initial migration
* Remove explicit PrimaryKeyConstraints from initial migration
* Adjust project name in .gitreview
* Remove temporary file generation for migration tests
* Add prefixed version of migrations vs models test
* Add test verifying that migrations are in sync with models
* Import reload for py34 (it's not builtin anymore)
* Fix PEP8
* Add one_or_none for older SQLAlchemy support
* Fix table prefixing through reloading of models module
* Add logging capture to tests
* Plug our Flask app into Nailgun's web.py
* Add alembic support with initial migration
* Add simple Nailgun extension
* Add function to prefix all tables in DB
* Add cover dir to .gitignore
* Add template value compilation
* Add iter_environment_level_values function
* Add real schema and template content to tests
* Add mixin for models with fancy __repr__ and id
* Extract get_environment_level_value method
* Use db.get_or_create method in EnvironmentSchemaValues.put
* Add db.get_or_create method
* Fixup sqlite engine for tests
* Extract getting hierarchy levels for environment
* Use SQLAlchemy relationships instead of IDs
* Store schema values at hierarchy levels
* Add LevelsConverter for nested data URLs
* Create hierarchy levels with environment
* Add fk() shorthand for Colum(ForeignKey(etc))
* Fix EnvironmentSchemaValues.schema_id ForeignKey
* Add TODO item
* Use JSON in DB
* Add environment schema values handler
* Add TODO
* Add environment handlers
* Move test_get_components_empty to its place
* Cut unused models for now
* Use method_decorators
* Add /components handlers
* Fix tests naming
* Fix test on py34
* Extract fixture in tests
* Check that DELETE response is empty
* Add PUT and DELETE handlers for namespaces
* Add namespace POST handler
* Add basic namspace get operation
* Move db.init_app to after config setting in test_db
* Remove test left around from cookiecutter
* Add basic DB schema
* Clear requirements, add necessary ones
* Fix tox run issues
* Initial Cookiecutter Commit
