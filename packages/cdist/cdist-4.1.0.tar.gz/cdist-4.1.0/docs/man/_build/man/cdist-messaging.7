.\" Man page generated from reStructuredText.
.
.TH "CDIST-MESSAGING" "7" "May 27, 2016" "4.1.0dp" "cdist"
.SH NAME
cdist-messaging \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
How the initial manifest and types can communication
.sp
Nico Schottelius <\fI\%nico\-cdist\-\-@\-\-schottelius.org\fP>
.SH DESCRIPTION
.sp
cdist has a simple but powerful way of allowing communication between
the initial manifest and types as well as types and types.
.sp
Whenever execution is passed from cdist to one of the
scripts described below, cdist generate 2 new temporary files
and exports the environment variables \fB__messages_in\fP and
\fB__messages_out\fP to point to them.
.sp
Before handing over the control, the content of the global message
file is copied into the file referenced by \fB$__messages_in\fP\&.
.sp
After cdist gained control back, the content of the file referenced
by \fB$__messages_out\fP is appended to the global message file.
.sp
This way overwriting any of the two files by accident does not
interfere with other types.
.sp
The order of execution is not defined unless you create dependencies
between the different objects (see cdist\-manifest(7)) and thus you
can only react reliably on messages by objects that you depend on.
.SH AVAILABILITY
.sp
Messaging is possible between all \fBlocal\fP scripts:
.INDENT 0.0
.IP \(bu 2
initial manifest
.IP \(bu 2
type/manifest
.IP \(bu 2
type/gencode\-local
.IP \(bu 2
type/gencode\-remote
.UNINDENT
.SH EXAMPLES
.sp
When you want to emit a message use:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
echo "something" >> "$__messages_out"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
When you want to react on a message use:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
if grep \-q "^__your_type/object/id:something" "$__messages_in"; then
    echo "I do something else"
fi
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Some real life examples:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Reacting on changes from block for keepalive
if grep \-q "^__block/keepalive\-vrrp" "$__messages_in"; then
    echo /etc/init.d/keepalived restart
fi

# Reacting on changes of configuration files
if grep \-q "^__file/etc/one" $__messages_in; then
    echo \(aqfor init in /etc/init.d/opennebula*; do $init restart; done\(aq
fi
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Restart sshd on changes
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
os="$(cat "$__global/explorer/os")"

case "$os" in
    centos|redhat|suse)
        restart="/etc/init.d/sshd restart"
    ;;
    debian|ubuntu)
        restart="/etc/init.d/ssh restart"
    ;;
    *)
        cat << eof >&2
Unsupported os $os.
If you would like to have this type running on $os,
you can either develop the changes and send a pull
request or ask for a quote at www.ungleich.ch
eof
        exit 1
    ;;
esac

if grep \-q "^__key_value/PermitRootLogin" "$__messages_in"; then
    echo $restart
fi
.ft P
.fi
.UNINDENT
.UNINDENT
.SH SEE ALSO
.INDENT 0.0
.IP \(bu 2
\fI\%cdist(1)\fP
.IP \(bu 2
\fI\%cdist\-manifest(7)\fP
.IP \(bu 2
\fI\%cdist\-reference(7)\fP
.IP \(bu 2
\fI\%cdist\-type(7)\fP
.UNINDENT
.SH COPYING
.sp
Copyright (C) 2013 Nico Schottelius. Free use of this software is
granted under the terms of the GNU General Public License version 3 (GPLv3).
.\" Generated by docutils manpage writer.
.
