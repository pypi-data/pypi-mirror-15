.\" Man page generated from reStructuredText.
.
.TH "CDIST-REFERENCE" "7" "May 27, 2016" "4.1.0dp" "cdist"
.SH NAME
cdist-reference \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
Variable, path and type reference for cdist
.sp
Nico Schottelius <\fI\%nico\-cdist\-\-@\-\-schottelius.org\fP>
.SH EXPLORERS
.sp
The following global explorers are available:
.INDENT 0.0
.IP \(bu 2
cpu_cores
.IP \(bu 2
cpu_sockets
.IP \(bu 2
hostname
.IP \(bu 2
init
.IP \(bu 2
interfaces
.IP \(bu 2
lsb_codename
.IP \(bu 2
lsb_description
.IP \(bu 2
lsb_id
.IP \(bu 2
lsb_release
.IP \(bu 2
machine
.IP \(bu 2
machine_type
.IP \(bu 2
memory
.IP \(bu 2
os
.IP \(bu 2
os_version
.IP \(bu 2
runlevel
.UNINDENT
.SH PATHS
.INDENT 0.0
.TP
.B $HOME/.cdist
The standard cdist configuration directory relative to your home directory
This is usually the place you want to store your site specific configuration
.TP
.B cdist/conf/
The distribution configuration directory
This contains types and explorers to be used
.TP
.B confdir
Cdist will use all available configuration directories and create
a temporary confdir containing links to the real configuration directories.
This way it is possible to merge configuration directories.
By default it consists of everything in $HOME/.cdist and cdist/conf/.
For more details see cdist(1)
.TP
.B confdir/manifest/init
This is the central entry point.
It is an executable (+x bit set) shell script that can use
values from the explorers to decide which configuration to create
for the specified target host.
Its intent is to used to define mapping from configurations to hosts.
.TP
.B confdir/manifest/*
All other files in this directory are not directly used by cdist, but you
can separate configuration mappings, if you have a lot of code in the
conf/manifest/init file. This may also be helpful to have different admins
maintain different groups of hosts.
.TP
.B confdir/explorer/<name>
Contains explorers to be run on the target hosts, see cdist\-explorer(7).
.TP
.B confdir/type/
Contains all available types, which are used to provide
some kind of functionality. See cdist\-type(7).
.TP
.B confdir/type/<name>/
Home of the type <name>.
This directory is referenced by the variable __type (see below).
.TP
.B confdir/type/<name>/man.rst
Manpage in reStructuredText format (required for inclusion into upstream)
.TP
.B confdir/type/<name>/manifest
Used to generate additional objects from a type.
.TP
.B confdir/type/<name>/gencode\-local
Used to generate code to be executed on the source host
.TP
.B confdir/type/<name>/gencode\-remote
Used to generate code to be executed on the target host
.TP
.B confdir/type/<name>/parameter/required
Parameters required by type, n separated list.
.TP
.B confdir/type/<name>/parameter/optional
Parameters optionally accepted by type, n separated list.
.TP
.B confdir/type/<name>/parameter/default/*
Default values for optional parameters.
Assuming an optional parameter name of \(aqfoo\(aq, it\(aqs default value would
be read from the file confdir/type/<name>/parameter/default/foo.
.TP
.B confdir/type/<name>/parameter/boolean
Boolean parameters accepted by type, n separated list.
.TP
.B confdir/type/<name>/explorer
Location of the type specific explorers.
This directory is referenced by the variable __type_explorer (see below).
See cdist\-explorer(7).
.TP
.B confdir/type/<name>/files
This directory is reserved for user data and will not be used
by cdist at any time. It can be used for storing supplementary
files (like scripts to act as a template or configuration files).
.TP
.B out/
This directory contains output of cdist and is usually located
in a temporary directory and thus will be removed after the run.
This directory is referenced by the variable __global (see below).
.TP
.B out/explorer
Output of general explorers.
.TP
.B out/object
Objects created for the host.
.TP
.B out/object/<object>
Contains all object specific information.
This directory is referenced by the variable __object (see below).
.TP
.B out/object/<object>/explorers
Output of type specific explorers, per object.
.UNINDENT
.SH TYPES
.sp
The following types are available:
.INDENT 0.0
.IP \(bu 2
__apt_key (\fI\%cdist\-type__apt_key(7)\fP)
.IP \(bu 2
__apt_key_uri (\fI\%cdist\-type__apt_key_uri(7)\fP)
.IP \(bu 2
__apt_norecommends (\fI\%cdist\-type__apt_norecommends(7)\fP)
.IP \(bu 2
__apt_ppa (\fI\%cdist\-type__apt_ppa(7)\fP)
.IP \(bu 2
__apt_source (\fI\%cdist\-type__apt_source(7)\fP)
.IP \(bu 2
__apt_update_index (\fI\%cdist\-type__apt_update_index(7)\fP)
.IP \(bu 2
__block (\fI\%cdist\-type__block(7)\fP)
.IP \(bu 2
__ccollect_source (\fI\%cdist\-type__ccollect_source(7)\fP)
.IP \(bu 2
__cdist (\fI\%cdist\-type__cdist(7)\fP)
.IP \(bu 2
__cdistmarker (\fI\%cdist\-type__cdistmarker(7)\fP)
.IP \(bu 2
__config_file (\fI\%cdist\-type__config_file(7)\fP)
.IP \(bu 2
__consul (\fI\%cdist\-type__consul(7)\fP)
.IP \(bu 2
__consul_agent (\fI\%cdist\-type__consul_agent(7)\fP)
.IP \(bu 2
__consul_check (\fI\%cdist\-type__consul_check(7)\fP)
.IP \(bu 2
__consul_reload (\fI\%cdist\-type__consul_reload(7)\fP)
.IP \(bu 2
__consul_service (\fI\%cdist\-type__consul_service(7)\fP)
.IP \(bu 2
__consul_template (\fI\%cdist\-type__consul_template(7)\fP)
.IP \(bu 2
__consul_template_template (\fI\%cdist\-type__consul_template_template(7)\fP)
.IP \(bu 2
__consul_watch_checks (\fI\%cdist\-type__consul_watch_checks(7)\fP)
.IP \(bu 2
__consul_watch_event (\fI\%cdist\-type__consul_watch_event(7)\fP)
.IP \(bu 2
__consul_watch_key (\fI\%cdist\-type__consul_watch_key(7)\fP)
.IP \(bu 2
__consul_watch_keyprefix (\fI\%cdist\-type__consul_watch_keyprefix(7)\fP)
.IP \(bu 2
__consul_watch_nodes (\fI\%cdist\-type__consul_watch_nodes(7)\fP)
.IP \(bu 2
__consul_watch_service (\fI\%cdist\-type__consul_watch_service(7)\fP)
.IP \(bu 2
__consul_watch_services (\fI\%cdist\-type__consul_watch_services(7)\fP)
.IP \(bu 2
__cron (\fI\%cdist\-type__cron(7)\fP)
.IP \(bu 2
__debconf_set_selections (\fI\%cdist\-type__debconf_set_selections(7)\fP)
.IP \(bu 2
__directory (\fI\%cdist\-type__directory(7)\fP)
.IP \(bu 2
__dog_vdi (\fI\%cdist\-type__dog_vdi(7)\fP)
.IP \(bu 2
__file (\fI\%cdist\-type__file(7)\fP)
.IP \(bu 2
__firewalld_rule (\fI\%cdist\-type__firewalld_rule(7)\fP)
.IP \(bu 2
__git (\fI\%cdist\-type__git(7)\fP)
.IP \(bu 2
__group (\fI\%cdist\-type__group(7)\fP)
.IP \(bu 2
__hostname (\fI\%cdist\-type__hostname(7)\fP)
.IP \(bu 2
__iptables_apply (\fI\%cdist\-type__iptables_apply(7)\fP)
.IP \(bu 2
__iptables_rule (\fI\%cdist\-type__iptables_rule(7)\fP)
.IP \(bu 2
__issue (\fI\%cdist\-type__issue(7)\fP)
.IP \(bu 2
__jail (\fI\%cdist\-type__jail(7)\fP)
.IP \(bu 2
__key_value (\fI\%cdist\-type__key_value(7)\fP)
.IP \(bu 2
__line (\fI\%cdist\-type__line(7)\fP)
.IP \(bu 2
__link (\fI\%cdist\-type__link(7)\fP)
.IP \(bu 2
__locale (\fI\%cdist\-type__locale(7)\fP)
.IP \(bu 2
__motd (\fI\%cdist\-type__motd(7)\fP)
.IP \(bu 2
__mount (\fI\%cdist\-type__mount(7)\fP)
.IP \(bu 2
__mysql_database (\fI\%cdist\-type__mysql_database(7)\fP)
.IP \(bu 2
__package (\fI\%cdist\-type__package(7)\fP)
.IP \(bu 2
__package_apt (\fI\%cdist\-type__package_apt(7)\fP)
.IP \(bu 2
__package_emerge (\fI\%cdist\-type__package_emerge(7)\fP)
.IP \(bu 2
__package_emerge_dependencies (\fI\%cdist\-type__package_emerge_dependencies(7)\fP)
.IP \(bu 2
__package_luarocks (\fI\%cdist\-type__package_luarocks(7)\fP)
.IP \(bu 2
__package_opkg (\fI\%cdist\-type__package_opkg(7)\fP)
.IP \(bu 2
__package_pacman (\fI\%cdist\-type__package_pacman(7)\fP)
.IP \(bu 2
__package_pip (\fI\%cdist\-type__package_pip(7)\fP)
.IP \(bu 2
__package_pkg_freebsd (\fI\%cdist\-type__package_pkg_freebsd(7)\fP)
.IP \(bu 2
__package_pkg_openbsd (\fI\%cdist\-type__package_pkg_openbsd(7)\fP)
.IP \(bu 2
__package_pkgng_freebsd (\fI\%cdist\-type__package_pkgng_freebsd(7)\fP)
.IP \(bu 2
__package_rubygem (\fI\%cdist\-type__package_rubygem(7)\fP)
.IP \(bu 2
__package_update_index (\fI\%cdist\-type__package_update_index(7)\fP)
.IP \(bu 2
__package_upgrade_all (\fI\%cdist\-type__package_upgrade_all(7)\fP)
.IP \(bu 2
__package_yum (\fI\%cdist\-type__package_yum(7)\fP)
.IP \(bu 2
__package_zypper (\fI\%cdist\-type__package_zypper(7)\fP)
.IP \(bu 2
__pacman_conf (\fI\%cdist\-type__pacman_conf(7)\fP)
.IP \(bu 2
__pacman_conf_integrate (\fI\%cdist\-type__pacman_conf_integrate(7)\fP)
.IP \(bu 2
__pf_apply (\fI\%cdist\-type__pf_apply(7)\fP)
.IP \(bu 2
__pf_ruleset (\fI\%cdist\-type__pf_ruleset(7)\fP)
.IP \(bu 2
__postfix (\fI\%cdist\-type__postfix(7)\fP)
.IP \(bu 2
__postfix_master (\fI\%cdist\-type__postfix_master(7)\fP)
.IP \(bu 2
__postfix_postconf (\fI\%cdist\-type__postfix_postconf(7)\fP)
.IP \(bu 2
__postfix_postmap (\fI\%cdist\-type__postfix_postmap(7)\fP)
.IP \(bu 2
__postfix_reload (\fI\%cdist\-type__postfix_reload(7)\fP)
.IP \(bu 2
__postgres_database (\fI\%cdist\-type__postgres_database(7)\fP)
.IP \(bu 2
__postgres_role (\fI\%cdist\-type__postgres_role(7)\fP)
.IP \(bu 2
__process (\fI\%cdist\-type__process(7)\fP)
.IP \(bu 2
__pyvenv (\fI\%cdist\-type__pyvenv(7)\fP)
.IP \(bu 2
__qemu_img (\fI\%cdist\-type__qemu_img(7)\fP)
.IP \(bu 2
__rbenv (\fI\%cdist\-type__rbenv(7)\fP)
.IP \(bu 2
__rsync (\fI\%cdist\-type__rsync(7)\fP)
.IP \(bu 2
__rvm (\fI\%cdist\-type__rvm(7)\fP)
.IP \(bu 2
__rvm_gem (\fI\%cdist\-type__rvm_gem(7)\fP)
.IP \(bu 2
__rvm_gemset (\fI\%cdist\-type__rvm_gemset(7)\fP)
.IP \(bu 2
__rvm_ruby (\fI\%cdist\-type__rvm_ruby(7)\fP)
.IP \(bu 2
__ssh_authorized_key (\fI\%cdist\-type__ssh_authorized_key(7)\fP)
.IP \(bu 2
__ssh_authorized_keys (\fI\%cdist\-type__ssh_authorized_keys(7)\fP)
.IP \(bu 2
__ssh_dot_ssh (\fI\%cdist\-type__ssh_dot_ssh(7)\fP)
.IP \(bu 2
__staged_file (\fI\%cdist\-type__staged_file(7)\fP)
.IP \(bu 2
__start_on_boot (\fI\%cdist\-type__start_on_boot(7)\fP)
.IP \(bu 2
__timezone (\fI\%cdist\-type__timezone(7)\fP)
.IP \(bu 2
__update_alternatives (\fI\%cdist\-type__update_alternatives(7)\fP)
.IP \(bu 2
__user (\fI\%cdist\-type__user(7)\fP)
.IP \(bu 2
__user_groups (\fI\%cdist\-type__user_groups(7)\fP)
.IP \(bu 2
__yum_repo (\fI\%cdist\-type__yum_repo(7)\fP)
.IP \(bu 2
__zypper_repo (\fI\%cdist\-type__zypper_repo(7)\fP)
.IP \(bu 2
__zypper_service (\fI\%cdist\-type__zypper_service(7)\fP)
.UNINDENT
.SH OBJECTS
.sp
For object to object communication and tests, the following paths are
usable within a object directory:
.INDENT 0.0
.TP
.B files
This directory is reserved for user data and will not be used
by cdist at any time. It can be used freely by the type
(for instance to store template results).
.TP
.B changed
This empty file exists in an object directory, if the object has
code to be executed (either remote or local)
.TP
.B stdin
This file exists and contains data, if data was provided on stdin
when the type was called.
.UNINDENT
.SH ENVIRONMENT VARIABLES (FOR READING)
.sp
The following environment variables are exported by cdist:
.INDENT 0.0
.TP
.B __explorer
Directory that contains all global explorers.
Available for: initial manifest, explorer, type explorer, shell
.TP
.B __manifest
Directory that contains the initial manifest.
Available for: initial manifest, type manifest, shell
.TP
.B __global
Directory that contains generic output like explorer.
Available for: initial manifest, type manifest, type gencode, shell
.TP
.B __messages_in
File to read messages from.
Available for: initial manifest, type manifest, type gencode
.TP
.B __messages_out
File to write messages.
Available for: initial manifest, type manifest, type gencode
.TP
.B __object
Directory that contains the current object.
Available for: type manifest, type explorer, type gencode and code scripts
.TP
.B __object_id
The type unique object id.
Available for: type manifest, type explorer, type gencode and code scripts
Note: The leading and the trailing "/" will always be stripped (caused by
the filesystem database and ensured by the core).
Note: Double slashes ("//") will not be fixed and result in an error.
.TP
.B __object_name
The full qualified name of the current object.
Available for: type manifest, type explorer, type gencode
.TP
.B __target_host
The host we are deploying to.
Available for: explorer, initial manifest, type explorer, type manifest, type gencode, shell
.TP
.B __type
Path to the current type.
Available for: type manifest, type gencode
.TP
.B __type_explorer
Directory that contains the type explorers.
Available for: type explorer
.UNINDENT
.SH ENVIRONMENT VARIABLES (FOR WRITING)
.sp
The following environment variables influence the behaviour of cdist:
.INDENT 0.0
.TP
.B require
Setup dependencies between objects (see cdist\-manifest(7))
.TP
.B CDIST_LOCAL_SHELL
Use this shell locally instead of /bin/sh to execute scripts
.TP
.B CDIST_REMOTE_SHELL
Use this shell remotely instead of /bin/sh to execute scripts
.TP
.B CDIST_OVERRIDE
Allow overwriting type parameters (see cdist\-manifest(7))
.TP
.B CDIST_ORDER_DEPENDENCY
Create dependencies based on the execution order (see cdist\-manifest(7))
.TP
.B CDIST_REMOTE_EXEC
Use this command for remote execution (should behave like ssh)
.TP
.B CDIST_REMOTE_COPY
Use this command for remote copy (should behave like scp)
.UNINDENT
.SH SEE ALSO
.INDENT 0.0
.IP \(bu 2
\fI\%cdist(1)\fP
.UNINDENT
.SH COPYING
.sp
Copyright (C) 2011\-2014 Nico Schottelius. Free use of this software is
granted under the terms of the GNU General Public License version 3 (GPLv3).
.\" Generated by docutils manpage writer.
.
