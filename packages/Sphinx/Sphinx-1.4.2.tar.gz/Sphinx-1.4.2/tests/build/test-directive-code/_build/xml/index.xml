<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.12 -->
<document source="/Users/tkomiya/work/sphinx/tests/build/test-directive-code/index.rst">
    <section ids="test-directive-code" names="test-directive-code">
        <title>test-directive-code</title>
        <compound classes="toctree-wrapper">
            <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="caption">Caption</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#references" internal="True" refuri="caption#references">References</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#code-blocks" internal="True" refuri="caption#code-blocks">Code blocks</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#literal-include" internal="True" refuri="caption#literal-include">Literal Include</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#named-code-blocks" internal="True" refuri="caption#named-code-blocks">Named Code blocks</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#named-literal-include" internal="True" refuri="caption#named-literal-include">Named Literal Include</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="classes">classes</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#code-blocks" internal="True" refuri="classes#code-blocks">Code blocks</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#literal-includes" internal="True" refuri="classes#literal-includes">Literal Includes</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="dedent">Dedent</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#literal-include" internal="True" refuri="dedent#literal-include">Literal Include</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="dedent_code">Dedent</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#code-blocks" internal="True" refuri="dedent_code#code-blocks">Code blocks</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="lineno_match">Literal Includes with Line Numbers Matching</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="lineno_start">Literal Includes with Line Numbers Starting from 200</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="linenos">Literal Includes with Line Numbers</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="namedblocks">Named Blocks</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#references-to-named-blocks" internal="True" refuri="namedblocks#references-to-named-blocks">References to named blocks</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#named-code-block" internal="True" refuri="namedblocks#named-code-block">Named Code block</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#named-literal-include" internal="True" refuri="namedblocks#named-literal-include">Named Literal Include</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="python">Literal Includes for python</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#block-start-with-blank-or-comment" internal="True" refuri="python#block-start-with-blank-or-comment">block start with blank or comment</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
        </compound>
        <section ids="code-blocks" names="code\ blocks">
            <title>Code blocks</title>
            <literal_block highlight_args="{}" language="ruby" linenos="True" xml:space="preserve">    def ruby?
        false
    end</literal_block>
        </section>
        <section ids="literal-includes" names="literal\ includes">
            <title>Literal Includes</title>
            <literal_block highlight_args="{'linenostart': 1}" language="python" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/test-directive-code/literal.inc" xml:space="preserve"># Literally included file using Python highlighting
# -*- coding: utf-8 -*-

foo = "Including Unicode characters: üöä"

class Foo:
    pass

class Bar:
    def baz():
        pass

# comment after Bar class definition
def bar(): pass
</literal_block>
        </section>
    </section>
</document>
