<document source="/Users/tkomiya/work/sphinx/tests/build/日本語/includes.txt">
    <section ids="testing-downloadable-files" names="testing\ downloadable\ files">
        <title>
            Testing downloadable files
        <paragraph>
            Download 
            <download_reference filename="img.png" refdoc="includes" refdomain="" refexplicit="False" reftarget="img.png" reftype="download" refwarn="False">
                <literal classes="xref download">
                    img.png
             here.
            Download 
            <download_reference filename="img1.png" refdoc="includes" refdomain="" refexplicit="True" reftarget="subdir/img.png" reftype="download" refwarn="False">
                <literal classes="xref download">
                    this
             there.
            Don't download 
            <download_reference refdoc="includes" refdomain="" refexplicit="True" reftarget="nonexisting.png" reftype="download" refwarn="False">
                <literal classes="xref download">
                    this
            .
    <section ids="test-file-and-literal-inclusion" names="test\ file\ and\ literal\ inclusion">
        <title>
            Test file and literal inclusion
        <comment xml:space="preserve">
            This file is included by contents.txt.
        <comment xml:space="preserve">
            Paths in included files are relative to the file that
            includes them
        <image candidates="{'*': u'../root/img.png'}" uri="../root/img.png">
        <comment xml:space="preserve">
            This file is included by contents.txt.
        <comment xml:space="preserve">
            Paths in included files are relative to the file that
            includes them
        <image candidates="{'*': u'../root/img.png'}" uri="../root/img.png">
        <literal_block highlight_args="{'linenostart': 1}" language="python" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            # Literally included file using Python highlighting
            # -*- coding: utf-8 -*-
            
            foo = "Including Unicode characters: üöä"
            
            class Foo:
                pass
            
            class Bar:
                def baz():
                    pass
            
            def bar(): pass
        <comment xml:space="preserve">
            should give a warning
        <system_message level="2" line="9" source="/Users/tkomiya/work/sphinx/tests/build/日本語/includes.txt" type="WARNING">
            <paragraph>
                Encoding 'utf-8-sig' used for reading included file u'/Users/tkomiya/work/sphinx/tests/build/\u65e5\u672c\u8a9e/wrongenc.inc' seems to be wrong, try giving an :encoding: option
        <comment xml:space="preserve">
            should succeed
        <literal_block highlight_args="{'linenostart': 1}" language="none" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/wrongenc.inc" xml:space="preserve">
            This file is encoded in latin-1 but at first read as utf-8.
            
            Max Strauß aß in München eine Leberkässemmel.
        <paragraph>
            This file is encoded in latin-1 but at first read as utf-8.
        <paragraph>
            Max Strauß aß in München eine Leberkässemmel.
    <section ids="literalinclude-options" names="literalinclude\ options">
        <title>
            Literalinclude options
        <highlightlang lang="text" linenothreshold="9223372036854775807">
        <literal_block classes="inc-pyobj1" highlight_args="{'linenostart': 1}" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            class Foo:
                pass
        <literal_block classes="inc-pyobj2" highlight_args="{'linenostart': 1}" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
                def baz():
                    pass
        <literal_block classes="inc-lines" highlight_args="{'linenostart': 6}" linenos="True" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            class Foo:
                pass
            class Bar:
        <literal_block classes="inc-startend" highlight_args="{'linenostart': 1}" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            
            foo = "Including Unicode characters: üöä"
            
        <literal_block classes="inc-preappend" highlight_args="{'linenostart': 1}" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            START CODE
            # Literally included file using Python highlighting
            # -*- coding: utf-8 -*-
            
            foo = "Including Unicode characters: üöä"
            
            class Foo:
                pass
            
            class Bar:
                def baz():
                    pass
            
            def bar(): pass
            END CODE
        <literal_block highlight_args="{'linenostart': 1}" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            
            foo = "Including Unicode characters: üöä"
            
            class Foo:
                pass
            
            class Bar:
                def baz():
                    pass
            
            def bar(): pass
        <literal_block highlight_args="{'linenostart': 1}" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            # Literally included file using Python highlighting
            # -*- coding: utf-8 -*-
            
            foo = "Including Unicode characters: üöä"
            
        <literal_block highlight_args="{'linenostart': 1}" language="udiff" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            --- literal_orig.inc
            +++ literal.inc
            @@ -1,12 +1,12 @@
             # Literally included file using Python highlighting
             # -*- coding: utf-8 -*-
             
            -foo = "Including Unicode characters: üöä"  # This will be changed
            +foo = "Including Unicode characters: üöä"
             
            -class FooOrig:
            +class Foo:
                 pass
             
            -class BarOrig:
            +class Bar:
                 def baz():
                     pass
             
        <literal_block classes="inc-tab3" highlight_args="{'linenostart': 1}" language="text" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/tabs.inc" xml:space="preserve">
            Tabs include file test
            ----------------------
            
            The next line has a tab:
            -| |-
        <literal_block classes="inc-tab8" highlight_args="{'linenostart': 1}" language="python" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/tabs.inc" xml:space="preserve">
            Tabs include file test
            ----------------------
            
            The next line has a tab:
            -|      |-
        <literal_block classes="inc-pyobj-lines-match" highlight_args="{'linenostart': 6}" linenos="True" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            class Foo:
                pass
        <literal_block classes="inc-lines-match" highlight_args="{'linenostart': 6}" linenos="True" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            class Foo:
                pass
            
        <literal_block classes="inc-startend-match" highlight_args="{'linenostart': 3}" linenos="True" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
            
            foo = "Including Unicode characters: üöä"
            
        <paragraph>
            Test if dedenting before parsing works.
        <highlightlang lang="python" linenothreshold="9223372036854775807">
        <literal_block classes="inc-pyobj-dedent" highlight_args="{'linenostart': 1}" linenos="False" source="/Users/tkomiya/work/sphinx/tests/build/日本語/literal.inc" xml:space="preserve">
                def baz():
                    pass
    <section ids="docutils-include-with-literal" names="docutils\ include\ with\ "literal"">
        <title>
            Docutils include with "literal"
        <paragraph>
            While not recommended, it should work (and leave quotes alone).
        <literal_block source="build/日本語/quotes.inc" xml:space="preserve">
            Testing "quotes" in literal 'included' text.
        <substitution_definition names="subst">
            global substitution
