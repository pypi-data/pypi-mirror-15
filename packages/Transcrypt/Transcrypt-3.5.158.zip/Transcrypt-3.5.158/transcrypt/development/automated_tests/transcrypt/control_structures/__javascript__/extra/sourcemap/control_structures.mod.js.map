{
	"version": 3,
	"file": "D:/activ_tosh/geatec/transcrypt/transcrypt/development/automated_tests/transcrypt/control_structures/__javascript__/control_structures.mod.js",
	"sources": [
		"D:/activ_tosh/geatec/transcrypt/transcrypt/development/automated_tests/transcrypt/control_structures/__init__.py"
	],
	"sourcesContent": [
		"def run (autoTester):\n\tfor index in range (10):\n\t\tautoTester.check (index)\n\t\t\n\tfor index in range (8, 16):\n\t\tautoTester.check (index)\n\t\t\n\tfor index in range (8, 16, 2):\n\t\tautoTester.check (index)\n\t\t\n\tfor index in range (10, 0, -1):\n\t\tautoTester.check (index)\n\t\t\n\tfor index in range (16, 8, -2):\n\t\tautoTester.check (index)\n\t\t\n\tfor animal in ('cat', 'dog', 'turtle', 'goldfish'):\n\t\tautoTester.check (animal)\n\n\tfor index, square in enumerate ([x * x for x in range (10) if x % 2]):\n\t\tfor y in (1, 2, 3):\n\t\t\tfor z in (10, 20, 30):\n\t\t\t\tautoTester.check (square + y, z )\n\n\tvehicles = ['bike', 'train', 'boat', 'car', 'plane', 'bus']\n\t\t\t\t\n\tfor doBreak in (False, True):\n\t\tfor doContinue in (False, True):\n\t\t\tfor index in range (10):\n\t\t\t\tfor index2 in range (0, 100, 10):\n\t\t\t\t\tif doBreak and index2 == 50:\n\t\t\t\t\t\tautoTester.check ('break2')\n\t\t\t\t\t\tbreak\n\t\t\t\t\tif doContinue and index2 == 50:\n\t\t\t\t\t\tautoTester.check ('continue2')\n\t\t\t\t\t\tcontinue\n\t\t\t\telse:\n\t\t\t\t\tautoTester.check ('noBreak2')\n\t\t\t\t\t\n\t\t\t\tif doBreak and index == 5:\n\t\t\t\t\tautoTester.check ('break')\n\t\t\t\t\tbreak\n\t\t\t\tif doContinue and index == 5:\n\t\t\t\t\tautoTester.check ('continue')\n\t\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tautoTester.check ('noBreak')\n\t\t\t\t\n\t\t\tindex = 0\n\t\t\twhile index < len (vehicles) and vehicles [index] != 'bus':\n\t\t\t\tautoTester.check (index, vehicles [index])\n\t\t\t\tif doBreak and vehicles [index] == 'car':\n\t\t\t\t\tautoTester.check ('breakWhile')\n\t\t\t\t\tbreak\n\t\t\t\tif doContinue and vehicles [index] == 'car':\n\t\t\t\t\tautoTester.check ('continueWhile')\n\t\t\t\t\tindex += 1\n\t\t\t\t\tcontinue\n\t\t\t\tindex += 1\n\t\t\telse:\n\t\t\t\tautoTester.check ('noBreakWhile')\n\t\t\t\t\n\t\tfor vehicle in vehicles:\n\t\t\tif vehicle == 'bike':\n\t\t\t\tautoTester.check ('netherlands')\n\t\t\telif vehicle == 'car':\n\t\t\t\tautoTester.check ('america')\n\t\t\telif vehicle == 'boat':\n\t\t\t\tautoTester.check ('oceania')\n\t\t\telse:\n\t\t\t\tautoTester.check ('anywhere')\n"
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}