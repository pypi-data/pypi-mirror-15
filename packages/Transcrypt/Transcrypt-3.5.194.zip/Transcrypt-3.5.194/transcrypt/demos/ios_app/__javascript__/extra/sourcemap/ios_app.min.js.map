{
	"version": 3,
	"file": "D:/activ_tosh/geatec/transcrypt/transcrypt/demos/ios_app/__javascript__/ios_app.min.js",
	"sources": [
		"",
		"D:/activ_tosh/geatec/transcrypt/transcrypt/modules/org/transcrypt/__javascript__/__core__.mod.js",
		"D:/activ_tosh/geatec/transcrypt/transcrypt/modules/org/transcrypt/__base__.py",
		"D:/activ_tosh/geatec/transcrypt/transcrypt/modules/org/transcrypt/__standard__.py",
		"D:/activ_tosh/geatec/transcrypt/transcrypt/modules/org/transcrypt/__javascript__/__builtin__.mod.js",
		"D:/activ_tosh/geatec/transcrypt/transcrypt/modules/random/__init__.py",
		"D:/activ_tosh/geatec/transcrypt/transcrypt/demos/ios_app/ios_app.py"
	],
	"sourcesContent": [
		"__pragma__ ('padding')",
		"\tvar __all__ = {};\n\tvar __world__ = __all__;\n\t\n\t// Nested object creator, part of the nesting may already exist and have attributes\n\tvar __nest__ = function (headObject, tailNames, value) {\n\t\t// In some cases this will be a global object, e.g. 'window'\n\t\tvar current = headObject;\n\t\t\n\t\tif (tailNames != '') {\t// Split on empty string doesn't give empty list\n\t\t\t// Find the last already created object in tailNames\n\t\t\tvar tailChain = tailNames.split ('.');\n\t\t\tvar firstNewIndex = tailChain.length;\n\t\t\tfor (var index = 0; index < tailChain.length; index++) {\n\t\t\t\tif (!current.hasOwnProperty (tailChain [index])) {\n\t\t\t\t\tfirstNewIndex = index;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcurrent = current [tailChain [index]];\n\t\t\t}\n\t\t\t\n\t\t\t// Create the rest of the objects, if any\n\t\t\tfor (var index = firstNewIndex; index < tailChain.length; index++) {\n\t\t\t\tcurrent [tailChain [index]] = {};\n\t\t\t\tcurrent = current [tailChain [index]];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Insert it new attributes, it may have been created earlier and have other attributes\n\t\tfor (var attrib in value) {\n\t\t\tcurrent [attrib] = value [attrib];\t\t\t\n\t\t}\t\t\n\t};\n\t__all__.__nest__ = __nest__;\n\t\n\t// Initialize module if not yet done and return its globals\n\tvar __init__ = function (module) {\n\t\tif (!module.__inited__) {\n\t\t\tmodule.__all__.__init__ (module.__all__);\n\t\t\tmodule.__inited__ = true;\n\t\t}\n\t\treturn module.__all__;\n\t};\n\t__all__.__init__ = __init__;\n\t\n\t// Since we want to assign functions, a = b.f should make b.f produce a bound function\n\t// So __get__ should be called by a property rather then a function\n\t// Factory __get__ creates one of three curried functions for func\n\t// Which one is produced depends on what's to the left of the dot of the corresponding JavaScript property\n\tvar __get__ = function (self, func, quotedFuncName) {\n\t\tif (self) {\n\t\t\tif (self.hasOwnProperty ('__class__') || typeof self == 'string' || self instanceof String) {\t\t\t// Object before the dot\n\t\t\t\tif (quotedFuncName) {\t\t\t\t\t\t\t\t\t// Memoize call since fcall is on, by installing bound function in instance\n\t\t\t\t\tObject.defineProperty (self, quotedFuncName, {\t\t// Will override the non-own property, next time it will be called directly\n\t\t\t\t\t\tvalue: function () {\t\t\t\t\t\t\t// So next time just call curry function that calls function\n\t\t\t\t\t\t\tvar args = [] .slice.apply (arguments);\n\t\t\t\t\t\t\treturn func.apply (null, [self] .concat (args));\n\t\t\t\t\t\t},\t\t\t\t\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn function () {\t\t\t\t\t\t\t\t\t// Return bound function, code dupplication for efficiency if no memoizing\n\t\t\t\t\tvar args = [] .slice.apply (arguments);\t\t\t\t// So multilayer search prototype, apply __get__, call curry func that calls func\n\t\t\t\t\treturn func.apply (null, [self] .concat (args));\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Class before the dot\n\t\t\t\treturn func;\t\t\t\t\t\t\t\t\t\t\t// Return static method\n\t\t\t}\n\t\t}\n\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Nothing before the dot\n\t\t\treturn func;\t\t\t\t\t\t\t\t\t\t\t\t// Return free function\n\t\t}\n\t}\n\t__all__.__get__ = __get__;\n\t\t\t\n\t// Class creator function\n\tvar __class__ = function (name, bases, extra) {\n\t\t// Create class functor\n\t\tvar cls = function () {\n\t\t\tvar args = [] .slice.apply (arguments);\n\t\t\treturn cls.__new__ (args);\n\t\t};\n\t\t\n\t\t// Copy methods, properties and static attributes from base classes to new class object\n\t\tfor (var index = bases.length - 1; index >= 0; index--) {\t// Reversed order, since class vars of first base should win\n\t\t\tvar base = bases [index];\n\t\t\tfor (var attrib in base) {\n\t\t\t\tvar descrip = Object.getOwnPropertyDescriptor (base, attrib);\n\t\t\t\tObject.defineProperty (cls, attrib, descrip);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Add class specific attributes to class object\n\t\tcls.__name__ = name;\n\t\tcls.__bases__ = bases;\n\t\t\n\t\t// Add own methods, properties and static attributes to class object\n\t\tfor (var attrib in extra) {\n\t\t\tvar descrip = Object.getOwnPropertyDescriptor (extra, attrib);\n\t\t\tObject.defineProperty (cls, attrib, descrip);\n\t\t}\n\t\t\t\t\n\t\t// Return class object\n\t\treturn cls;\n\t};\n\t__all__.__class__ = __class__;\n\n\t// Create mother of all classes\t\t\n\tvar object = __all__.__class__ ('object', [], {\n\t\t__init__: function (self) {},\n\t\t\t\n\t\t__name__: 'object',\n\t\t__bases__: [],\n\t\t\t\n\t\t// Object creator function is inherited by all classes (??? Make global?)\n\t\t__new__: function (args) {\t// Args are just the constructor args\t\t\n\t\t\t// In JavaScript the Python class is the prototype of the Python object\n\t\t\t// In this way methods and static attributes will be available both with a class and an object before the dot\n\t\t\t// The descriptor produced by __get__ will return the right method flavor\n\t\t\tvar instance = Object.create (this, {__class__: {value: this, enumerable: true}});\n\t\t\t\n\t\t\t// Call constructor\n\t\t\tthis.__init__.apply (null, [instance] .concat (args));\n\t\t\t\n\t\t\t// Return instance\t\t\t\n\t\t\treturn instance;\n\t\t}\t\n\t});\n\t__all__.object = object;\n\t\n\t// Define __pragma__ to preserve '<all>' and '</all>', since it's never generated as a function, must be done early, so here\n\tvar __pragma__ = function () {};\n\t__all__.__pragma__ = __pragma__;\n",
		"# This module is avaible both in the Python and Transcrypt environments\n# It is included in-between the __core__ and the __builtin__ module, so the latter can adapt __envir__\n# In Transcrypt, __base__ is available inline, it isn't nested and cannot be imported in the normal way\n\nclass __Envir__:\n\tdef __init__ (self):\n\t\tself.transpiler_name = 'transcrypt'\n\t\tself.transpiler_version = '3.5.194'\n\t\tself.target_subdir = '__javascript__'\n\t\t\n__envir__ = __Envir__ ()\n",
		"# This module is avaible solely in the Transcrypt environment\n# It is included after the __builtin__ module, since it uses its facilities\n# In Transcrypt, __standard__ is available inline, it isn't nested and cannot be imported in the normal way\n\n__pragma__ ('skip')\ncopy = 0\n__pragma__ ('noskip')\n\nfrom org.transcrypt.stubs.browser import __pragma__\n\n__pragma__ ('nokwargs')\n__pragma__ ('noalias', 'sort')\n\nclass Exception:\n\tdef __init__ (self, *args):\n\t\tself.args = args\n\t\t\n\tdef __repr__ (self):\n\t\tif len (self.args):\n\t\t\treturn '{}{}'.format (self.__class__.__name__, repr (tuple (self.args)))\n\t\telse:\n\t\t\treturn '???'\n\t\t\t\n\tdef __str__ (self):\n\t\tif len (self.args) > 1:\n\t\t\treturn str (tuple (self.args))\n\t\telif len (self.args):\n\t\t\treturn str (self.args [0])\n\t\telse:\n\t\t\treturn '???'\n\t\t\t\nclass ValueError (Exception):\n\tpass\n\t\t\t\n__pragma__ ('kwargs')\n\t\t\t\ndef __sort__ (iterable, key = None, reverse = False):\t# Used by py_sort, can deal with kwargs\n\tif key:\n\t\titerable.sort (lambda a, b: key (a) > key (b))\t# JavaScript sort\n\telse:\n\t\titerable.sort ()\t\t\t\t\t\t\t\t# JavaScript sort\n\t\t\n\tif reverse:\n\t\titerable.reverse ()\n\t\t\ndef sorted (iterable, key = None, reverse = False):\n\tif type (iterable) == dict:\n\t\tresult = copy (iterable.keys ()) \n\telse:\t\t\n\t\tresult = copy (iterable)\n\t\t\n\t__sort__ (result, key, reverse)\n\treturn result\n\n\n__pragma__ ('nokwargs')\n\ndef map (func, iterable):\n\treturn [func (item) for item in iterable]\n\n\ndef filter (func, iterable):\n\treturn [item for item in iterable if func (item)]\n\t\nclass __Terminal__:\n\tdef __init__ (self):\n\t\tself.element = document.getElementById ('__terminal__')\n\t\tif self.element:\n\t\t\tself.buffer = ''\n\t\t\tself.element.style.overflowX = 'auto'\n\t\t\tself.element.style.padding = '5px'\n\t\t\tself.element.innerHTML = '_'\n\t\t\n\t__pragma__ ('kwargs')\n\t\t\n\tdef print (self, *args, sep = ' ', end = '\\n'):\n\t\tif self.element:\n\t\t\tself.buffer = '{}{}{}'.format (self.buffer, sep.join ([str (arg) for arg in args]), end) [-4096 : ]\t\n\t\t\tself.element.innerHTML = self.buffer.replace ('\\n', '<br>')\n\t\t\tself.element.scrollTop = self.element.scrollHeight\n\t\telse:\n\t\t\tconsole.log (sep.join (args))\n\t\t\n\tdef input (self, question):\n\t\tself.print ('{}_'.format (question), end = '')\n\t\tanswer = window.prompt (question)\n\t\tself.buffer = self.buffer [:-1]\n\t\tself.print (answer)\n\t\treturn answer\n\t\t\n\t__pragma__ ('nokwargs')\n\t\n__terminal__ = __Terminal__ ()\n",
		"\n\t// Initialize non-nested modules __base__ and __standard__ and make its names available directly and via __all__\n\t// It can't do that itself, because it is a regular Python module\n\t// The compiler recognizes its their namesand generates them inline rather than nesting them\n\t// In this way it isn't needed to import them everywhere\n\t \t\n\t// __base__\n\t\n\t__nest__ (__all__, '', __init__ (__all__.org.transcrypt.__base__));\n\tvar __envir__ = __all__.__envir__;\n\n\t// __standard__\n\t\n\t__nest__ (__all__, '', __init__ (__all__.org.transcrypt.__standard__));\n\t\n\tvar Exception = __all__.Exception;\n\t\n\tvar __sort__ = __all__.__sort__;\n\tvar sorted = __all__.sorted;\n\t\n\tvar map = __all__.map;\n\tvar filter = __all__.filter;\n\t\n\t__all__.print = __all__.__terminal__.print;\n\t__all__.input = __all__.__terminal__.input;\n\t\n\tvar print = __all__.print;\n\tvar input = __all__.input;\n\n\t// Complete __envir__, that was created in __base__, for non-stub mode\n\t__envir__.executor_name = __envir__.transpiler_name;\n\t\n\t// Make make __main__ available in browser\n\tvar __main__ = {__file__: ''};\n\t__all__.main = __main__;\n\t\n\t// Define current exception, there's at most one exception in the air at any time\n\tvar __except__ = null;\n\t__all__.__except__ = __except__;\n\t\t\n\t// Define recognizable dictionary for **kwargs parameter\n\tvar __kwargdict__ = function (anObject) {\n\t\tanObject.__class__ = __kwargdict__;\t// This class needs no __name__\n\t\tanObject.constructor = Object;\n\t\treturn anObject;\n\t}\n\t__all__.___kwargdict__ = __kwargdict__;\n\t\n\t// Property installer function, no member since that would bloat classes\n\tvar property = function (getter, setter) {\t// Returns a property descriptor rather than a property\n\t\tif (!setter) {\t// ??? Make setter optional instead of dummy?\n\t\t\tsetter = function () {};\n\t\t}\n\t\treturn {get: function () {return getter (this)}, set: function (value) {setter (this, value)}, enumerable: true};\n\t}\n\t__all__.property = property;\n\t\n\tvar __merge__ = function (object0, object1) {\n\t\tvar result = {};\n\t\tfor (var attrib in object0) {\n\t\t\tresult [attrib] = object0 [attrib];\n\t\t}\n\t\tfor (var attrib in object1) {\n\t\t\tresult [attrib] = object1 [attrib];\n\t\t}\n\t\treturn result;\n\t}\n\t__all__.__merge__ = __merge__;\n\t\n\t// Make console.log understand apply\n\tconsole.log.apply = function () {\n\t\tprint ([] .slice.apply (arguments) .slice (1));\n\t};\n\n\t// Manipulating attributes by name\n\t\n\tvar setattr = function (obj, name, value) {\n\t\tobj [name] = value;\n\t};\n\t\t\n\t__all__.setattr = setattr;\n\t\n\tvar getattr = function (obj, name) {\n\t\treturn obj [name];\n\t};\n\t\n\t__all__.getattr= getattr\n\t\n\tvar hasattr = function (obj, name) {\n\t\treturn name in obj;\n\t};\n\t__all__.hasattr = hasattr;\n\t\n\tvar delattr = function (obj, name) {\n\t\tdelete obj [name];\n\t};\n\t__all__.delattr = (delattr);\n\t\n\t// In function, used to mimic Python's in operator\n\tvar __in__ = function (element, container) {\n\t\tif (type (container) == dict) {\n\t\t\treturn container.keys () .indexOf (element) > -1;\n\t\t}\n\t\telse {\n\t\t\treturn container.indexOf (element) > -1;\n\t\t}\n\t}\n\t__all__.__in__ = __in__;\n\t\n\t// Find out if an attribute is special\n\tvar __specialattrib__ = function (attrib) {\n\t\treturn (attrib.startswith ('__') && attrib.endswith ('__')) || attrib == 'constructor' || attrib.startswith ('py_');\n\t}\n\t__all__.__specialattrib__ = __specialattrib__;\n\t\t\n\t// Len function for any object\n\tvar len = function (anObject) {\n\t\tif (anObject) {\n\t\t\tvar l = anObject.length;\n\t\t\tif (l == undefined) {\n\t\t\t\tvar result = 0;\n\t\t\t\tfor (var attrib in anObject) {\n\t\t\t\t\tif (!__specialattrib__ (attrib)) {\n\t\t\t\t\t\tresult++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn l;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn 0;\n\t\t}\n\t}\n\t__all__.len = len;\n\t\n\tvar bool = function (any) {\t// Subtly different from __ (any), always truly returns a bool, rather than something truthy or falsy\n\t\treturn typeof any == 'boolean' ? any : typeof any == 'number' ? any != 0 : len (any) ? true : false;\n\t}\n\tbool.__name__ = 'bool'\t// So it can be used as a type with a name\n\t__all__.bool = bool;\n\t\n\tvar float = function (any) {\n\t\tif (isNaN (any)) {\n\t\t\tthrow ('ValueError');\t// !!! Turn into real value error\n\t\t}\n\t\telse {\n\t\t\treturn +any;\n\t\t}\n\t}\n\tfloat.__name__ = 'float'\n\t__all__.float = float;\n\t\n\tvar int = function (any) {\n\t\treturn float (any) | 0\n\t}\n\tint.__name__ = 'int';\n\t__all__.int = int;\n\t\n\tvar type = function (anObject) {\n\t\ttry {\n\t\t\treturn anObject.__class__;\n\t\t}\n\t\tcatch (exception) {\n\t\t\tvar aType = typeof anObject;\n\t\t\tif (aType == 'boolean') {\n\t\t\t\treturn bool;\n\t\t\t}\n\t\t\telse if (aType == 'number') {\n\t\t\t\tif (anObject % 1 == 0) {\n\t\t\t\t\treturn int;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn float;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn aType;\n\t\t\t}\n\t\t}\n\t}\n\t__all__.type = type;\n\t\n\tvar isinstance = function (anObject, classinfo) {\n\t\tfunction isA (queryClass) {\n\t\t\tif (queryClass == classinfo) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor (var index = 0; index < queryClass.__bases__.length; index++) {\n\t\t\t\tif (isA (queryClass.__bases__ [index], classinfo)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn isA (anObject.__class__)\n\t};\n\t__all__.isinstance = isinstance;\n\t\n\t// Truthyness conversion\n\tfunction __ (any) {\t// Subtly different from bool (any), __ ([1, 2, 3]) returns [1, 2, 3], needed for nonempty selection: l = list1 or list2\n\t\treturn ['boolean', 'number'] .indexOf (typeof (any)) >= 0 ? any : len (any) ? any : false;\n\t}\n\t__all__.__ = __;\n\t\n\t// Repr function uses __repr__ method, then __str__ then toString\n\tvar repr = function (anObject) {\n\t\ttry {\n\t\t\treturn anObject.__repr__ ();\n\t\t}\n\t\tcatch (exception) {\n\t\t\ttry {\n\t\t\t\treturn anObject.__str__ ();\n\t\t\t}\n\t\t\tcatch (exception) {\t// It was a dict in Python, so an Object in JavaScript\n\t\t\t\ttry {\n\t\t\t\t\tif (anObject.constructor == Object) {\n\t\t\t\t\t\tvar result = '{';\n\t\t\t\t\t\tvar comma = false;\n\t\t\t\t\t\tfor (var attrib in anObject) {\n\t\t\t\t\t\t\tif (!__specialattrib__ (attrib)) {\n\t\t\t\t\t\t\t\tif (attrib.isnumeric ()) {\n\t\t\t\t\t\t\t\t\tvar attribRepr = attrib;\t\t\t\t// If key can be interpreted as numerical, we make it numerical \n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t// So we accept that '1' is misrepresented as 1\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tvar attribRepr = '\\'' + attrib + '\\'';\t// Alpha key in dict\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (comma) {\n\t\t\t\t\t\t\t\t\tresult += ', ';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tcomma = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tresult += attribRepr + ': ' + anObject [attrib] .__repr__ ();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcatch (exception) {\n\t\t\t\t\t\t\t\t\tresult += attribRepr + ': ' + anObject [attrib] .toString ();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult += '}';\n\t\t\t\t\t\treturn result;\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn typeof anObject == 'boolean' ? anObject.toString () .capitalize () : anObject.toString ();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (exception) {\n\t\t\t\t\tconsole.log ('ERROR: Could not evaluate repr (<object of type ' + typeof anObject + '>)');\n\t\t\t\t\treturn '???';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t__all__.repr = repr;\n\t\n\t// Char from Unicode or ASCII\n\tvar chr = function (charCode) {\n\t\treturn String.fromCharCode (charCode);\n\t}\n\t__all__.chr = chr;\n\n\t// Unicode or ASCII from char\n\tvar ord = function (aChar) {\n\t\treturn aChar.charCodeAt (0);\n\t}\n\t__all__.org = ord;\n\t\n\t// Maximum of n numbers\n\tvar max = Math.max;\n\t__all__.max = max;\n\t\n\t// Minimum of n numbers\n\tvar min = Math.min;\n\t__all__.min = min;\n\t\n\t// Absolute value\n\tvar abs = Math.abs;\n\t__all__.abs = abs;\n\t\t\t\t\n\t// Iterator protocol functions\n\t\n\tfunction py_StopIteration () {\n\t\tname = 'StopIteration';\n\t\tmessage = 'Iterator exhausted';\n\t};\n\t\n\t__all__.py_StopIteration = py_StopIteration;\n\t\n\tfunction py_iter (iterable) {\n\t\tif ('__iter__' in iterable) {\n\t\t\treturn iterable.__iter__ ();\n\t\t}\n\t\telse {\t// Assume it's array-like, needed for JQuery. N.B. JQuery array-like objects are no true Array's\n\t\t\treturn list (iterable) .__iter__ ();\n\t\t}\n\t}\n\t__all__.py_iter = py_iter;\n\t\n\tfunction py_next (py_iterator) {\n\t\tvar result = py_iterator.__next__ ();\n\t\tif (typeof result == 'undefined') {\n\t\t\tthrow new py_StopIteration ();\n\t\t}\n\t\treturn result;\n\t}\n\t__all__.py_next = py_next;\n\t\n\tfunction __SeqIterator__ (iterable) {\n\t\tthis.iterable = iterable;\n\t\tthis.index = 0;\n\t}\n\t\n\t__all__.__SeqIterator__ = __SeqIterator__;\n\t\n\t__SeqIterator__.prototype.__this__ = function () {\n\t\treturn this;\n\t}\n\t\n\t__SeqIterator__.prototype.__next__ = function () {\n\t\treturn this.iterable [this.index++];\n\t}\n\t\n\tfunction __KeyIterator__ (iterable) {\n\t\tthis.iterable = iterable;\n\t\tthis.index = 0;\n\t}\n\n\t__all__.__KeyIterator__ = __KeyIterator__;\n\t\n\t__KeyIterator__.prototype.__this__ = function () {\n\t\treturn this;\n\t}\n\t\n\t__KeyIterator__.prototype.__next__ = function () {\n\t\treturn this.iterable.keys () [this.index++];\n\t}\n\t\t\t\n\t// Reversed function for arrays\n\tvar py_reversed = function (iterable) {\n\t\titerable = iterable.slice ();\n\t\titerable.reverse ();\n\t\treturn iterable;\n\t}\n\t__all__.py_reversed = py_reversed;\n\t\n\t// Zip method for arrays\n\tvar zip = function () {\n\t\tvar args = [] .slice.call (arguments);\n\t\tvar shortest = args.length == 0 ? [] : args.reduce (\t// Find shortest array in arguments\n\t\t\tfunction (array0, array1) {\n\t\t\t\treturn array0.length < array1.length ? array0 : array1;\n\t\t\t}\n\t\t);\n\t\treturn shortest.map (\t\t\t\t\t// Map each element of shortest array\n\t\t\tfunction (current, index) {\t\t\t// To the result of this function\n\t\t\t\treturn args.map (\t\t\t\t// Map each array in arguments\n\t\t\t\t\tfunction (current) {\t\t// To the result of this function\n\t\t\t\t\t\treturn current [index]; // Namely it's index't entry\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\t__all__.zip = zip;\n\t\n\t// Range method, returning an array\n\tfunction range (start, stop, step) {\n\t\tif (typeof stop == 'undefined') {\n\t\t\t// one param defined\n\t\t\tstop = start;\n\t\t\tstart = 0;\n\t\t}\n\t\tif (typeof step == 'undefined') {\n\t\t\tstep = 1;\n\t\t}\n\t\tif ((step > 0 && start >= stop) || (step < 0 && start <= stop)) {\n\t\t\treturn [];\n\t\t}\n\t\tvar result = [];\n\t\tfor (var i = start; step > 0 ? i < stop : i > stop; i += step) {\n\t\t\tresult.push(i);\n\t\t}\n\t\treturn result;\n\t};\n\t__all__.range = range;\n\t\n\t// Enumerate method, returning a zipped list\n\tfunction enumerate (iterable) {\n\t\treturn zip (range (len (iterable)), iterable);\n\t}\n\t__all__.enumerate = enumerate;\n\t\t\n\t// Shallow and deepcopy\n\t\n\tfunction copy (anObject) {\n\t\tif (anObject == null || typeof anObject == \"object\") {\n\t\t\treturn anObject;\n\t\t}\n\t\telse {\n\t\t\tvar result = {}\n\t\t\tfor (var attrib in obj) {\n\t\t\t\tif (anObject.hasOwnProperty (attrib)) {\n\t\t\t\t\tresult [attrib] = anObject [attrib];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\t__all__.copy = copy;\n\t\n\tfunction deepcopy (anObject) {\n\t\tif (anObject == null || typeof anObject == \"object\") {\n\t\t\treturn anObject;\n\t\t}\n\t\telse {\n\t\t\tvar result = {}\n\t\t\tfor (var attrib in obj) {\n\t\t\t\tif (anObject.hasOwnProperty (attrib)) {\n\t\t\t\t\tresult [attrib] = deepcopy (anObject [attrib]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\t__all__.deepcopy = deepcopy;\n\t\t\n\t// List extensions to Array\n\t\n\tfunction list (iterable) {\t\t\t\t\t\t\t\t\t\t// All such creators should be callable without new\n\t\tvar instance = iterable ? [] .slice.apply (iterable) : [];\t// Spread iterable, n.b. array.slice (), so array before dot\n\t\t// Sort is the normal JavaScript sort, Python sort is a non-member function\n\t\treturn instance;\n\t}\n\t__all__.list = list;\n\tArray.prototype.__class__ = list;\t// All arrays are lists (not only if constructed by the list ctor), unless constructed otherwise\n\tlist.__name__ = 'list';\n\t\n\tArray.prototype.__iter__ = function () {\n\t\treturn new __SeqIterator__ (this);\n\t}\n\t\n\tArray.prototype.__getslice__ = function (start, stop, step) {\n\t\tif (start < 0) {\n\t\t\tstart = this.length + start;\n\t\t}\n\t\t\n\t\tif (stop == null) {\n\t\t\tstop = this.length;\n\t\t}\n\t\telse if (stop < 0) {\n\t\t\tstop = this.length + stop;\n\t\t}\n\t\t\n\t\tvar result = list ([]);\n\t\tfor (var index = start; index < stop; index += step) {\n\t\t\tresult.push (this [index]);\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\t\n\tArray.prototype.__setslice__ = function (start, stop, step, source) {\n\t\tif (start < 0) {\n\t\t\tstart = this.length + start;\n\t\t}\n\t\t\t\n\t\tif (stop == null) {\n\t\t\tstop = this.length;\n\t\t}\n\t\telse if (stop < 0) {\n\t\t\tstop = this.length + stop;\n\t\t}\n\t\t\t\n\t\tif (step == null) {\t// Assign to 'ordinary' slice, replace subsequence\n\t\t\tArray.prototype.splice.apply (this, [start, stop - start] .concat (source)) \n\t\t}\n\t\telse {\t\t\t\t// Assign to extended slice, replace designated items one by one\n\t\t\tvar sourceIndex = 0;\n\t\t\tfor (var targetIndex = start; targetIndex < stop; targetIndex += step) {\n\t\t\t\tthis [targetIndex] = source [sourceIndex++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tArray.prototype.__repr__ = function () {\n\t\tif (this.__class__ == set && !this.length) {\n\t\t\treturn 'set()';\n\t\t}\n\t\t\n\t\tvar result = !this.__class__ || this.__class__ == list ? '[' : this.__class__ == tuple ? '(' : '{';\n\t\t\n\t\tfor (var index = 0; index < this.length; index++) {\n\t\t\tif (index) {\n\t\t\t\tresult += ', ';\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tresult += this [index] .__repr__ ();\n\t\t\t}\n\t\t\tcatch (exception) {\n\t\t\t\tresult += this [index] .toString ();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.__class__ == tuple && this.length == 1) {\n\t\t\tresult += ',';\n\t\t}\n\t\t\n\t\tresult += !this.__class__ || this.__class__ == list ? ']' : this.__class__ == tuple ? ')' : '}';;\n\t\treturn result;\n\t};\n\t\n\tArray.prototype.__str__ = Array.prototype.__repr__;\n\t\n\tArray.prototype.append = function (element) {\n\t\tthis.push (element);\n\t};\n\n\tArray.prototype.clear = function () {\n\t\tthis.length = 0;\n\t};\n\t\n\tArray.prototype.extend = function (aList) {\n\t\tthis.push.apply (this, aList);\n\t};\n\t\n\tArray.prototype.insert = function (index, element) {\n\t\tthis.splice (index, 0, element);\n\t};\n\n\tArray.prototype.remove = function (element) {\n\t\tvar index = this.indexOf (element);\n\t\tif (index == -1) {\n\t\t\tthrow ('KeyError');\n\t\t}\n\t\tthis.splice (index, 1);\n\t};\n\n\tArray.prototype.index = function (element) {\n\t\treturn this.indexOf (element)\n\t};\n\t\n\tArray.prototype.py_pop = function (index) {\n\t\tif (index == undefined) {\n\t\t\treturn this.pop ()\t// Remove last element\n\t\t}\n\t\telse {\n\t\t\treturn this.splice (index, 1) [0];\n\t\t}\n\t};\t\n\t\n\tArray.prototype.py_sort = function () {\n\t\t__sort__.apply  (null, [this].concat ([] .slice.apply (arguments)));\t// Can't work directly with arguments\n\t\t// Python params: (iterable, key = None, reverse = False)\n\t\t// py_sort is called with the Transcrypt kwargs mechanism, and just passes the params on to __sort__\n\t\t// __sort__ is def'ed with the Transcrypt kwargs mechanism\n\t};\n\t\n\tArray.prototype.__add__ = function (aList) {\n\t\treturn list (this.concat (aList))\n\t}\n\t\n\tArray.prototype.__mul__ = function (scalar) {\n\t\tvar result = this;\n\t\tfor (var i = 1; i < scalar; i++) {\n\t\t\tresult = result.concat (this);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tArray.prototype.__rmul__ = Array.prototype.__mul__;\n\t\t\n\t// Tuple extensions to Array\n\t\n\tfunction tuple (iterable) {\n\t\tvar instance = iterable ? [] .slice.apply (iterable) : [];\n\t\tinstance.__class__ = tuple;\t// Not all arrays are tuples\n\t\treturn instance;\n\t}\n\t__all__.tuple = tuple;\n\ttuple.__name__ = 'tuple';\n\t\n\t// Set extensions to Array\n\t// N.B. Since sets are unordered, set operations will occasionally alter the 'this' array by sorting it\n\t\t\n\tfunction set (iterable) {\n\t\tvar instance = [];\n\t\tif (iterable) {\n\t\t\tfor (var index = 0; index < iterable.length; index++) {\n\t\t\t\tinstance.add (iterable [index]);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\tinstance.__class__ = set;\t// Not all arrays are sets\n\t\treturn instance;\n\t}\n\t__all__.set = set;\n\tset.__name__ = 'set';\n\t\n\tArray.prototype.__bindexOf__ = function (element) {\t// Used to turn O (n^2) into O (n log n)\n\t// Since sorting is lex, compare has to be lex. This also allows for mixed lists\n\t\n\t\telement += '';\n\t\n\t\tvar mindex = 0;\n\t\tvar maxdex = this.length - 1;\n\t\t\t \n\t\twhile (mindex <= maxdex) {\n\t\t\tvar index = (mindex + maxdex) / 2 | 0;\n\t\t\tvar middle = this [index] + '';\n\t \n\t\t\tif (middle < element) {\n\t\t\t\tmindex = index + 1;\n\t\t\t}\n\t\t\telse if (middle > element) {\n\t\t\t\tmaxdex = index - 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\t \n\t\treturn -1;\n\t}\n\t\n\tArray.prototype.add = function (element) {\t\t\n\t\tif (this.indexOf (element) == -1) {\t// Avoid duplicates in set\n\t\t\tthis.push (element);\n\t\t}\n\t};\n\t\n\tArray.prototype.discard = function (element) {\n\t\tvar index = this.indexOf (element);\n\t\tif (index != -1) {\n\t\t\tthis.splice (index, 1);\n\t\t}\n\t};\n\t\n\tArray.prototype.isdisjoint = function (other) {\n\t\tthis.sort ();\n\t\tfor (var i = 0; i < other.length; i++) {\n\t\t\tif (this.__bindexOf__ (other [i]) != -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\t\n\tArray.prototype.issuperset = function (other) {\n\t\tthis.sort ();\n\t\tfor (var i = 0; i < other.length; i++) {\n\t\t\tif (this.__bindexOf__ (other [i]) == -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\t\n\tArray.prototype.issubset = function (other) {\n\t\treturn set (other.slice ()) .issuperset (this);\t// Sort copy of 'other', not 'other' itself, since it may be an ordered sequence\n\t};\n\t\n\tArray.prototype.union = function (other) {\n\t\tvar result = set (this.slice () .sort ());\n\t\tfor (var i = 0; i < other.length; i++) {\n\t\t\tif (result.__bindexOf__ (other [i]) == -1) {\n\t\t\t\tresult.push (other [i]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\t\n\tArray.prototype.intersection = function (other) {\n\t\tthis.sort ();\n\t\tvar result = set ();\n\t\tfor (var i = 0; i < other.length; i++) {\n\t\t\tif (this.__bindexOf__ (other [i]) != -1) {\n\t\t\t\tresult.push (other [i]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\t\n\tArray.prototype.difference = function (other) {\n\t\tvar sother = set (other.slice () .sort ());\n\t\tvar result = set ();\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tif (sother.__bindexOf__ (this [i]) == -1) {\n\t\t\t\tresult.push (this [i]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\t\n\tArray.prototype.symmetric_difference = function (other) {\n\t\treturn this.union (other) .difference (this.intersection (other));\n\t};\n\t\n\tArray.prototype.update = function () {\t// O (n)\n\t\tvar updated = [] .concat.apply (this.slice (), arguments) .sort ();\t\t\n\t\tthis.clear ();\n\t\tfor (var i = 0; i < updated.length; i++) {\n\t\t\tif (updated [i] != updated [i - 1]) {\n\t\t\t\tthis.push (updated [i]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\tArray.prototype.__eq__ = function (other) {\t// Also used for list\n\t\tif (this.length != other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.__class__ == set) {\n\t\t\tthis.sort ();\n\t\t\tother.sort ();\n\t\t}\t\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tif (this [i] != other [i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\t\n\tArray.prototype.__ne__ = function (other) {\t// Also used for list\n\t\treturn !this.__eq__ (other);\n\t}\n\t\t\n\tArray.prototype.__le__ = function (other) {\n\t\treturn this.issubset (other);\n\t}\n\t\t\n\tArray.prototype.__ge__ = function (other) {\n\t\treturn this.issuperset (other);\n\t}\n\t\t\n\tArray.prototype.__lt__ = function (other) {\n\t\treturn this.issubset (other) && !this.issuperset (other);\n\t}\n\t\t\n\tArray.prototype.__gt__ = function (other) {\n\t\treturn this.issuperset (other) && !this.issubset (other);\n\t}\n\t\n\t// Dict extensions to object\n\t\n\tfunction __keyIterator__ () {\n\t\treturn new __KeyIterator__ (this);\n\t}\n\t\n\tfunction __keys__ () {\n\t\tvar keys = []\n\t\tfor (var attrib in this) {\n\t\t\tif (!__specialattrib__ (attrib)) {\n\t\t\t\tkeys.push (attrib);\n\t\t\t}     \n\t\t}\n\t\treturn keys;\n\t}\n\t\t\n\tfunction __items__ () {\n\t\tvar items = []\n\t\tfor (var attrib in this) {\n\t\t\tif (!__specialattrib__ (attrib)) {\n\t\t\t\titems.push ([attrib, this [attrib]]);\n\t\t\t}     \n\t\t}\n\t\treturn items;\n\t}\n\t\t\n\tfunction __del__ (key) {\n\t\tdelete this [key];\n\t}\n\t\n\tfunction __clear__ () {\n\t\tfor (var attrib in this) {\n\t\t\tdelete this [attrib];\n\t\t}\n\t}\n\t\t\n\tfunction dict (objectOrPairs) {\n\t\tif (!objectOrPairs || objectOrPairs instanceof Array) {\t// It's undefined or an array of pairs\n\t\t\tvar instance = {};\n\t\t\tif (objectOrPairs) {\n\t\t\t\tfor (var index = 0; index < objectOrPairs.length; index++) {\n\t\t\t\t\tvar pair = objectOrPairs [index];\n\t\t\t\t\tinstance [pair [0]] = pair [1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t// It's a JavaScript object literal\n\t\t\tvar instance = objectOrPairs;\n\t\t}\n\t\t\t\n\t\t// Trancrypt interprets e.g. {aKey: 'aValue'} as a Python dict literal rather than a JavaScript object literal\n\t\t// So dict literals rather than bare Object literals will be passed to JavaScript libraries\n\t\t// Some JavaScript libraries call all enumerable callable properties of an object that's passed to them\n\t\t// So the properties of a dict should be non-enumerable\n\t\tObject.defineProperty (instance, '__class__', {value: dict, enumerable: false, writable: true});\n\t\tObject.defineProperty (instance, 'keys', {value: __keys__, enumerable: false});\n\t\tObject.defineProperty (instance, '__iter__', {value: __keyIterator__, enumerable: false});\n\t\tObject.defineProperty (instance, 'items', {value: __items__, enumerable: false});\t\t\n\t\tObject.defineProperty (instance, 'del', {value: __del__, enumerable: false});\n\t\tObject.defineProperty (instance, 'clear', {value: __clear__, enumerable: false});\n\t\t\n\t\treturn instance;\n\t}\n\t__all__.dict = dict;\n\tdict.__name__ = 'dict';\n\t\n\t// String extensions\n\t\n\tfunction str (stringable) {\n\t\ttry {\n\t\t\treturn stringable.__str__ ();\n\t\t}\n\t\tcatch (e) {\n\t\t\treturn new String (stringable);\n\t\t}\n\t}\n\t__all__.str = str;\t\n\t\n\tString.prototype.__class__ = str;\t// All strings are str\n\tstr.__name__ = 'str';\n\t\n\tString.prototype.__iter__ = function () {\n\t\treturn new __SeqIterator__ (this);\n\t}\n\t\t\n\tString.prototype.__repr__ = function () {\n\t\treturn (this.indexOf ('\\'') == -1 ? '\\'' + this + '\\'' : '\"' + this + '\"') .replace ('\\n', '\\\\n');\n\t};\n\t\n\tString.prototype.__str__ = function () {\n\t\treturn this;\n\t};\n\t\n\tString.prototype.capitalize = function () {\n\t\treturn this.charAt (0).toUpperCase () + this.slice (1);\n\t};\n\t\n\tString.prototype.endswith = function (suffix) {\n\t\treturn suffix == '' || this.slice (-suffix.length) == suffix;\n\t};\n\t\n\tString.prototype.find  = function (sub, start) {\n\t\treturn this.indexOf (sub, start);\n\t};\n\t\n\tString.prototype.__getslice__ = function (start, stop, step) {\n\t\tif (start < 0) {\n\t\t\tstart = this.length + start;\n\t\t}\n\t\t\n\t\tif (stop == null) {\n\t\t\tstop = this.length;\n\t\t}\n\t\telse if (stop < 0) {\n\t\t\tstop = this.length + stop;\n\t\t}\n\t\t\n\t\tvar result = '';\n\t\tif (step == 1) {\n\t\t\tresult = this.substring (start, stop);\n\t\t}\n\t\telse {\n\t\t\tfor (var index = start; index < stop; index += step) {\n\t\t\t\tresult = result.concat (this.charAt(index));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t// Since it's worthwhile for the 'format' function to be able to deal with *args, it is defined as a property\n\t// __get__ will produce a bound function if there's something before the dot\n\t// Since a call using *args is compiled to e.g. <object>.<function>.apply (null, args), the function has to be bound already\n\t// Otherwise it will never be, because of the null argument\n\t// Using 'this' rather than 'null' contradicts the requirement to be able to pass bound functions around\n\t// The object 'before the dot' won't be available at call time in that case, unless implicitly via the function bound to it\n\t// While for Python methods this mechanism is generated by the compiler, for JavaScript methods it has to be provided manually\n\t// Call memoizing is unattractive here, since every string would then have to hold a reference to a bound format method\n\tObject.defineProperty (String.prototype, 'format', {\n\t\tget: function () {return __get__ (this, function (self) {\n\t\t\tvar args = tuple ([] .slice.apply (arguments).slice (1));\t\t\t\n\t\t\tvar autoIndex = 0;\n\t\t\treturn self.replace (/\\{(\\w*)\\}/g, function (match, key) { \n\t\t\t\tif (key == '') {\n\t\t\t\t\tkey = autoIndex++;\n\t\t\t\t}\n\t\t\t\tif (key == +key) {\t// So key is numerical\n\t\t\t\t\treturn args [key] == 'undefined' ? match : args [key];\n\t\t\t\t}\n\t\t\t\telse {\t\t\t\t// Key is a string\n\t\t\t\t\tfor (var index = 0; index < args.length; index++) {\n\t\t\t\t\t\t// Find first 'dict' that has that key and the right field\n\t\t\t\t\t\tif (typeof args [index] == 'object' && typeof args [index][key] != 'undefined') {\n\t\t\t\t\t\t\treturn args [index][key];\t// Return that field field\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t});\n\t\t});},\n\t\tenumerable: true\n\t});\n\t\n\tString.prototype.isnumeric = function () {\n\t\treturn !isNaN (parseFloat (this)) && isFinite (this);\n\t};\n\t\n\tString.prototype.join = function (aList) {\n\t\treturn aList.join (this);\n\t};\n\t\n\tString.prototype.lower = function () {\n\t\treturn this.toLowerCase ();\n\t};\n\t\n\tString.prototype.py_replace = function (old, aNew, maxreplace) {\n\t\treturn this.split (old, maxreplace) .join (aNew);\n\t};\n\t\n\tString.prototype.lstrip = function () {\n\t\treturn this.replace (/^\\s*/g, '');\n\t};\n\t\n\tString.prototype.rfind = function (sub, start) {\n\t\treturn this.lastIndexOf (sub, start);\n\t};\n\t\n\tString.prototype.rsplit = function (sep, maxsplit) {\n\t\tvar split = this.split (sep || /s+/);\n\t\treturn maxsplit ? [ split.slice (0, -maxsplit) .join (sep) ].concat (split.slice (-maxsplit)) : split;\n\t};\n\t\n\tString.prototype.rstrip = function () {\n\t\treturn this.replace (/\\s*$/g, '');\n\t};\n\t\n\tString.prototype.py_split = function (sep, maxsplit) {\n\t\tif (!sep) {\n\t\t\tsep = ' ';\n\t\t}\n\t\treturn this.split (sep || /s+/, maxsplit);\n\t};\n\t\n\tString.prototype.startswith = function (prefix) {\n\t\treturn this.indexOf (prefix) == 0;\n\t};\n\t\n\tString.prototype.strip = function () {\n\t\treturn this.trim ();\n\t};\n\t\t\n\tString.prototype.upper = function () {\n\t\treturn this.toUpperCase ();\n\t};\n\t\n\tString.prototype.__mul__ = function (scalar) {\n\t\tvar result = this;\n\t\tfor (var i = 1; i < scalar; i++) {\n\t\t\tresult = result + this;\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tString.prototype.__rmul__ = String.prototype.__mul__;\n\t\n\t// Operator overloading, only the ones that make most sense in matrix operations\n\t\n\tvar __neg__ = function (a) {\n\t\tif (typeof a == 'object' && '__neg__' in a) {\n\t\t\treturn a.__neg__ ();\n\t\t}\n\t\telse {\n\t\t\treturn -a;\n\t\t}\n\t};  \n\t__all__.__neg__ = __neg__;\n\t\n\tvar __matmul__ = function (a, b) {\n\t\treturn a.__matmul__ (b);\n\t};  \n\t__all__.__matmul__ = __matmul__;\n\t\n\tvar __mul__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__mul__' in a) {\n\t\t\treturn a.__mul__ (b);\n\t\t}\n\t\telse if (typeof b == 'object' && '__rmul__' in b) {\n\t\t\treturn b.__rmul__ (a);\n\t\t}\n\t\telse if (typeof a == 'string') {\n\t\t\treturn a.__mul__ (b);\n\t\t}\n\t\telse if (typeof b == 'string') {\n\t\t\treturn b.__rmul__ (a);\n\t\t}\n\t\telse {\n\t\t\treturn a * b;\n\t\t}\n\t};  \n\t__all__.__mul__ = __mul__;\n\t\n\tvar __div__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__div__' in a) {\n\t\t\treturn a.__div__ (b);\n\t\t}\n\t\telse if (typeof b == 'object' && '__rdiv__' in b) {\n\t\t\treturn b.__rdiv__ (a);\n\t\t}\n\t\telse {\n\t\t\treturn a / b;\n\t\t}\n\t};  \n\t__all__.__div__ = __div__;\n\t\n\tvar __add__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__add__' in a) {\n\t\t\treturn a.__add__ (b);\n\t\t}\n\t\telse if (typeof b == 'object' && '__radd__' in b) {\n\t\t\treturn b.__radd__ (a);\n\t\t}\n\t\telse {\n\t\t\treturn a + b;\n\t\t}\n\t};  \n\t__all__.__add__ = __add__;\n\t\n\tvar __sub__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__sub__' in a) {\n\t\t\treturn a.__sub__ (b);\n\t\t}\n\t\telse if (typeof b == 'object' && '__rsub__' in b) {\n\t\t\treturn b.__rsub__ (a);\n\t\t}\n\t\telse {\n\t\t\treturn a - b;\n\t\t}\n\t};  \n\t__all__.__sub__ = __sub__;\n\t\n\tvar __eq__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__eq__' in a) {\n\t\t\treturn a.__eq__ (b);\n\t\t}\n\t\telse {\n\t\t\treturn a == b\n\t\t}\n\t};\n\t__all__.__eq__ = __eq__;\n\t\t\n\tvar __ne__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__ne__' in a) {\n\t\t\treturn a.__ne__ (b);\n\t\t}\n\t\telse {\n\t\t\treturn a != b\n\t\t}\n\t};\n\t__all__.__ne__ = __ne__;\n\t\t\n\tvar __lt__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__lt__' in a) {\n\t\t\treturn a.__lt__ (b);\n\t\t}\n\t\telse {\n\t\t\treturn a < b\n\t\t}\n\t};\n\t__all__.__lt__ = __lt__;\n\t\t\n\tvar __le__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__le__' in a) {\n\t\t\treturn a.__le__ (b);\n\t\t}\n\t\telse {\n\t\t\treturn a <= b\n\t\t}\n\t};\n\t__all__.__le__ = __le__;\n\t\t\n\tvar __gt__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__gt__' in a) {\n\t\t\treturn a.__gt__ (b);\n\t\t}\n\t\telse {\n\t\t\treturn a > b\n\t\t}\n\t};\n\t__all__.__gt__ = __gt__;\n\t\t\n\tvar __ge__ = function (a, b) {\n\t\tif (typeof a == 'object' && '__ge__' in a) {\n\t\t\treturn a.__ge__ (b);\n\t\t}\n\t\telse {\n\t\t\treturn a >= b\n\t\t}\n\t};\n\t__all__.__ge__ = __ge__;\n\t\t\n\tvar __getitem__ = function (container, key) {\n\t\tif (typeof container == 'object' && '__getitem__' in container) {\n\t\t\treturn container.__getitem__ (key);\n\t\t}\n\t\telse {\n\t\t\treturn container [key];\n\t\t}\n\t};\n\t__all__.__getitem__ = __getitem__;\n\n\tvar __setitem__ = function (container, key, value) {\n\t\tif (typeof container == 'object' && '__setitem__' in container) {\n\t\t\tcontainer.__setitem__ (key, value);\n\t\t}\n\t\telse {\n\t\t\tcontainer [key] = value;\n\t\t}\n\t};\n\t__all__.__setitem__ = __setitem__;\n\n\tvar __getslice__ = function (container, lower, upper, step) {\n\t\tif (typeof container == 'object' && '__getitem__' in container) {\n\t\t\treturn container.__getitem__ ([lower, upper, step]);\n\t\t}\n\t\telse {\n\t\t\treturn container.__getslice__ (lower, upper, step);\n\t\t}\n\t};\n\t__all__.__getslice__ = __getslice__;\n\n\tvar __setslice__ = function (container, lower, upper, step, value) {\n\t\tif (typeof container == 'object' && '__setitem__' in container) {\n\t\t\tcontainer.__setitem__ ([lower, upper, step], value);\n\t\t}\n\t\telse {\n\t\t\tcontainer.__setslice__ (lower, upper, step, value);\n\t\t}\n\t};\n\t__all__.__setslice__ = __setslice__;\n\n\tvar __call__ = function (/* <callee>, <params>* */) {\n\t\tvar args = [] .slice.apply (arguments)\n\t\tif (typeof args [0] == 'object' && '__call__' in args [0]) {\n\t\t\treturn args [0] .__call__ .apply (null,  args.slice (1));\n\t\t}\n\t\telse {\n\t\t\treturn args [0] .apply (null, args.slice (1));\n\t\t}\t\t\n\t};\n\t__all__.__call__ = __call__;\n\n",
		"# Mersenne-Twister algorithm\n\n_array = [0 for i in range (624)]\n_index = 0\n_bitmask1 = (2 ** 32) - 1\n_bitmask2 = 2 ** 31\n_bitmask3 = (2 ** 31) - 1\n\ndef _fill_array():\n\tglobal _array\n\tfor i in range (624):\n\t\ty = (_array [i] & _bitmask2) + (_array [(i + 1) % 624] & _bitmask3)\n\t\t_array [i] = _array [(i + 397) % 624] ^ (y >> 1)\n\t\tif y % 2 != 0:\n\t\t\t_array[i] ^= 2567483615\n\t\t\t\ndef _random_integer ():\n\tglobal _index\n\tglobal _array\n\tif _index == 0:\n\t\t_fill_array ()\n\ty = _array [_index]\n\ty ^= y >> 11\n\ty ^= (y << 7) & 2636928640\n\ty ^= (y << 15) & 4022730752\n\ty ^= y >> 18\n\n\t_index = (_index + 1) % 624\n\treturn y\n\ndef seed (x = int (_bitmask3 * Math.random ())):\n\tglobal _array\n\tglobal _bitmask1\n\t_array [0] = x\n\tfor i in  range (1, 624):\n\t\t_array [i] = ((1812433253 * _array [i - 1]) ^ ((_array [i - 1] >> 30) + i)) & _bitmask1\n\ndef randint (a, b):\n\treturn a + _random_integer () % (b - a + 1)\n\ndef choice (seq):\n\treturn seq [randint (0, len (seq) - 1)]\n\ndef random ():\n\treturn _random_integer () / _bitmask3\n\t\nseed ()\n",
		"import random\n\nclass Dice:\n\tdef __init__ (self):\n\t\tdocument.body.addEventListener ('touchstart', lambda event: event.preventDefault ())\n\t\tdocument.body.addEventListener ('mousedown', lambda event: event.preventDefault ())\n\t\tdocument.body.style.margin = 0\n\t\tdocument.body.style.overflow = 'hidden';\n\t\n\t\tself.all = document.createElement ('div')\n\t\tself.all.style.color = 'white'\n\t\tself.all.style.backgroundColor = 'black'\n\t\tself.all.style.height = '100%'\n\t\tself.all.style.width = '100%'\n\t\tself.all.style.padding = 0\n\t\tself.all.style.margin = 0\n\t\tdocument.body.appendChild (self.all)\n\t\t\n\t\tself.dices = []\n\t\t\n\t\tfor index in range (6):\n\t\t\tdice = document.createElement ('div')\n\t\t\tdice.normalColor = '#770000' if index < 3 else '#0000ff'\n\t\t\tdice.style.position = 'absolute'\n\t\t\tdice.style.backgroundColor = dice.normalColor\n\t\t\tdice.addEventListener ('touchstart', (lambda aDice: lambda: self.roll (aDice)) (dice))\t# Returns inner lambda\n\t\t\tdice.addEventListener ('mousedown', (lambda aDice: lambda: self.roll (aDice)) (dice))\n\t\t\tself.dices.append (dice)\n\t\t\tself.all.appendChild (dice)\n\t\t\t\n\t\t\tdice.inner = document.createElement ('div')\n\t\t\tdice.inner.setAttribute ('unselectable', 'on')\n\t\t\tdice.inner.style.fontWeight = 'bold'\n\t\t\tdice.inner.style.textAlign = 'center'\n\t\t\tdice.inner.style.position = 'absolute'\n\t\t\tdice.inner.innerHTML = '?'\n\t\t\tdice.appendChild (dice.inner)\n\t\t\t\n\t\tself.banner = document.createElement ('div')\n\t\tself.banner.style.position = 'absolute'\n\t\tself.banner.style.cursor = 'pointer'\n\t\tself.banner.addEventListener ('touchstart', self.gotoTranscryptSite)\n\t\tself.banner.addEventListener ('mousedown', self.gotoTranscryptSite)\n\t\tself.banner.style.fontFamily = 'arial'\n\t\tself.banner.innerHTML = (\n\t\t\t'<span id=\"bannerLarge\"><font color=\"777777\">www.<b><i>' +\n\t\t\t'<font color=\"ff4422\">T<font color=\"ffb000\">r<font color=\"228822\">a<font color=\"3366ff\">n' +\n\t\t\t'<font color=\"ff4422\">s<font color=\"ffb000\">c<font color=\"228822\">r<font color=\"3366ff\">y<font color=\"ffb000\">p<font color=\"228822\">t' +\n\t\t\t'</i></b><font color=\"777777\">.org<font size={}><font color=\"cccccc\"></span>' +\n\t\t\t'<span id=\"bannerSmall\"><i> Write your apps in Python for free!</i></span>'\n\t\t)\n\t\tself.all.appendChild (self.banner)\n\n\t\tself.bannerLarge = document.getElementById ('bannerLarge')\n\t\tself.bannerSmall = document.getElementById ('bannerSmall')\n\t\t\n\t\tself.audio = __new__ (Audio ('ios_app.mp3'))\n\t\t\n\t\twindow.onresize = self.rightSize\n\t\tself.rightSize ()\n\t\t\n\tdef gotoTranscryptSite (self):\n\t\tdocument.location.href = 'http://www.transcrypt.org'\n\t\t\n\tdef roll (self, dice):\n\t\tframeIndex = 10\n\n\t\tself.audio.play ()\n\t\t\n\t\tdef frame ():\n\t\t\tnonlocal frameIndex\n\t\t\tframeIndex -= 1\n\t\t\t\n\t\t\tdice.inner.innerHTML = random.randint (1, 6)\n\n\t\t\tif frameIndex:\n\t\t\t\tdice.style.color = random.choice (('red', 'green', 'blue', 'yellow'))\n\t\t\t\tsetTimeout (frame, 100)\n\t\t\telse:\n\t\t\t\tdice.style.backgroundColor = dice.normalColor\n\t\t\t\tdice.style.color = 'white'\n\t\t\t\t\n\t\tframe ()\n\t\n\tdef rightSize (self):\n\t\tself.pageWidth = window.innerWidth\n\t\tself.pageHeight = window.innerHeight\n\t\tportrait = self.pageHeight > self.pageWidth\n\t\t\n\t\tfor index, dice in enumerate (self.dices):\n\t\t\tif self.pageHeight > self.pageWidth:\t# Portrait\n\t\t\t\tdice.style.height = 0.3 * self.pageHeight\n\t\t\t\tdice.style.width = 0.4 * self.pageWidth\n\t\t\t\tdice.style.top = (0.03 + (index if index < 3 else index - 3) * 0.32) * self.pageHeight\n\t\t\t\tdice.style.left = (0.06 if index < 3 else 0.54) * self.pageWidth\n\t\t\t\t\n\t\t\t\tcharBoxSide = 0.3 * self.pageHeight\n\t\t\t\tdice.inner.style.top = 0.15 * self.pageHeight - 0.6 * charBoxSide\n\t\t\t\tdice.inner.style.left = 0.2 * self.pageWidth - 0.5 * charBoxSide\n\n\t\t\t\tself.banner.style.top = 0.975 * self.pageHeight\n\t\t\t\tself.banner.style.left = 0.06 * self.pageWidth\t\t\t\t\n\t\t\t\tself.bannerLarge.style.fontSize = 0.017 * self.pageHeight\n\t\t\t\tself.bannerSmall.style.fontSize = 0.014 * self.pageHeight\n\t\t\telse:\t\t\t\t\t\t\t\t\t# Landscape\n\t\t\t\tdice.style.height = 0.4 * self.pageHeight\n\t\t\t\tdice.style.width = 0.3 * self.pageWidth\n\t\t\t\tdice.style.top = (0.06 if index < 3 else 0.54) * self.pageHeight\n\t\t\t\tdice.style.left = (0.03 + (index if index < 3 else index - 3) * 0.32) * self.pageWidth\n\t\t\t\t\n\t\t\t\tcharBoxSide = 0.4 * self.pageHeight\n\t\t\t\tdice.inner.style.top = 0.2 * self.pageHeight - 0.6 * charBoxSide\n\t\t\t\tdice.inner.style.left = 0.15 * self.pageWidth - 0.5 * charBoxSide\n\t\t\t\t\n\t\t\t\tself.banner.style.top = 0.95 * self.pageHeight\n\t\t\t\tself.banner.style.left = 0.03 * self.pageWidth\n\t\t\t\tself.bannerLarge.style.fontSize = 0.015 * self.pageWidth\n\t\t\t\tself.bannerSmall.style.fontSize = 0.012 * self.pageWidth\n\t\t\t\t\n\t\t\tdice.inner.style.height = charBoxSide\n\t\t\tdice.inner.style.width = charBoxSide\n\t\t\tdice.inner.style.fontSize = charBoxSide\n\t\t\t\ndice = Dice ()\n"
	],
	"mappings": "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"
}