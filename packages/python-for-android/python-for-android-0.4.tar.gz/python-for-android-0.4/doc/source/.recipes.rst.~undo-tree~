"48909078eca0f7ca97baba86a4333b239f91055b"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#(" " 0 1 (fontified nil)) . -2708) (2707 . 2708) 2643) nil (22355 14507 259310 166000) 0 nil]) ((#("The prebuild of every recipe is run before the build of any recipe,
and likewise the build of every recipe is run before the postbuild of
any. This lets you strictly order the build process.
" 0 68 (fontified t) 68 138 (fontified t) 138 191 (fontified t)) . 2731) (undo-tree-id43 . -190) (undo-tree-id44 . -66) (undo-tree-id45 . -190) (undo-tree-id46 . -66) (undo-tree-id47 . -190) 2921) nil (22355 14507 259344 605000) 0 nil]) ((2724 . 2730) (2704 . 2724) (2684 . 2704) (2664 . 2684) (#("y" 0 1 (fontified t)) . -2664) (#("a" 0 1 (fontified t)) . -2665) (#("s" 0 1 (fontified t)) . -2666) (2663 . 2667) (2643 . 2663) (#(" " 0 1 (fontified t)) . -2643) (#(" " 0 1 (fontified t)) . -2644) (#(" " 0 1 (fontified t)) . -2645) (#(" " 0 1 (fontified t)) . -2646) (#(" " 0 1 (fontified t)) . -2647) (#(" " 0 1 (fontified t)) . -2648) (#(" " 0 1 (fontified t)) . -2649) (#(" " 0 1 (fontified t)) . -2650) (#(" " 0 1 (fontified t)) . -2651) (#(" " 0 1 (fontified t)) . -2652) (2642 . 2653) (t 22355 14010 161457 282000)) nil (22355 14507 259365 172000) 0 nil]) ((#(" " 0 1 (fontified t)) . 2007) (undo-tree-id42 . -1) (t 22355 14009 301441 922000)) nil (22355 14010 119331 344000) 0 nil]) ((2008 . 2009)) nil (22355 14009 255233 246000) 0 nil]) ((#("it is omitted, your recipe won't work.
" 0 39 (fontified t)) . 2009) 2036) nil (22355 14009 255246 924000) 0 nil]) ((#("as the recipe instance to build with. If" 0 40 (fontified t)) . 2008)) nil (22355 14009 255254 561000) 0 nil]) ((1971 . 1979) (#("u" 0 1 (fontified t)) . -1971) (#("s" 0 1 (fontified t)) . -1972) (#("e" 0 1 (fontified t)) . -1973) (#("d" 0 1 (fontified t)) . -1974) (t 22355 13999 507933 666000)) nil (22355 14009 255266 512000) 0 nil]) ((#(" is also vital" 0 14 (fontified t)) . 1952)) nil (22355 13999 455211 612000) 0 nil]) ((1910 . 1926)) nil (22355 13999 455222 663000) 0 nil]) ((#("e" 0 1 (fontified t)) . 1910)) nil (22355 13999 455227 307000) 0 nil]) ((#("h" 0 1 (fontified t)) . 1910)) nil (22355 13999 455231 854000) 0 nil]) ((#("T" 0 1 (fontified t)) . 1910) (t 22355 13970 827421 348000)) nil (22355 13999 455237 464000) 0 nil]) ((#(". " 0 2 (fontified t)) . 987)) nil (22355 13970 758951 403000) 0 nil]) ((#("recipe" 0 6 (fontified t)) . 987)) nil (22355 13970 758966 34000) 0 nil]) ((#("own " 0 4 (fontified t)) . 987)) nil (22355 13970 758973 651000) 0 nil]) ((#("your " 0 5 (fontified t)) . 987)) nil (22355 13970 758979 758000) 0 nil]) ((#("This documentation jumps straight to the practicalities of creating
" 0 68 (fontified t)) . 987) (undo-tree-id41 . -53) 1040 (t 22355 13955 717151 404000)) nil (22355 13970 759002 514000) 0 nil]) ((647 . 660)) nil (22355 13955 679238 554000) 0 nil]) ((647 . 655) (#("f" 0 1 (fontified t)) . -647) (#("r" 0 1 (fontified t)) . -648) (#("o" 0 1 (fontified t)) . -649) (#("m" 0 1 (fontified t)) . -650) (#(" " 0 1 (fontified t)) . -651) (#("p" 0 1 (fontified t)) . -652) (633 . 653) (#("c" 0 1 (fontified t)) . -633) (#("a" 0 1 (fontified t)) . -634) (625 . 635) (#(":" 0 1 (fontified t)) . -625) (#(" " 0 1 (fontified t)) . -626) (625 . 627)) nil (22355 13955 679257 27000) 0 nil]) ((#(". The" 0 5 (fontified t)) . 625) (undo-tree-id40 . 1) (t 22355 13944 120277 545000)) nil (22355 13955 679282 765000) 0 nil]) ((573 . 576)) nil (22355 13944 86794 460000) 0 nil]) ((#("the " 0 4 (fontified t)) . 573)) nil (22355 13944 86806 187000) 0 nil]) ((#("for " 0 4 (fontified t)) . 573)) nil (22355 13944 86814 115000) 0 nil]) ((#("all " 0 4 (fontified t)) . 573)) nil (22355 13944 86820 393000) 0 nil]) ((#("at " 0 3 (fontified t)) . 573)) nil (22355 13944 86826 583000) 0 nil]) ((548 . 552)) nil (22355 13944 86830 790000) 0 nil]) ((#(", and no" 0 8 (fontified t)) . 548)) nil (22355 13944 86834 508000) 0 nil]) ((642 . 646) (t 22355 13930 336697 934000)) nil (22355 13944 86839 971000) 0 nil]) ((641 . 642)) nil (22355 13930 287324 390000) 0 nil]) ((#("; if you just want to build an APK, you can jump" 0 48 (fontified t)) . 641) (t 22355 13917 243130 634000)) nil (22355 13930 287335 528000) 0 nil]) ((#(" " 0 1 (fontified nil)) . -155) (154 . 155) (#(" " 0 1 (fontified nil)) . -88) (87 . 88) (#(" " 0 1 (fontified nil rear-nonsticky t)) . -188) (undo-tree-id39 . -1) (188 . 189) (#("
" 0 1 (fontified t rear-nonsticky t)) . 188) (93 . 94) (#("
" 0 1 (fontified t)) . 93) (t 22355 13915 959774 368000)) nil (22355 13917 198471 491000) 0 nil]) ((62 . 68) (t 22355 13910 106336 435000)) nil (22355 13915 918206 677000) 0 nil]) ((249 . 263) (#("n" 0 1 (fontified t)) . -249) (#("a" 0 1 (fontified t)) . -250) (248 . 251) (#("/" 0 1 (fontified t)) . -248) (#("i" 0 1 (fontified t)) . -249) (#("n" 0 1 (fontified t)) . -250) (#("s" 0 1 (fontified t)) . -251) (#("t" 0 1 (fontified t)) . -252) (#("a" 0 1 (fontified t)) . -253) (#("l" 0 1 (fontified t)) . -254) (#("l" 0 1 (fontified t)) . -255) (239 . 256) (#("installing" 0 10 (fontified t)) . 239) (t 22355 13901 822855 72000)) nil (22355 13910 70438 844000) 0 nil]) ((207 . 214)) nil (22355 13901 774555 802000) 0 nil]) ((#("e" 0 1 (fontified t)) . 207) (undo-tree-id8 . 1) (undo-tree-id9 . 1)) nil (22355 13901 774575 738000) 0 nil]) ((#("s" 0 1 (fontified t)) . 207) (undo-tree-id10 . 1) (undo-tree-id11 . 1)) nil (22355 13901 774586 870000) 0 nil]) ((#("e" 0 1 (fontified t)) . 207) (undo-tree-id12 . 1) (undo-tree-id13 . 1)) nil (22355 13901 774596 709000) 0 nil]) ((#("h" 0 1 (fontified t)) . 207) (undo-tree-id14 . 1) (undo-tree-id15 . 1)) nil (22355 13901 774605 970000) 0 nil]) ((#("T" 0 1 (fontified t)) . 207) (undo-tree-id16 . 1) (undo-tree-id17 . 1)) nil (22355 13901 774615 395000) 0 nil]) ((#(" " 0 1 (fontified t)) . 207) (undo-tree-id18 . 1) (undo-tree-id19 . 1)) nil (22355 13901 774627 780000) 0 nil]) ((#("." 0 1 (fontified t)) . 207) (undo-tree-id20 . 1) (undo-tree-id21 . 1)) nil (22355 13901 774653 53000) 0 nil]) ((#("k" 0 1 (fontified t face rst-block)) . 207) (undo-tree-id22 . 1) (undo-tree-id23 . 1)) nil (22355 13901 774663 619000) 0 nil]) ((#("r" 0 1 (fontified t)) . 207) (undo-tree-id24 . 1) (undo-tree-id25 . 1)) nil (22355 13901 774673 293000) 0 nil]) ((#("o" 0 1 (fontified t)) . 207) (undo-tree-id26 . 1) (undo-tree-id27 . 1)) nil (22355 13901 774682 709000) 0 nil]) ((#("w" 0 1 (fontified t)) . 207) (undo-tree-id28 . 1) (undo-tree-id29 . 1)) nil (22355 13901 774692 260000) 0 nil]) ((#("This documentation describes how python-for-android (p4a) recipes
" 0 66 (fontified t)) . 207) (undo-tree-id30 . 66) (undo-tree-id31 . 66) (undo-tree-id32 . -65)) nil (22355 13901 774704 195000) 0 nil]) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 207) (undo-tree-id33 . 2) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -2) (undo-tree-id38 . -1) 208) nil (22355 13901 774722 600000) 0 nil]) ((#("A" 0 1 (fontified t)) . -207) (#("t" 0 1 (fontified t)) . -208) (#(" " 0 1 (fontified t)) . -209) (#("a" 0 1 (fontified t)) . -210) (#("n" 0 1 (fontified t)) . -211) (#("y" 0 1 (fontified t)) . -212) (#(" " 0 1 (fontified t)) . -213) (#("s" 0 1 (fontified t)) . -214) (#("t" 0 1 (fontified t)) . -215) (#("a" 0 1 (fontified t)) . -216) (#("g" 0 1 (fontified t)) . -217) (#("e" 0 1 (fontified t)) . -218) (#(" " 0 1 (fontified t)) . -219) (#("y" 0 1 (fontified t)) . -220) (#("o" 0 1 (fontified t)) . -221) (#("u" 0 1 (fontified t)) . -222) (#(" " 0 1 (fontified t)) . -223) (207 . 224) (206 . 207) (205 . 206) 204 (t 22355 13890 2643 828000)) nil (22355 13901 774742 1000) 0 nil]) ((204 . 205)) nil (22355 13889 966437 459000) 0 nil]) ((#("can use the :code:`recipes` command to list available recipes. 
" 0 12 (fontified t) 12 18 (fontified t face rst-directive) 18 27 (fontified t face rst-external) 27 63 (fontified t) 63 64 (fontified t)) . 205) (undo-tree-id0 . -63) (undo-tree-id1 . -63) 225) nil (22355 13889 966487 81000) 0 nil]) ((#(" or :doc:`commands` documentation, or" 0 4 (fontified t) 4 9 (fontified t face rst-directive) 9 19 (fontified t face rst-external) 19 37 (fontified t)) . 204)) nil (22355 13889 966494 7000) 0 nil]) ((183 . 187)) nil (22355 13889 966498 354000) 0 nil]) ((#(" " 0 1 (fontified t)) . 183)) nil (22355 13889 966502 176000) 0 nil]) ((#("e" 0 1 (fontified t)) . 183)) nil (22355 13889 966506 218000) 0 nil]) ((#("h" 0 1 (fontified t)) . 183)) nil (22355 13889 966510 281000) 0 nil]) ((#("t" 0 1 (fontified t)) . 183)) nil (22355 13889 966514 266000) 0 nil]) ((#(" " 0 1 (fontified t)) . 183)) nil (22355 13889 966518 199000) 0 nil]) ((#("o" 0 1 (fontified t)) . 183)) nil (22355 13889 966522 292000) 0 nil]) ((#("t" 0 1 (fontified t)) . 183)) nil (22355 13889 966526 140000) 0 nil]) ((#(" " 0 1 (fontified t)) . 183)) nil (22355 13889 966530 190000) 0 nil]) ((#("t" 0 1 (fontified t)) . 183)) nil (22355 13889 966534 189000) 0 nil]) ((#("h" 0 1 (fontified t)) . 183)) nil (22355 13889 966538 311000) 0 nil]) ((#("g" 0 1 (fontified t)) . 183)) nil (22355 13889 966542 310000) 0 nil]) ((#("i" 0 1 (fontified t)) . 183)) nil (22355 13889 966546 203000) 0 nil]) ((#("a" 0 1 (fontified t)) . 183)) nil (22355 13889 966550 288000) 0 nil]) ((#("r" 0 1 (fontified t)) . 183)) nil (22355 13889 966554 157000) 0 nil]) ((#("t" 0 1 (fontified t)) . 183)) nil (22355 13889 966557 980000) 0 nil]) ((#("s" 0 1 (fontified t)) . 183)) nil (22355 13889 966562 32000) 0 nil]) ((nil rear-nonsticky nil 182 . 183) (nil fontified nil 182 . 183) (nil fontified nil 88 . 182) (#("
" 0 1 (fontified nil)) . -317) (182 . 318) 88) nil (22355 13889 966569 559000) 0 nil]) ((#("straight to the :doc:`quickstart` or :doc:`commands` documentation, or
can use the :code:`recipes` command to list available recipes. 
" 0 16 (fontified t) 16 21 (fontified t face rst-directive) 21 33 (fontified t face rst-external) 33 37 (fontified t) 37 42 (fontified t face rst-directive) 42 52 (fontified t face rst-external) 52 83 (fontified t) 83 89 (fontified t face rst-directive) 89 98 (fontified t face rst-external) 98 135 (fontified t)) . 718) (undo-tree-id2 . -134) (undo-tree-id3 . -69) (undo-tree-id4 . -134) (undo-tree-id5 . -69) (undo-tree-id6 . -134) 852) nil (22355 13889 966590 89000) 0 nil]) ((174 . 182) (#("t" 0 1 (fontified t)) . -174) (#("i" 0 1 (fontified t)) . -175) (#("g" 0 1 (fontified t)) . -176) (169 . 177) (149 . 169) (129 . 149) (#("n" 0 1 (fontified t)) . -129) (114 . 130)) nil (22355 13889 966601 439000) 0 nil]) ((#(" " 0 1 (fontified nil)) . -88) (87 . 88) (#(" " 0 1 (fontified t)) . 114)) nil (22355 13889 966610 376000) 0 nil]) ((102 . 115) (82 . 102) (62 . 82) (#("r" 0 1 (fontified t)) . -62) (#("e" 0 1 (fontified t)) . -63) (#("c" 0 1 (fontified t)) . -64) (#("i" 0 1 (fontified t)) . -65) (#("p" 0 1 (fontified t)) . -66) (#("e" 0 1 (fontified t)) . -67) (#("s" 0 1 (fontified t)) . -68) (#(" " 0 1 (fontified t)) . -69) (#("w" 0 1 (fontified t)) . -70) (#("o" 0 1 (fontified t)) . -71) (#("r" 0 1 (fontified t)) . -72) (#("k" 0 1 (fontified t)) . -73) (#("," 0 1 (fontified t)) . -74) (#(" " 0 1 (fontified t)) . -75) (70 . 76) (50 . 70) (30 . 50) (#("s" 0 1 (fontified t)) . -30) (#("e" 0 1 (fontified t)) . -31) (#("c" 0 1 (fontified t)) . -32) (24 . 33) (#("d" 0 1 (fontified t)) . -24) (19 . 25) (#("I" 0 1 (fontified t)) . -19) (#("f" 0 1 (fontified t)) . -20) (#(" " 0 1 (fontified t)) . -21) (19 . 22) (18 . 19)) nil (22355 13889 966634 741000) 0 nil]) ((#("
" 0 1 (fontified t)) . 19) (undo-tree-id7 . 1)) nil (22355 13889 966655 91000) 0 nil]) ((18 . 19) (17 . 18) 13 (t 22355 12126 601429 467000)) nil (22355 13889 966662 174000) 0 nil]) nil nil (22355 13889 966665 922000) 0 nil] #1# 3031 76 nil]