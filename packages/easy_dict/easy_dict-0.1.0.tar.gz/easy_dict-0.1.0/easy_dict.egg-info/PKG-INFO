Metadata-Version: 1.1
Name: easy-dict
Version: 0.1.0
Summary: Easier way of accessing & assigning information in a nested dictionary.
Home-page: https://github.com/cahoy/NestedDictionary
Author: Cahyo Primawidodo
Author-email: cahyo.p@gmail.com
License: MIT
Description: Nested Dict
        ===========
        
        #### drop-in replacement for the built-in dictionary
        These assignments to nested dict object are valid.
        
            nd = NestedDict()
            nd['foo'] = 'bar'
            nd.update({'foo': 'bar'})
            nd.setdefault(key='foo', default='bar')
        
        #### if the key is a tuple, it trigger special function.
        
            n['a'] = None
            n[('a', 'b')] = None    # 'b' is a new key at 'a'
            n[('b', 'c')] = 123     # 'c' is a new key at 'b'
        
            assert n == {'a': {'b': {'c': 123}}}
            
        #### if the key is a string with <code> '/' </code>, trigger the nested function
        
            n['a/b/c'] = 123
            assert n == {'a': {'b': {'c': 123}}}
        
        ### access nested content easily
        
            k = nd.NestedDict({'a': {'b': {'c': 123}}, 'd': {'e': 456}})
        
            assert k['a']['b']['c'] == 123
            assert k['b']['c'] == 123
            assert k['c'] == 123
            
            assert k[['a', 'b', 'c']] == 123
            assert k[['b', 'c']] == 123
            assert k[['c']] == 123
            
            assert k['a/b/c'] == 123
            assert k['b/c'] == 123
        
        
Keywords: easy simple nested flat default dictionary
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Other Audience
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
