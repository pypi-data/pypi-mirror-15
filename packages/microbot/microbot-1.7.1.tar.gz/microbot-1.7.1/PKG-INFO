Metadata-Version: 1.1
Name: microbot
Version: 1.7.1
Summary: Connect telegram bots to your API
Home-page: https://github.com/jlmadurga/microbot
Author: Juan Madurga
Author-email: jlmadurga@gmail.com
License: BSD
Description: =============================
        microbot
        =============================
        CI:
        
        .. image:: https://travis-ci.org/jlmadurga/microbot.svg?branch=master
            :target: https://travis-ci.org/jlmadurga/microbot
        
        .. image:: https://coveralls.io/repos/github/jlmadurga/microbot/badge.svg?branch=master 
        	:target: https://coveralls.io/github/jlmadurga/microbot?branch=master
          
        .. image:: https://requires.io/github/jlmadurga/microbot/requirements.svg?branch=master
             :target: https://requires.io/github/jlmadurga/microbot/requirements/?branch=master
             :alt: Requirements Status
             
        PyPI:
        
        
        .. image:: https://img.shields.io/pypi/v/microbot.svg
                :target: https://pypi.python.org/pypi/microbot
        
        Docs:
        
        .. image:: https://readthedocs.org/projects/microbot/badge/?version=latest
                :target: https://readthedocs.org/projects/microbot/?badge=latest
                :alt: Documentation Status
        
        
        Connect instant messaging bots to your APIs. 
        
        The idea is to use it as microservice to host messaging bots leaving the application model into current APIs. 
        
        Documentation
        -------------
        
        The full documentation is at https://microbot.readthedocs.org.
        
        Quickstart
        ----------
        
        Install microbot::
        
            pip install microbot
        
        Then use it in a project::
        
            import microbot
        
        Features
        --------
        
        * Telegram, Kik and Facebook Messenger bots
        * Message handling definition with regex, as django urls.
        * HTTP methods: GET/POST/PUT/DELETE/PATCH
        * Text responses and keyboards with Jinja2 templates
        * Chat State handling
        * Asynchronous processing of messages
        * Media messages not supported
        
        
        
        Running Tests
        --------------
        
        Does the code actually work?
        
        ::
        
            source <YOURVIRTUALENV>/bin/activate
            (myenv) $ pip install -r requirements/test.txt
            (myenv) $ make test
            (myenv) $ make test-all
        
        
        
        
        
        
        
        History
        -------
        
        0.1.0 (2016-03-07)
        ++++++++++++++++++
        
        * First release on PyPI.
        
Keywords: microbot
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
