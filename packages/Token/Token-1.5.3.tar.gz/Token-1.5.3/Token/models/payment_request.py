# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class PaymentRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        PaymentRequest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'payee_account_id': 'str',
            'description': 'str',
            'amount': 'Money',
            'protocol': 'str',
            'destination': 'str'
        }

        self.attribute_map = {
            'payee_account_id': 'payeeAccountId',
            'description': 'description',
            'amount': 'amount',
            'protocol': 'protocol',
            'destination': 'destination'
        }

        self._payee_account_id = None
        self._description = None
        self._amount = None
        self._protocol = None
        self._destination = None

    @property
    def payee_account_id(self):
        """
        Gets the payee_account_id of this PaymentRequest.


        :return: The payee_account_id of this PaymentRequest.
        :rtype: str
        """
        return self._payee_account_id

    @payee_account_id.setter
    def payee_account_id(self, payee_account_id):
        """
        Sets the payee_account_id of this PaymentRequest.


        :param payee_account_id: The payee_account_id of this PaymentRequest.
        :type: str
        """
        self._payee_account_id = payee_account_id

    @property
    def description(self):
        """
        Gets the description of this PaymentRequest.


        :return: The description of this PaymentRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this PaymentRequest.


        :param description: The description of this PaymentRequest.
        :type: str
        """
        self._description = description

    @property
    def amount(self):
        """
        Gets the amount of this PaymentRequest.


        :return: The amount of this PaymentRequest.
        :rtype: Money
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """
        Sets the amount of this PaymentRequest.


        :param amount: The amount of this PaymentRequest.
        :type: Money
        """
        self._amount = amount

    @property
    def protocol(self):
        """
        Gets the protocol of this PaymentRequest.


        :return: The protocol of this PaymentRequest.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """
        Sets the protocol of this PaymentRequest.


        :param protocol: The protocol of this PaymentRequest.
        :type: str
        """
        self._protocol = protocol

    @property
    def destination(self):
        """
        Gets the destination of this PaymentRequest.


        :return: The destination of this PaymentRequest.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """
        Sets the destination of this PaymentRequest.


        :param destination: The destination of this PaymentRequest.
        :type: str
        """
        self._destination = destination

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

